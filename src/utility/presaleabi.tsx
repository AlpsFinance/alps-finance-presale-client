export const preSaleAbi = {
  contractName: "Presale",
  abi: [
    {
      inputs: [
        {
          internalType: "address",
          name: "_tokenAddress",
          type: "address",
        },
        {
          internalType: "address payable",
          name: "_presaleReceiver",
          type: "address",
        },
      ],
      stateMutability: "nonpayable",
      type: "constructor",
    },
    {
      inputs: [],
      name: "presaleMaximumPresaleAmountInvalid",
      type: "error",
    },
    {
      inputs: [],
      name: "presaleMimumumUSDPurchaseInvalid",
      type: "error",
    },
    {
      inputs: [],
      name: "presaleNativeTokenPaymentNotSufficient",
      type: "error",
    },
    {
      inputs: [],
      name: "presaleRoundClosed",
      type: "error",
    },
    {
      inputs: [],
      name: "presaleStartingTimeInvalid",
      type: "error",
    },
    {
      inputs: [],
      name: "presaleTokenNotAvailable",
      type: "error",
    },
    {
      inputs: [],
      name: "presaleUSDPriceInvalid",
      type: "error",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "previousOwner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "newOwner",
          type: "address",
        },
      ],
      name: "OwnershipTransferred",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "paymentTokenAddress",
          type: "address",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "amount",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "paymentTokenamount",
          type: "uint256",
        },
      ],
      name: "TokenPresold",
      type: "event",
    },
    {
      inputs: [],
      name: "owner",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "presaleReceiver",
      outputs: [
        {
          internalType: "address payable",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "renounceOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "tokenAddress",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "totalPresaleRound",
      outputs: [
        {
          internalType: "uint256",
          name: "_value",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "newOwner",
          type: "address",
        },
      ],
      name: "transferOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "getCurrentPresaleRound",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "getCurrentPresaleDetails",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "_paymentTokenAddress",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "_amount",
          type: "uint256",
        },
        {
          internalType: "address",
          name: "_aggregatorTokenAddress",
          type: "address",
        },
      ],
      name: "presaleTokens",
      outputs: [],
      stateMutability: "payable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address payable",
          name: "_newPresaleReceiver",
          type: "address",
        },
      ],
      name: "setPresaleReceiver",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "_newTokenAddress",
          type: "address",
        },
      ],
      name: "setPresaleTokenAddress",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "_presaleRound",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "_startingTime",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "_usdPrice",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "_minimumUSDPurchase",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "_maximumPresaleAmount",
          type: "uint256",
        },
      ],
      name: "setPresaleRound",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
  ],
  metadata:
    '{"compiler":{"version":"0.8.11+commit.d7f03943"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"address payable","name":"_presaleReceiver","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"presaleMaximumPresaleAmountInvalid","type":"error"},{"inputs":[],"name":"presaleMimumumUSDPurchaseInvalid","type":"error"},{"inputs":[],"name":"presaleNativeTokenPaymentNotSufficient","type":"error"},{"inputs":[],"name":"presaleRoundClosed","type":"error"},{"inputs":[],"name":"presaleStartingTimeInvalid","type":"error"},{"inputs":[],"name":"presaleTokenNotAvailable","type":"error"},{"inputs":[],"name":"presaleUSDPriceInvalid","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"address","name":"paymentTokenAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paymentTokenamount","type":"uint256"}],"name":"TokenPresold","type":"event"},{"inputs":[],"name":"getCurrentPresaleDetails","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentPresaleRound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"presaleReceiver","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_paymentTokenAddress","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_aggregatorTokenAddress","type":"address"}],"name":"presaleTokens","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"_newPresaleReceiver","type":"address"}],"name":"setPresaleReceiver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_presaleRound","type":"uint256"},{"internalType":"uint256","name":"_startingTime","type":"uint256"},{"internalType":"uint256","name":"_usdPrice","type":"uint256"},{"internalType":"uint256","name":"_minimumUSDPurchase","type":"uint256"},{"internalType":"uint256","name":"_maximumPresaleAmount","type":"uint256"}],"name":"setPresaleRound","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newTokenAddress","type":"address"}],"name":"setPresaleTokenAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalPresaleRound","outputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"presaleTokens(address,uint256,address)":{"details":"_paymentTokenAddress - Address of the token use to pay (address 0 is for native token)_amount - Amount denominated in the `paymentTokenAddress` being paid_aggregatorTokenAddress - Use to convert price with Chainlink"},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setPresaleReceiver(address)":{"details":"_newPresaleReceiver - Address that\'ll receive the presale payment token"},"setPresaleRound(uint256,uint256,uint256,uint256,uint256)":{"details":"_presaleRound - The presale round chosen_startingTime - The starting Presale time_usdPrice - The USD Price of the Token in certain Presale Round_minimumUSDPurchase - The minimum USD amount to purchase the token_maximumPresaleAmount - The maximum amount of token available for a presale round"},"setPresaleTokenAddress(address)":{"details":"_newTokenAddress - Address of token that\'ll be presaled"},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{"getCurrentPresaleDetails()":{"notice":"Getting the Current Presale Details, including: - Starting Time - USD Price - Minimum USD Purchase - Maximum Presale Amount"},"getCurrentPresaleRound()":{"notice":"Get Current Presale Round"},"presaleTokens(address,uint256,address)":{"notice":"Execute the Presale of ALPS Token in exchange of other token"},"setPresaleReceiver(address)":{"notice":"Set new Presale Receiver Address"},"setPresaleRound(uint256,uint256,uint256,uint256,uint256)":{"notice":"Creating/Updating a presale round information"},"setPresaleTokenAddress(address)":{"notice":"Set new Presale Token Address"}},"version":1}},"settings":{"compilationTarget":{"project:/contracts/presale/Presale.sol":"Presale"},"evmVersion":"london","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"keccak256":"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5","license":"MIT","urls":["bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120","dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG"]},"@openzeppelin/contracts/access/Ownable.sol":{"keccak256":"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9","license":"MIT","urls":["bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981","dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"]},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"keccak256":"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935","license":"MIT","urls":["bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2","dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud"]},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2","license":"MIT","urls":["bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824","dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei"]},"@openzeppelin/contracts/utils/Context.sol":{"keccak256":"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7","license":"MIT","urls":["bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92","dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"]},"@openzeppelin/contracts/utils/Counters.sol":{"keccak256":"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1","license":"MIT","urls":["bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee","dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"]},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"keccak256":"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21","license":"MIT","urls":["bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2","dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y"]},"project:/contracts/libraries/PriceConverter.sol":{"keccak256":"0x1c7379e2f032a302a999b9f49bd5b0d79bc5d260aeae8d8e173dfdcae2bebbb8","license":"AGPL-3.0","urls":["bzz-raw://c8968f30c2b173c3fa28a669fe95d09721ffad661b7632d36de73a286e06d124","dweb:/ipfs/QmXCh1gfzimGC3WLPLyUSsdy7UWGNKt6Fsc7f45sRyYRJe"]},"project:/contracts/presale/Presale.sol":{"keccak256":"0xaa131e1549fe97db2cfc4468c5ae1411bec8d1f44d95729730685e7ca9e5273a","license":"AGPL-3.0","urls":["bzz-raw://6c37089da85e66a0692ad4dfe1dbdbcaa9cf2c7bed625113f458d2f7650c36ee","dweb:/ipfs/QmXnGaY8LhJHqA1uZmKMEt6Sc9V1uqmzE3S29L7GnmgVzZ"]},"project:/contracts/token/interfaces/IERC20Custom.sol":{"keccak256":"0x6f50952568dc5b577661f6d1730b39cfa7628a39390103c89190afdfc565d1f4","license":"AGPL-3.0","urls":["bzz-raw://480386fcd5b5e3456e80150bf5444f1b2b067746be0245f287b78fc03e81133a","dweb:/ipfs/QmWBfMsjQPEKj7jav96428j8Ss4AUVtkj69nsVsPZb8E1S"]}},"version":1}',
  bytecode:
    "",
  deployedBytecode:
    "0x6080604052600436106100a75760003560e01c80639d76ea58116100645780639d76ea5814610167578063c143641514610187578063c829d1db146101a7578063ec2b3523146101c7578063f2fde38b146101fc578063feda925b1461021c57600080fd5b80631c63f0ed146100ac5780633c0c134d146100d45780636a107cd8146100f6578063715018a6146101095780638da5cb5b1461011e578063962de5c014610150575b600080fd5b3480156100b857600080fd5b506100c161023c565b6040519081526020015b60405180910390f35b3480156100e057600080fd5b506100f46100ef366004610a8c565b610291565b005b6100f4610104366004610aa9565b6102e6565b34801561011557600080fd5b506100f46106df565b34801561012a57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100cb565b34801561015c57600080fd5b506002546100c19081565b34801561017357600080fd5b50600354610138906001600160a01b031681565b34801561019357600080fd5b50600454610138906001600160a01b031681565b3480156101b357600080fd5b506100f46101c2366004610aeb565b610715565b3480156101d357600080fd5b506101dc61086d565b6040805194855260208501939093529183015260608201526080016100cb565b34801561020857600080fd5b506100f4610217366004610a8c565b6108ac565b34801561022857600080fd5b506100f4610237366004610a8c565b610947565b600080600161024a60025490565b6102549190610b3c565b90505b801561028957600081815260056020526040902054421061027757919050565b8061028181610b53565b915050610257565b506000905090565b6000546001600160a01b031633146102c45760405162461bcd60e51b81526004016102bb90610b6a565b60405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600260015414156103395760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102bb565b600260015560008061034961086d565b50509150915081421061036f576040516304d61c6f60e41b815260040160405180910390fd5b6001600160a01b03851660009081526006602052604090205460ff16156103a9576040516303003c8560e21b815260040160405180910390fd5b60035460408051633fabe5a360e21b815290516001600160a01b039283169286926000929184169163feaf968c9160048082019260a0929091908290030181865afa1580156103fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104209190610bbe565b50505091505060006105076105016104fb84866001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610470573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104949190610c0e565b886001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f69190610c0e565b610993565b8a610a06565b86610a1b565b90506001600160a01b0389166105a557873410156105385760405163854a356160e01b815260040160405180910390fd5b6004546040516001600160a01b039091169089156108fc02908a906000818181858888f19350505050158015610572573d6000803e3d6000fd5b5060405133904780156108fc02916000818181858888f1935050505015801561059f573d6000803e3d6000fd5b5061062a565b600480546040516323b872dd60e01b815233928101929092526001600160a01b039081166024830152604482018a90528a91908216906323b872dd906064016020604051808303816000875af1158015610603573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106279190610c31565b50505b6040516340c10f1960e01b8152336004820152602481018290526001600160a01b038516906340c10f1990604401600060405180830381600087803b15801561067257600080fd5b505af1158015610686573d6000803e3d6000fd5b505060408051848152602081018c90526001600160a01b038d1693503392507f69902df1d9bae4b2a08b9e9d689906299b4b15ac10fbbf560d019b5c73fd35d6910160405180910390a350506001805550505050505050565b6000546001600160a01b031633146107095760405162461bcd60e51b81526004016102bb90610b6a565b6107136000610a27565b565b6000546001600160a01b0316331461073f5760405162461bcd60e51b81526004016102bb90610b6a565b6000858152600560205260409020805460018201546002830154600390930154919290918315801561076f575082155b8015610779575081155b8015610783575080155b1561079657610796600280546001019055565b8715806107cc575088158015906107cc5750600560006107b760018c610b3c565b81526020019081526020016000206000015488105b156107ea57604051633863ce1d60e01b815260040160405180910390fd5b86610808576040516329198c7f60e11b815260040160405180910390fd5b8561082657604051630746844f60e31b815260040160405180910390fd5b8461084457604051639f2bfa4160e01b815260040160405180910390fd5b505050600095865250600560205260409094209283556001830191909155600282015560030155565b600080600080600061087d61023c565b600090815260056020526040902080546001820154600283015460039093015491989097509195509350915050565b6000546001600160a01b031633146108d65760405162461bcd60e51b81526004016102bb90610b6a565b6001600160a01b03811661093b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102bb565b61094481610a27565b50565b6000546001600160a01b031633146109715760405162461bcd60e51b81526004016102bb90610b6a565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60008160ff168360ff1610156109cc576109ad8383610c53565b6109bb9060ff16600a610d5a565b6109c59085610d66565b90506109ff565b8160ff168360ff1611156109fc576109e48284610c53565b6109f29060ff16600a610d5a565b6109c59085610e01565b50825b9392505050565b6000610a128284610e2f565b90505b92915050565b6000610a128284610e4e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461094457600080fd5b600060208284031215610a9e57600080fd5b81356109ff81610a77565b600080600060608486031215610abe57600080fd5b8335610ac981610a77565b9250602084013591506040840135610ae081610a77565b809150509250925092565b600080600080600060a08688031215610b0357600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b634e487b7160e01b600052601160045260246000fd5b600082821015610b4e57610b4e610b26565b500390565b600081610b6257610b62610b26565b506000190190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b805169ffffffffffffffffffff81168114610bb957600080fd5b919050565b600080600080600060a08688031215610bd657600080fd5b610bdf86610b9f565b9450602086015193506040860151925060608601519150610c0260808701610b9f565b90509295509295909350565b600060208284031215610c2057600080fd5b815160ff811681146109ff57600080fd5b600060208284031215610c4357600080fd5b815180151581146109ff57600080fd5b600060ff821660ff841680821015610c6d57610c6d610b26565b90039392505050565b600181815b80851115610cb1578160001904821115610c9757610c97610b26565b80851615610ca457918102915b93841c9390800290610c7b565b509250929050565b600082610cc857506001610a15565b81610cd557506000610a15565b8160018114610ceb5760028114610cf557610d11565b6001915050610a15565b60ff841115610d0657610d06610b26565b50506001821b610a15565b5060208310610133831016604e8410600b8410161715610d34575081810a610a15565b610d3e8383610c76565b8060001904821115610d5257610d52610b26565b029392505050565b6000610a128383610cb9565b60006001600160ff1b0381841382841380821686840486111615610d8c57610d8c610b26565b600160ff1b6000871282811687830589121615610dab57610dab610b26565b60008712925087820587128484161615610dc757610dc7610b26565b87850587128184161615610ddd57610ddd610b26565b505050929093029392505050565b634e487b7160e01b600052601260045260246000fd5b600082610e1057610e10610deb565b600160ff1b821460001984141615610e2a57610e2a610b26565b500590565b6000816000190483118215151615610e4957610e49610b26565b500290565b600082610e5d57610e5d610deb565b50049056fea2646970667358221220e1c4ef778135ae886d684e88c37a41ba9f73a9aa5cc4b444fe5d207e7d34a9ce64736f6c634300080b0033",
  immutableReferences: {},
  generatedSources: [
    {
      ast: {
        nodeType: "YulBlock",
        src: "0:545:55",
        statements: [
          {
            nodeType: "YulBlock",
            src: "6:3:55",
            statements: [],
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "59:86:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "123:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "132:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "135:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "125:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "125:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "125:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "82:5:55",
                          },
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "93:5:55",
                              },
                              {
                                arguments: [
                                  {
                                    arguments: [
                                      {
                                        kind: "number",
                                        nodeType: "YulLiteral",
                                        src: "108:3:55",
                                        type: "",
                                        value: "160",
                                      },
                                      {
                                        kind: "number",
                                        nodeType: "YulLiteral",
                                        src: "113:1:55",
                                        type: "",
                                        value: "1",
                                      },
                                    ],
                                    functionName: {
                                      name: "shl",
                                      nodeType: "YulIdentifier",
                                      src: "104:3:55",
                                    },
                                    nodeType: "YulFunctionCall",
                                    src: "104:11:55",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "117:1:55",
                                    type: "",
                                    value: "1",
                                  },
                                ],
                                functionName: {
                                  name: "sub",
                                  nodeType: "YulIdentifier",
                                  src: "100:3:55",
                                },
                                nodeType: "YulFunctionCall",
                                src: "100:19:55",
                              },
                            ],
                            functionName: {
                              name: "and",
                              nodeType: "YulIdentifier",
                              src: "89:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "89:31:55",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "79:2:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "79:42:55",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "72:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "72:50:55",
                  },
                  nodeType: "YulIf",
                  src: "69:70:55",
                },
              ],
            },
            name: "validator_revert_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "48:5:55",
                type: "",
              },
            ],
            src: "14:131:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "256:287:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "302:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "311:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "314:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "304:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "304:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "304:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "277:7:55",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "286:9:55",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "273:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "273:23:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "298:2:55",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "269:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "269:32:55",
                  },
                  nodeType: "YulIf",
                  src: "266:52:55",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "327:29:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "346:9:55",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "340:5:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "340:16:55",
                  },
                  variables: [
                    {
                      name: "value",
                      nodeType: "YulTypedName",
                      src: "331:5:55",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "390:5:55",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_address",
                      nodeType: "YulIdentifier",
                      src: "365:24:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "365:31:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "365:31:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "405:15:55",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "415:5:55",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "405:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "429:40:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "454:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "465:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "450:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "450:18:55",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "444:5:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "444:25:55",
                  },
                  variables: [
                    {
                      name: "value_1",
                      nodeType: "YulTypedName",
                      src: "433:7:55",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value_1",
                        nodeType: "YulIdentifier",
                        src: "503:7:55",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_address",
                      nodeType: "YulIdentifier",
                      src: "478:24:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "478:33:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "478:33:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "520:17:55",
                  value: {
                    name: "value_1",
                    nodeType: "YulIdentifier",
                    src: "530:7:55",
                  },
                  variableNames: [
                    {
                      name: "value1",
                      nodeType: "YulIdentifier",
                      src: "520:6:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_addresst_address_payable_fromMemory",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "214:9:55",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "225:7:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "237:6:55",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "245:6:55",
                type: "",
              },
            ],
            src: "150:393:55",
          },
        ],
      },
      contents:
        "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_payable_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n}",
      id: 55,
      language: "Yul",
      name: "#utility.yul",
    },
  ],
  deployedGeneratedSources: [
    {
      ast: {
        nodeType: "YulBlock",
        src: "0:9022:55",
        statements: [
          {
            nodeType: "YulBlock",
            src: "6:3:55",
            statements: [],
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "115:76:55",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "125:26:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "137:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "148:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "133:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "133:18:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "125:4:55",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "167:9:55",
                      },
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "178:6:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "160:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "160:25:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "160:25:55",
                },
              ],
            },
            name: "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "84:9:55",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "95:6:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "106:4:55",
                type: "",
              },
            ],
            src: "14:177:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "241:86:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "305:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "314:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "317:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "307:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "307:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "307:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "264:5:55",
                          },
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "275:5:55",
                              },
                              {
                                arguments: [
                                  {
                                    arguments: [
                                      {
                                        kind: "number",
                                        nodeType: "YulLiteral",
                                        src: "290:3:55",
                                        type: "",
                                        value: "160",
                                      },
                                      {
                                        kind: "number",
                                        nodeType: "YulLiteral",
                                        src: "295:1:55",
                                        type: "",
                                        value: "1",
                                      },
                                    ],
                                    functionName: {
                                      name: "shl",
                                      nodeType: "YulIdentifier",
                                      src: "286:3:55",
                                    },
                                    nodeType: "YulFunctionCall",
                                    src: "286:11:55",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "299:1:55",
                                    type: "",
                                    value: "1",
                                  },
                                ],
                                functionName: {
                                  name: "sub",
                                  nodeType: "YulIdentifier",
                                  src: "282:3:55",
                                },
                                nodeType: "YulFunctionCall",
                                src: "282:19:55",
                              },
                            ],
                            functionName: {
                              name: "and",
                              nodeType: "YulIdentifier",
                              src: "271:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "271:31:55",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "261:2:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "261:42:55",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "254:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "254:50:55",
                  },
                  nodeType: "YulIf",
                  src: "251:70:55",
                },
              ],
            },
            name: "validator_revert_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "230:5:55",
                type: "",
              },
            ],
            src: "196:131:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "402:177:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "448:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "457:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "460:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "450:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "450:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "450:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "423:7:55",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "432:9:55",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "419:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "419:23:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "444:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "415:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "415:32:55",
                  },
                  nodeType: "YulIf",
                  src: "412:52:55",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "473:36:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "499:9:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "486:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "486:23:55",
                  },
                  variables: [
                    {
                      name: "value",
                      nodeType: "YulTypedName",
                      src: "477:5:55",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "543:5:55",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_address",
                      nodeType: "YulIdentifier",
                      src: "518:24:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "518:31:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "518:31:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "558:15:55",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "568:5:55",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "558:6:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "368:9:55",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "379:7:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "391:6:55",
                type: "",
              },
            ],
            src: "332:247:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "688:352:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "734:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "743:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "746:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "736:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "736:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "736:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "709:7:55",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "718:9:55",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "705:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "705:23:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "730:2:55",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "701:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "701:32:55",
                  },
                  nodeType: "YulIf",
                  src: "698:52:55",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "759:36:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "785:9:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "772:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "772:23:55",
                  },
                  variables: [
                    {
                      name: "value",
                      nodeType: "YulTypedName",
                      src: "763:5:55",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "829:5:55",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_address",
                      nodeType: "YulIdentifier",
                      src: "804:24:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "804:31:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "804:31:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "844:15:55",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "854:5:55",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "844:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "868:42:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "895:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "906:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "891:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "891:18:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "878:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "878:32:55",
                  },
                  variableNames: [
                    {
                      name: "value1",
                      nodeType: "YulIdentifier",
                      src: "868:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "919:47:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "951:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "962:2:55",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "947:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "947:18:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "934:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "934:32:55",
                  },
                  variables: [
                    {
                      name: "value_1",
                      nodeType: "YulTypedName",
                      src: "923:7:55",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value_1",
                        nodeType: "YulIdentifier",
                        src: "1000:7:55",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_address",
                      nodeType: "YulIdentifier",
                      src: "975:24:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "975:33:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "975:33:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "1017:17:55",
                  value: {
                    name: "value_1",
                    nodeType: "YulIdentifier",
                    src: "1027:7:55",
                  },
                  variableNames: [
                    {
                      name: "value2",
                      nodeType: "YulIdentifier",
                      src: "1017:6:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_addresst_uint256t_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "638:9:55",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "649:7:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "661:6:55",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "669:6:55",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "677:6:55",
                type: "",
              },
            ],
            src: "584:456:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "1146:102:55",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "1156:26:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "1168:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1179:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "1164:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1164:18:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "1156:4:55",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "1198:9:55",
                      },
                      {
                        arguments: [
                          {
                            name: "value0",
                            nodeType: "YulIdentifier",
                            src: "1213:6:55",
                          },
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "1229:3:55",
                                    type: "",
                                    value: "160",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "1234:1:55",
                                    type: "",
                                    value: "1",
                                  },
                                ],
                                functionName: {
                                  name: "shl",
                                  nodeType: "YulIdentifier",
                                  src: "1225:3:55",
                                },
                                nodeType: "YulFunctionCall",
                                src: "1225:11:55",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "1238:1:55",
                                type: "",
                                value: "1",
                              },
                            ],
                            functionName: {
                              name: "sub",
                              nodeType: "YulIdentifier",
                              src: "1221:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "1221:19:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "1209:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1209:32:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "1191:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1191:51:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "1191:51:55",
                },
              ],
            },
            name: "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "1115:9:55",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "1126:6:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "1137:4:55",
                type: "",
              },
            ],
            src: "1045:203:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "1370:102:55",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "1380:26:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "1392:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1403:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "1388:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1388:18:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "1380:4:55",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "1422:9:55",
                      },
                      {
                        arguments: [
                          {
                            name: "value0",
                            nodeType: "YulIdentifier",
                            src: "1437:6:55",
                          },
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "1453:3:55",
                                    type: "",
                                    value: "160",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "1458:1:55",
                                    type: "",
                                    value: "1",
                                  },
                                ],
                                functionName: {
                                  name: "shl",
                                  nodeType: "YulIdentifier",
                                  src: "1449:3:55",
                                },
                                nodeType: "YulFunctionCall",
                                src: "1449:11:55",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "1462:1:55",
                                type: "",
                                value: "1",
                              },
                            ],
                            functionName: {
                              name: "sub",
                              nodeType: "YulIdentifier",
                              src: "1445:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "1445:19:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "1433:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1433:32:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "1415:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1415:51:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "1415:51:55",
                },
              ],
            },
            name: "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "1339:9:55",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "1350:6:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "1361:4:55",
                type: "",
              },
            ],
            src: "1253:219:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "1615:316:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "1662:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "1671:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "1674:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "1664:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1664:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "1664:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "1636:7:55",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1645:9:55",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "1632:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1632:23:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1657:3:55",
                        type: "",
                        value: "160",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "1628:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1628:33:55",
                  },
                  nodeType: "YulIf",
                  src: "1625:53:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "1687:33:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "1710:9:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "1697:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1697:23:55",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "1687:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "1729:42:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1756:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "1767:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "1752:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1752:18:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "1739:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1739:32:55",
                  },
                  variableNames: [
                    {
                      name: "value1",
                      nodeType: "YulIdentifier",
                      src: "1729:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "1780:42:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1807:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "1818:2:55",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "1803:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1803:18:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "1790:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1790:32:55",
                  },
                  variableNames: [
                    {
                      name: "value2",
                      nodeType: "YulIdentifier",
                      src: "1780:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "1831:42:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1858:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "1869:2:55",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "1854:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1854:18:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "1841:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1841:32:55",
                  },
                  variableNames: [
                    {
                      name: "value3",
                      nodeType: "YulIdentifier",
                      src: "1831:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "1882:43:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1909:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "1920:3:55",
                            type: "",
                            value: "128",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "1905:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1905:19:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "1892:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1892:33:55",
                  },
                  variableNames: [
                    {
                      name: "value4",
                      nodeType: "YulIdentifier",
                      src: "1882:6:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "1549:9:55",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "1560:7:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "1572:6:55",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "1580:6:55",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "1588:6:55",
                type: "",
              },
              {
                name: "value3",
                nodeType: "YulTypedName",
                src: "1596:6:55",
                type: "",
              },
              {
                name: "value4",
                nodeType: "YulTypedName",
                src: "1604:6:55",
                type: "",
              },
            ],
            src: "1477:454:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2121:206:55",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "2131:27:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "2143:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2154:3:55",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "2139:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2139:19:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "2131:4:55",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "2174:9:55",
                      },
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "2185:6:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "2167:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2167:25:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "2167:25:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "2212:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "2223:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "2208:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2208:18:55",
                      },
                      {
                        name: "value1",
                        nodeType: "YulIdentifier",
                        src: "2228:6:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "2201:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2201:34:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "2201:34:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "2255:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "2266:2:55",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "2251:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2251:18:55",
                      },
                      {
                        name: "value2",
                        nodeType: "YulIdentifier",
                        src: "2271:6:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "2244:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2244:34:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "2244:34:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "2298:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "2309:2:55",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "2294:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2294:18:55",
                      },
                      {
                        name: "value3",
                        nodeType: "YulIdentifier",
                        src: "2314:6:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "2287:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2287:34:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "2287:34:55",
                },
              ],
            },
            name: "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "2066:9:55",
                type: "",
              },
              {
                name: "value3",
                nodeType: "YulTypedName",
                src: "2077:6:55",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "2085:6:55",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "2093:6:55",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "2101:6:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "2112:4:55",
                type: "",
              },
            ],
            src: "1936:391:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2410:177:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "2456:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2465:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2468:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "2458:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2458:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "2458:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "2431:7:55",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "2440:9:55",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "2427:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2427:23:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2452:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "2423:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2423:32:55",
                  },
                  nodeType: "YulIf",
                  src: "2420:52:55",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "2481:36:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "2507:9:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "2494:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2494:23:55",
                  },
                  variables: [
                    {
                      name: "value",
                      nodeType: "YulTypedName",
                      src: "2485:5:55",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "2551:5:55",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_address",
                      nodeType: "YulIdentifier",
                      src: "2526:24:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2526:31:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "2526:31:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "2566:15:55",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "2576:5:55",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "2566:6:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_address_payable",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "2376:9:55",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "2387:7:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "2399:6:55",
                type: "",
              },
            ],
            src: "2332:255:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2624:95:55",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2641:1:55",
                        type: "",
                        value: "0",
                      },
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "2648:3:55",
                            type: "",
                            value: "224",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "2653:10:55",
                            type: "",
                            value: "0x4e487b71",
                          },
                        ],
                        functionName: {
                          name: "shl",
                          nodeType: "YulIdentifier",
                          src: "2644:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2644:20:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "2634:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2634:31:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "2634:31:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2681:1:55",
                        type: "",
                        value: "4",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2684:4:55",
                        type: "",
                        value: "0x11",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "2674:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2674:15:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "2674:15:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2705:1:55",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2708:4:55",
                        type: "",
                        value: "0x24",
                      },
                    ],
                    functionName: {
                      name: "revert",
                      nodeType: "YulIdentifier",
                      src: "2698:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2698:15:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "2698:15:55",
                },
              ],
            },
            name: "panic_error_0x11",
            nodeType: "YulFunctionDefinition",
            src: "2592:127:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2773:76:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "2795:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "2797:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2797:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "2797:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "2789:1:55",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "2792:1:55",
                      },
                    ],
                    functionName: {
                      name: "lt",
                      nodeType: "YulIdentifier",
                      src: "2786:2:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2786:8:55",
                  },
                  nodeType: "YulIf",
                  src: "2783:34:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "2826:17:55",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "2838:1:55",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "2841:1:55",
                      },
                    ],
                    functionName: {
                      name: "sub",
                      nodeType: "YulIdentifier",
                      src: "2834:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2834:9:55",
                  },
                  variableNames: [
                    {
                      name: "diff",
                      nodeType: "YulIdentifier",
                      src: "2826:4:55",
                    },
                  ],
                },
              ],
            },
            name: "checked_sub_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "2755:1:55",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "2758:1:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "diff",
                nodeType: "YulTypedName",
                src: "2764:4:55",
                type: "",
              },
            ],
            src: "2724:125:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2901:89:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "2928:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "2930:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2930:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "2930:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "2921:5:55",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "2914:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2914:13:55",
                  },
                  nodeType: "YulIf",
                  src: "2911:39:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "2959:25:55",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "2970:5:55",
                      },
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "2981:1:55",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "not",
                          nodeType: "YulIdentifier",
                          src: "2977:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2977:6:55",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "2966:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2966:18:55",
                  },
                  variableNames: [
                    {
                      name: "ret",
                      nodeType: "YulIdentifier",
                      src: "2959:3:55",
                    },
                  ],
                },
              ],
            },
            name: "decrement_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "2883:5:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "ret",
                nodeType: "YulTypedName",
                src: "2893:3:55",
                type: "",
              },
            ],
            src: "2854:136:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3169:182:55",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "3186:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3197:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "3179:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3179:21:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3179:21:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "3220:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "3231:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "3216:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3216:18:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3236:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "3209:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3209:30:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3209:30:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "3259:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "3270:2:55",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "3255:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3255:18:55",
                      },
                      {
                        hexValue:
                          "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "3275:34:55",
                        type: "",
                        value: "Ownable: caller is not the owner",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "3248:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3248:62:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3248:62:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "3319:26:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "3331:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3342:2:55",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "3327:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3327:18:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "3319:4:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "3146:9:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "3160:4:55",
                type: "",
              },
            ],
            src: "2995:356:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3530:181:55",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "3547:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3558:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "3540:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3540:21:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3540:21:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "3581:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "3592:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "3577:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3577:18:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3597:2:55",
                        type: "",
                        value: "31",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "3570:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3570:30:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3570:30:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "3620:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "3631:2:55",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "3616:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3616:18:55",
                      },
                      {
                        hexValue:
                          "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "3636:33:55",
                        type: "",
                        value: "ReentrancyGuard: reentrant call",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "3609:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3609:61:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3609:61:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "3679:26:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "3691:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3702:2:55",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "3687:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3687:18:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "3679:4:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "3507:9:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "3521:4:55",
                type: "",
              },
            ],
            src: "3356:355:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3775:120:55",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "3785:22:55",
                  value: {
                    arguments: [
                      {
                        name: "offset",
                        nodeType: "YulIdentifier",
                        src: "3800:6:55",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "3794:5:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3794:13:55",
                  },
                  variableNames: [
                    {
                      name: "value",
                      nodeType: "YulIdentifier",
                      src: "3785:5:55",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "3873:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3882:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3885:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "3875:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3875:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "3875:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "3829:5:55",
                          },
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "3840:5:55",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "3847:22:55",
                                type: "",
                                value: "0xffffffffffffffffffff",
                              },
                            ],
                            functionName: {
                              name: "and",
                              nodeType: "YulIdentifier",
                              src: "3836:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "3836:34:55",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "3826:2:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3826:45:55",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "3819:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3819:53:55",
                  },
                  nodeType: "YulIf",
                  src: "3816:73:55",
                },
              ],
            },
            name: "abi_decode_uint80_fromMemory",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "offset",
                nodeType: "YulTypedName",
                src: "3754:6:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "3765:5:55",
                type: "",
              },
            ],
            src: "3716:179:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "4046:327:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "4093:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "4102:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "4105:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "4095:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4095:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "4095:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "4067:7:55",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "4076:9:55",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "4063:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4063:23:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "4088:3:55",
                        type: "",
                        value: "160",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "4059:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4059:33:55",
                  },
                  nodeType: "YulIf",
                  src: "4056:53:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "4118:49:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "4157:9:55",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_uint80_fromMemory",
                      nodeType: "YulIdentifier",
                      src: "4128:28:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4128:39:55",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "4118:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "4176:35:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "4196:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "4207:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "4192:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4192:18:55",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "4186:5:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4186:25:55",
                  },
                  variableNames: [
                    {
                      name: "value1",
                      nodeType: "YulIdentifier",
                      src: "4176:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "4220:35:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "4240:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "4251:2:55",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "4236:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4236:18:55",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "4230:5:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4230:25:55",
                  },
                  variableNames: [
                    {
                      name: "value2",
                      nodeType: "YulIdentifier",
                      src: "4220:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "4264:35:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "4284:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "4295:2:55",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "4280:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4280:18:55",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "4274:5:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4274:25:55",
                  },
                  variableNames: [
                    {
                      name: "value3",
                      nodeType: "YulIdentifier",
                      src: "4264:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "4308:59:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "4351:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "4362:3:55",
                            type: "",
                            value: "128",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "4347:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4347:19:55",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_uint80_fromMemory",
                      nodeType: "YulIdentifier",
                      src: "4318:28:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4318:49:55",
                  },
                  variableNames: [
                    {
                      name: "value4",
                      nodeType: "YulIdentifier",
                      src: "4308:6:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "3980:9:55",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "3991:7:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "4003:6:55",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "4011:6:55",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "4019:6:55",
                type: "",
              },
              {
                name: "value3",
                nodeType: "YulTypedName",
                src: "4027:6:55",
                type: "",
              },
              {
                name: "value4",
                nodeType: "YulTypedName",
                src: "4035:6:55",
                type: "",
              },
            ],
            src: "3900:473:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "4457:194:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "4503:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "4512:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "4515:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "4505:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4505:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "4505:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "4478:7:55",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "4487:9:55",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "4474:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4474:23:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "4499:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "4470:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4470:32:55",
                  },
                  nodeType: "YulIf",
                  src: "4467:52:55",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "4528:29:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "4547:9:55",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "4541:5:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4541:16:55",
                  },
                  variables: [
                    {
                      name: "value",
                      nodeType: "YulTypedName",
                      src: "4532:5:55",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "4605:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "4614:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "4617:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "4607:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4607:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "4607:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "4579:5:55",
                          },
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "4590:5:55",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "4597:4:55",
                                type: "",
                                value: "0xff",
                              },
                            ],
                            functionName: {
                              name: "and",
                              nodeType: "YulIdentifier",
                              src: "4586:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "4586:16:55",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "4576:2:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4576:27:55",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "4569:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4569:35:55",
                  },
                  nodeType: "YulIf",
                  src: "4566:55:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "4630:15:55",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "4640:5:55",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "4630:6:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_uint8_fromMemory",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "4423:9:55",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "4434:7:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "4446:6:55",
                type: "",
              },
            ],
            src: "4378:273:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "4821:218:55",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "4831:26:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "4843:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "4854:2:55",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "4839:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4839:18:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "4831:4:55",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "4866:29:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "4884:3:55",
                            type: "",
                            value: "160",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "4889:1:55",
                            type: "",
                            value: "1",
                          },
                        ],
                        functionName: {
                          name: "shl",
                          nodeType: "YulIdentifier",
                          src: "4880:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4880:11:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "4893:1:55",
                        type: "",
                        value: "1",
                      },
                    ],
                    functionName: {
                      name: "sub",
                      nodeType: "YulIdentifier",
                      src: "4876:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4876:19:55",
                  },
                  variables: [
                    {
                      name: "_1",
                      nodeType: "YulTypedName",
                      src: "4870:2:55",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "4911:9:55",
                      },
                      {
                        arguments: [
                          {
                            name: "value0",
                            nodeType: "YulIdentifier",
                            src: "4926:6:55",
                          },
                          {
                            name: "_1",
                            nodeType: "YulIdentifier",
                            src: "4934:2:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "4922:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4922:15:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "4904:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4904:34:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "4904:34:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "4958:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "4969:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "4954:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4954:18:55",
                      },
                      {
                        arguments: [
                          {
                            name: "value1",
                            nodeType: "YulIdentifier",
                            src: "4978:6:55",
                          },
                          {
                            name: "_1",
                            nodeType: "YulIdentifier",
                            src: "4986:2:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "4974:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4974:15:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "4947:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4947:43:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "4947:43:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "5010:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "5021:2:55",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "5006:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5006:18:55",
                      },
                      {
                        name: "value2",
                        nodeType: "YulIdentifier",
                        src: "5026:6:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "4999:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4999:34:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "4999:34:55",
                },
              ],
            },
            name: "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "4774:9:55",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "4785:6:55",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "4793:6:55",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "4801:6:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "4812:4:55",
                type: "",
              },
            ],
            src: "4656:383:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "5122:199:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "5168:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "5177:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "5180:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "5170:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "5170:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "5170:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "5143:7:55",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "5152:9:55",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "5139:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5139:23:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "5164:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "5135:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5135:32:55",
                  },
                  nodeType: "YulIf",
                  src: "5132:52:55",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "5193:29:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "5212:9:55",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "5206:5:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5206:16:55",
                  },
                  variables: [
                    {
                      name: "value",
                      nodeType: "YulTypedName",
                      src: "5197:5:55",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "5275:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "5284:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "5287:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "5277:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "5277:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "5277:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "5244:5:55",
                          },
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    name: "value",
                                    nodeType: "YulIdentifier",
                                    src: "5265:5:55",
                                  },
                                ],
                                functionName: {
                                  name: "iszero",
                                  nodeType: "YulIdentifier",
                                  src: "5258:6:55",
                                },
                                nodeType: "YulFunctionCall",
                                src: "5258:13:55",
                              },
                            ],
                            functionName: {
                              name: "iszero",
                              nodeType: "YulIdentifier",
                              src: "5251:6:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "5251:21:55",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "5241:2:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5241:32:55",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "5234:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5234:40:55",
                  },
                  nodeType: "YulIf",
                  src: "5231:60:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "5300:15:55",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "5310:5:55",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "5300:6:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_bool_fromMemory",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "5088:9:55",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "5099:7:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "5111:6:55",
                type: "",
              },
            ],
            src: "5044:277:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "5455:145:55",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "5465:26:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "5477:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "5488:2:55",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "5473:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5473:18:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "5465:4:55",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "5507:9:55",
                      },
                      {
                        arguments: [
                          {
                            name: "value0",
                            nodeType: "YulIdentifier",
                            src: "5522:6:55",
                          },
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "5538:3:55",
                                    type: "",
                                    value: "160",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "5543:1:55",
                                    type: "",
                                    value: "1",
                                  },
                                ],
                                functionName: {
                                  name: "shl",
                                  nodeType: "YulIdentifier",
                                  src: "5534:3:55",
                                },
                                nodeType: "YulFunctionCall",
                                src: "5534:11:55",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "5547:1:55",
                                type: "",
                                value: "1",
                              },
                            ],
                            functionName: {
                              name: "sub",
                              nodeType: "YulIdentifier",
                              src: "5530:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "5530:19:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "5518:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5518:32:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "5500:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5500:51:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "5500:51:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "5571:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "5582:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "5567:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5567:18:55",
                      },
                      {
                        name: "value1",
                        nodeType: "YulIdentifier",
                        src: "5587:6:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "5560:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5560:34:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "5560:34:55",
                },
              ],
            },
            name: "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "5416:9:55",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "5427:6:55",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "5435:6:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "5446:4:55",
                type: "",
              },
            ],
            src: "5326:274:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "5734:119:55",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "5744:26:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "5756:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "5767:2:55",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "5752:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5752:18:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "5744:4:55",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "5786:9:55",
                      },
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "5797:6:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "5779:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5779:25:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "5779:25:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "5824:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "5835:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "5820:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5820:18:55",
                      },
                      {
                        name: "value1",
                        nodeType: "YulIdentifier",
                        src: "5840:6:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "5813:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5813:34:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "5813:34:55",
                },
              ],
            },
            name: "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "5695:9:55",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "5706:6:55",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "5714:6:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "5725:4:55",
                type: "",
              },
            ],
            src: "5605:248:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "6032:228:55",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "6049:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6060:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "6042:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6042:21:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6042:21:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "6083:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "6094:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "6079:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6079:18:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6099:2:55",
                        type: "",
                        value: "38",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "6072:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6072:30:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6072:30:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "6122:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "6133:2:55",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "6118:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6118:18:55",
                      },
                      {
                        hexValue:
                          "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "6138:34:55",
                        type: "",
                        value: "Ownable: new owner is the zero a",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "6111:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6111:62:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6111:62:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "6193:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "6204:2:55",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "6189:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6189:18:55",
                      },
                      {
                        hexValue: "646472657373",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "6209:8:55",
                        type: "",
                        value: "ddress",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "6182:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6182:36:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6182:36:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "6227:27:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "6239:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6250:3:55",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "6235:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6235:19:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "6227:4:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "6009:9:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "6023:4:55",
                type: "",
              },
            ],
            src: "5858:402:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "6312:148:55",
              statements: [
                {
                  nodeType: "YulVariableDeclaration",
                  src: "6322:23:55",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "6337:1:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6340:4:55",
                        type: "",
                        value: "0xff",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "6333:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6333:12:55",
                  },
                  variables: [
                    {
                      name: "x_1",
                      nodeType: "YulTypedName",
                      src: "6326:3:55",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "6354:23:55",
                  value: {
                    arguments: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "6369:1:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6372:4:55",
                        type: "",
                        value: "0xff",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "6365:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6365:12:55",
                  },
                  variables: [
                    {
                      name: "y_1",
                      nodeType: "YulTypedName",
                      src: "6358:3:55",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "6402:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "6404:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "6404:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "6404:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "x_1",
                        nodeType: "YulIdentifier",
                        src: "6392:3:55",
                      },
                      {
                        name: "y_1",
                        nodeType: "YulIdentifier",
                        src: "6397:3:55",
                      },
                    ],
                    functionName: {
                      name: "lt",
                      nodeType: "YulIdentifier",
                      src: "6389:2:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6389:12:55",
                  },
                  nodeType: "YulIf",
                  src: "6386:38:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "6433:21:55",
                  value: {
                    arguments: [
                      {
                        name: "x_1",
                        nodeType: "YulIdentifier",
                        src: "6445:3:55",
                      },
                      {
                        name: "y_1",
                        nodeType: "YulIdentifier",
                        src: "6450:3:55",
                      },
                    ],
                    functionName: {
                      name: "sub",
                      nodeType: "YulIdentifier",
                      src: "6441:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6441:13:55",
                  },
                  variableNames: [
                    {
                      name: "diff",
                      nodeType: "YulIdentifier",
                      src: "6433:4:55",
                    },
                  ],
                },
              ],
            },
            name: "checked_sub_t_uint8",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "6294:1:55",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "6297:1:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "diff",
                nodeType: "YulTypedName",
                src: "6303:4:55",
                type: "",
              },
            ],
            src: "6265:195:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "6529:358:55",
              statements: [
                {
                  nodeType: "YulVariableDeclaration",
                  src: "6539:16:55",
                  value: {
                    kind: "number",
                    nodeType: "YulLiteral",
                    src: "6554:1:55",
                    type: "",
                    value: "1",
                  },
                  variables: [
                    {
                      name: "power_1",
                      nodeType: "YulTypedName",
                      src: "6543:7:55",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "6564:16:55",
                  value: {
                    name: "power_1",
                    nodeType: "YulIdentifier",
                    src: "6573:7:55",
                  },
                  variableNames: [
                    {
                      name: "power",
                      nodeType: "YulIdentifier",
                      src: "6564:5:55",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "6589:13:55",
                  value: {
                    name: "_base",
                    nodeType: "YulIdentifier",
                    src: "6597:5:55",
                  },
                  variableNames: [
                    {
                      name: "base",
                      nodeType: "YulIdentifier",
                      src: "6589:4:55",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "6653:228:55",
                    statements: [
                      {
                        body: {
                          nodeType: "YulBlock",
                          src: "6698:22:55",
                          statements: [
                            {
                              expression: {
                                arguments: [],
                                functionName: {
                                  name: "panic_error_0x11",
                                  nodeType: "YulIdentifier",
                                  src: "6700:16:55",
                                },
                                nodeType: "YulFunctionCall",
                                src: "6700:18:55",
                              },
                              nodeType: "YulExpressionStatement",
                              src: "6700:18:55",
                            },
                          ],
                        },
                        condition: {
                          arguments: [
                            {
                              name: "base",
                              nodeType: "YulIdentifier",
                              src: "6673:4:55",
                            },
                            {
                              arguments: [
                                {
                                  arguments: [
                                    {
                                      kind: "number",
                                      nodeType: "YulLiteral",
                                      src: "6687:1:55",
                                      type: "",
                                      value: "0",
                                    },
                                  ],
                                  functionName: {
                                    name: "not",
                                    nodeType: "YulIdentifier",
                                    src: "6683:3:55",
                                  },
                                  nodeType: "YulFunctionCall",
                                  src: "6683:6:55",
                                },
                                {
                                  name: "base",
                                  nodeType: "YulIdentifier",
                                  src: "6691:4:55",
                                },
                              ],
                              functionName: {
                                name: "div",
                                nodeType: "YulIdentifier",
                                src: "6679:3:55",
                              },
                              nodeType: "YulFunctionCall",
                              src: "6679:17:55",
                            },
                          ],
                          functionName: {
                            name: "gt",
                            nodeType: "YulIdentifier",
                            src: "6670:2:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "6670:27:55",
                        },
                        nodeType: "YulIf",
                        src: "6667:53:55",
                      },
                      {
                        body: {
                          nodeType: "YulBlock",
                          src: "6759:29:55",
                          statements: [
                            {
                              nodeType: "YulAssignment",
                              src: "6761:25:55",
                              value: {
                                arguments: [
                                  {
                                    name: "power",
                                    nodeType: "YulIdentifier",
                                    src: "6774:5:55",
                                  },
                                  {
                                    name: "base",
                                    nodeType: "YulIdentifier",
                                    src: "6781:4:55",
                                  },
                                ],
                                functionName: {
                                  name: "mul",
                                  nodeType: "YulIdentifier",
                                  src: "6770:3:55",
                                },
                                nodeType: "YulFunctionCall",
                                src: "6770:16:55",
                              },
                              variableNames: [
                                {
                                  name: "power",
                                  nodeType: "YulIdentifier",
                                  src: "6761:5:55",
                                },
                              ],
                            },
                          ],
                        },
                        condition: {
                          arguments: [
                            {
                              name: "exponent",
                              nodeType: "YulIdentifier",
                              src: "6740:8:55",
                            },
                            {
                              name: "power_1",
                              nodeType: "YulIdentifier",
                              src: "6750:7:55",
                            },
                          ],
                          functionName: {
                            name: "and",
                            nodeType: "YulIdentifier",
                            src: "6736:3:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "6736:22:55",
                        },
                        nodeType: "YulIf",
                        src: "6733:55:55",
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "6801:23:55",
                        value: {
                          arguments: [
                            {
                              name: "base",
                              nodeType: "YulIdentifier",
                              src: "6813:4:55",
                            },
                            {
                              name: "base",
                              nodeType: "YulIdentifier",
                              src: "6819:4:55",
                            },
                          ],
                          functionName: {
                            name: "mul",
                            nodeType: "YulIdentifier",
                            src: "6809:3:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "6809:15:55",
                        },
                        variableNames: [
                          {
                            name: "base",
                            nodeType: "YulIdentifier",
                            src: "6801:4:55",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "6837:34:55",
                        value: {
                          arguments: [
                            {
                              name: "power_1",
                              nodeType: "YulIdentifier",
                              src: "6853:7:55",
                            },
                            {
                              name: "exponent",
                              nodeType: "YulIdentifier",
                              src: "6862:8:55",
                            },
                          ],
                          functionName: {
                            name: "shr",
                            nodeType: "YulIdentifier",
                            src: "6849:3:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "6849:22:55",
                        },
                        variableNames: [
                          {
                            name: "exponent",
                            nodeType: "YulIdentifier",
                            src: "6837:8:55",
                          },
                        ],
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "exponent",
                        nodeType: "YulIdentifier",
                        src: "6622:8:55",
                      },
                      {
                        name: "power_1",
                        nodeType: "YulIdentifier",
                        src: "6632:7:55",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "6619:2:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6619:21:55",
                  },
                  nodeType: "YulForLoop",
                  post: {
                    nodeType: "YulBlock",
                    src: "6641:3:55",
                    statements: [],
                  },
                  pre: {
                    nodeType: "YulBlock",
                    src: "6615:3:55",
                    statements: [],
                  },
                  src: "6611:270:55",
                },
              ],
            },
            name: "checked_exp_helper",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "_base",
                nodeType: "YulTypedName",
                src: "6493:5:55",
                type: "",
              },
              {
                name: "exponent",
                nodeType: "YulTypedName",
                src: "6500:8:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "power",
                nodeType: "YulTypedName",
                src: "6513:5:55",
                type: "",
              },
              {
                name: "base",
                nodeType: "YulTypedName",
                src: "6520:4:55",
                type: "",
              },
            ],
            src: "6465:422:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "6951:747:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "6989:52:55",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "7003:10:55",
                        value: {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "7012:1:55",
                          type: "",
                          value: "1",
                        },
                        variableNames: [
                          {
                            name: "power",
                            nodeType: "YulIdentifier",
                            src: "7003:5:55",
                          },
                        ],
                      },
                      {
                        nodeType: "YulLeave",
                        src: "7026:5:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "exponent",
                        nodeType: "YulIdentifier",
                        src: "6971:8:55",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "6964:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6964:16:55",
                  },
                  nodeType: "YulIf",
                  src: "6961:80:55",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "7074:52:55",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "7088:10:55",
                        value: {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "7097:1:55",
                          type: "",
                          value: "0",
                        },
                        variableNames: [
                          {
                            name: "power",
                            nodeType: "YulIdentifier",
                            src: "7088:5:55",
                          },
                        ],
                      },
                      {
                        nodeType: "YulLeave",
                        src: "7111:5:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "base",
                        nodeType: "YulIdentifier",
                        src: "7060:4:55",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "7053:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7053:12:55",
                  },
                  nodeType: "YulIf",
                  src: "7050:76:55",
                },
                {
                  cases: [
                    {
                      body: {
                        nodeType: "YulBlock",
                        src: "7162:52:55",
                        statements: [
                          {
                            nodeType: "YulAssignment",
                            src: "7176:10:55",
                            value: {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "7185:1:55",
                              type: "",
                              value: "1",
                            },
                            variableNames: [
                              {
                                name: "power",
                                nodeType: "YulIdentifier",
                                src: "7176:5:55",
                              },
                            ],
                          },
                          {
                            nodeType: "YulLeave",
                            src: "7199:5:55",
                          },
                        ],
                      },
                      nodeType: "YulCase",
                      src: "7155:59:55",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7160:1:55",
                        type: "",
                        value: "1",
                      },
                    },
                    {
                      body: {
                        nodeType: "YulBlock",
                        src: "7230:123:55",
                        statements: [
                          {
                            body: {
                              nodeType: "YulBlock",
                              src: "7265:22:55",
                              statements: [
                                {
                                  expression: {
                                    arguments: [],
                                    functionName: {
                                      name: "panic_error_0x11",
                                      nodeType: "YulIdentifier",
                                      src: "7267:16:55",
                                    },
                                    nodeType: "YulFunctionCall",
                                    src: "7267:18:55",
                                  },
                                  nodeType: "YulExpressionStatement",
                                  src: "7267:18:55",
                                },
                              ],
                            },
                            condition: {
                              arguments: [
                                {
                                  name: "exponent",
                                  nodeType: "YulIdentifier",
                                  src: "7250:8:55",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "7260:3:55",
                                  type: "",
                                  value: "255",
                                },
                              ],
                              functionName: {
                                name: "gt",
                                nodeType: "YulIdentifier",
                                src: "7247:2:55",
                              },
                              nodeType: "YulFunctionCall",
                              src: "7247:17:55",
                            },
                            nodeType: "YulIf",
                            src: "7244:43:55",
                          },
                          {
                            nodeType: "YulAssignment",
                            src: "7300:25:55",
                            value: {
                              arguments: [
                                {
                                  name: "exponent",
                                  nodeType: "YulIdentifier",
                                  src: "7313:8:55",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "7323:1:55",
                                  type: "",
                                  value: "1",
                                },
                              ],
                              functionName: {
                                name: "shl",
                                nodeType: "YulIdentifier",
                                src: "7309:3:55",
                              },
                              nodeType: "YulFunctionCall",
                              src: "7309:16:55",
                            },
                            variableNames: [
                              {
                                name: "power",
                                nodeType: "YulIdentifier",
                                src: "7300:5:55",
                              },
                            ],
                          },
                          {
                            nodeType: "YulLeave",
                            src: "7338:5:55",
                          },
                        ],
                      },
                      nodeType: "YulCase",
                      src: "7223:130:55",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7228:1:55",
                        type: "",
                        value: "2",
                      },
                    },
                  ],
                  expression: {
                    name: "base",
                    nodeType: "YulIdentifier",
                    src: "7142:4:55",
                  },
                  nodeType: "YulSwitch",
                  src: "7135:218:55",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "7451:70:55",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "7465:28:55",
                        value: {
                          arguments: [
                            {
                              name: "base",
                              nodeType: "YulIdentifier",
                              src: "7478:4:55",
                            },
                            {
                              name: "exponent",
                              nodeType: "YulIdentifier",
                              src: "7484:8:55",
                            },
                          ],
                          functionName: {
                            name: "exp",
                            nodeType: "YulIdentifier",
                            src: "7474:3:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "7474:19:55",
                        },
                        variableNames: [
                          {
                            name: "power",
                            nodeType: "YulIdentifier",
                            src: "7465:5:55",
                          },
                        ],
                      },
                      {
                        nodeType: "YulLeave",
                        src: "7506:5:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "base",
                                nodeType: "YulIdentifier",
                                src: "7375:4:55",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "7381:2:55",
                                type: "",
                                value: "11",
                              },
                            ],
                            functionName: {
                              name: "lt",
                              nodeType: "YulIdentifier",
                              src: "7372:2:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "7372:12:55",
                          },
                          {
                            arguments: [
                              {
                                name: "exponent",
                                nodeType: "YulIdentifier",
                                src: "7389:8:55",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "7399:2:55",
                                type: "",
                                value: "78",
                              },
                            ],
                            functionName: {
                              name: "lt",
                              nodeType: "YulIdentifier",
                              src: "7386:2:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "7386:16:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "7368:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "7368:35:55",
                      },
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "base",
                                nodeType: "YulIdentifier",
                                src: "7412:4:55",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "7418:3:55",
                                type: "",
                                value: "307",
                              },
                            ],
                            functionName: {
                              name: "lt",
                              nodeType: "YulIdentifier",
                              src: "7409:2:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "7409:13:55",
                          },
                          {
                            arguments: [
                              {
                                name: "exponent",
                                nodeType: "YulIdentifier",
                                src: "7427:8:55",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "7437:2:55",
                                type: "",
                                value: "32",
                              },
                            ],
                            functionName: {
                              name: "lt",
                              nodeType: "YulIdentifier",
                              src: "7424:2:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "7424:16:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "7405:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "7405:36:55",
                      },
                    ],
                    functionName: {
                      name: "or",
                      nodeType: "YulIdentifier",
                      src: "7365:2:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7365:77:55",
                  },
                  nodeType: "YulIf",
                  src: "7362:159:55",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "7530:57:55",
                  value: {
                    arguments: [
                      {
                        name: "base",
                        nodeType: "YulIdentifier",
                        src: "7572:4:55",
                      },
                      {
                        name: "exponent",
                        nodeType: "YulIdentifier",
                        src: "7578:8:55",
                      },
                    ],
                    functionName: {
                      name: "checked_exp_helper",
                      nodeType: "YulIdentifier",
                      src: "7553:18:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7553:34:55",
                  },
                  variables: [
                    {
                      name: "power_1",
                      nodeType: "YulTypedName",
                      src: "7534:7:55",
                      type: "",
                    },
                    {
                      name: "base_1",
                      nodeType: "YulTypedName",
                      src: "7543:6:55",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "7632:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "7634:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "7634:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "7634:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "power_1",
                        nodeType: "YulIdentifier",
                        src: "7602:7:55",
                      },
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "7619:1:55",
                                type: "",
                                value: "0",
                              },
                            ],
                            functionName: {
                              name: "not",
                              nodeType: "YulIdentifier",
                              src: "7615:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "7615:6:55",
                          },
                          {
                            name: "base_1",
                            nodeType: "YulIdentifier",
                            src: "7623:6:55",
                          },
                        ],
                        functionName: {
                          name: "div",
                          nodeType: "YulIdentifier",
                          src: "7611:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "7611:19:55",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "7599:2:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7599:32:55",
                  },
                  nodeType: "YulIf",
                  src: "7596:58:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "7663:29:55",
                  value: {
                    arguments: [
                      {
                        name: "power_1",
                        nodeType: "YulIdentifier",
                        src: "7676:7:55",
                      },
                      {
                        name: "base_1",
                        nodeType: "YulIdentifier",
                        src: "7685:6:55",
                      },
                    ],
                    functionName: {
                      name: "mul",
                      nodeType: "YulIdentifier",
                      src: "7672:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7672:20:55",
                  },
                  variableNames: [
                    {
                      name: "power",
                      nodeType: "YulIdentifier",
                      src: "7663:5:55",
                    },
                  ],
                },
              ],
            },
            name: "checked_exp_unsigned",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "base",
                nodeType: "YulTypedName",
                src: "6922:4:55",
                type: "",
              },
              {
                name: "exponent",
                nodeType: "YulTypedName",
                src: "6928:8:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "power",
                nodeType: "YulTypedName",
                src: "6941:5:55",
                type: "",
              },
            ],
            src: "6892:806:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "7773:61:55",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "7783:45:55",
                  value: {
                    arguments: [
                      {
                        name: "base",
                        nodeType: "YulIdentifier",
                        src: "7813:4:55",
                      },
                      {
                        name: "exponent",
                        nodeType: "YulIdentifier",
                        src: "7819:8:55",
                      },
                    ],
                    functionName: {
                      name: "checked_exp_unsigned",
                      nodeType: "YulIdentifier",
                      src: "7792:20:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7792:36:55",
                  },
                  variableNames: [
                    {
                      name: "power",
                      nodeType: "YulIdentifier",
                      src: "7783:5:55",
                    },
                  ],
                },
              ],
            },
            name: "checked_exp_t_uint256_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "base",
                nodeType: "YulTypedName",
                src: "7744:4:55",
                type: "",
              },
              {
                name: "exponent",
                nodeType: "YulTypedName",
                src: "7750:8:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "power",
                nodeType: "YulTypedName",
                src: "7763:5:55",
                type: "",
              },
            ],
            src: "7703:131:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "7890:502:55",
              statements: [
                {
                  nodeType: "YulVariableDeclaration",
                  src: "7900:29:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "7918:3:55",
                            type: "",
                            value: "255",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "7923:1:55",
                            type: "",
                            value: "1",
                          },
                        ],
                        functionName: {
                          name: "shl",
                          nodeType: "YulIdentifier",
                          src: "7914:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "7914:11:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7927:1:55",
                        type: "",
                        value: "1",
                      },
                    ],
                    functionName: {
                      name: "sub",
                      nodeType: "YulIdentifier",
                      src: "7910:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7910:19:55",
                  },
                  variables: [
                    {
                      name: "_1",
                      nodeType: "YulTypedName",
                      src: "7904:2:55",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "7938:19:55",
                  value: {
                    arguments: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "7952:1:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7955:1:55",
                        type: "",
                        value: "0",
                      },
                    ],
                    functionName: {
                      name: "sgt",
                      nodeType: "YulIdentifier",
                      src: "7948:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7948:9:55",
                  },
                  variables: [
                    {
                      name: "_2",
                      nodeType: "YulTypedName",
                      src: "7942:2:55",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "7966:19:55",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "7980:1:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7983:1:55",
                        type: "",
                        value: "0",
                      },
                    ],
                    functionName: {
                      name: "sgt",
                      nodeType: "YulIdentifier",
                      src: "7976:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7976:9:55",
                  },
                  variables: [
                    {
                      name: "_3",
                      nodeType: "YulTypedName",
                      src: "7970:2:55",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "8033:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "8035:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "8035:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "8035:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "_3",
                            nodeType: "YulIdentifier",
                            src: "8005:2:55",
                          },
                          {
                            name: "_2",
                            nodeType: "YulIdentifier",
                            src: "8009:2:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "8001:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8001:11:55",
                      },
                      {
                        arguments: [
                          {
                            name: "x",
                            nodeType: "YulIdentifier",
                            src: "8017:1:55",
                          },
                          {
                            arguments: [
                              {
                                name: "_1",
                                nodeType: "YulIdentifier",
                                src: "8024:2:55",
                              },
                              {
                                name: "y",
                                nodeType: "YulIdentifier",
                                src: "8028:1:55",
                              },
                            ],
                            functionName: {
                              name: "div",
                              nodeType: "YulIdentifier",
                              src: "8020:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "8020:10:55",
                          },
                        ],
                        functionName: {
                          name: "gt",
                          nodeType: "YulIdentifier",
                          src: "8014:2:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8014:17:55",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "7997:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7997:35:55",
                  },
                  nodeType: "YulIf",
                  src: "7994:61:55",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "8064:21:55",
                  value: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8078:3:55",
                        type: "",
                        value: "255",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8083:1:55",
                        type: "",
                        value: "1",
                      },
                    ],
                    functionName: {
                      name: "shl",
                      nodeType: "YulIdentifier",
                      src: "8074:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8074:11:55",
                  },
                  variables: [
                    {
                      name: "_4",
                      nodeType: "YulTypedName",
                      src: "8068:2:55",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "8094:19:55",
                  value: {
                    arguments: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "8108:1:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8111:1:55",
                        type: "",
                        value: "0",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "8104:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8104:9:55",
                  },
                  variables: [
                    {
                      name: "_5",
                      nodeType: "YulTypedName",
                      src: "8098:2:55",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "8163:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "8165:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "8165:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "8165:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "_3",
                            nodeType: "YulIdentifier",
                            src: "8133:2:55",
                          },
                          {
                            name: "_5",
                            nodeType: "YulIdentifier",
                            src: "8137:2:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "8129:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8129:11:55",
                      },
                      {
                        arguments: [
                          {
                            name: "y",
                            nodeType: "YulIdentifier",
                            src: "8146:1:55",
                          },
                          {
                            arguments: [
                              {
                                name: "_4",
                                nodeType: "YulIdentifier",
                                src: "8154:2:55",
                              },
                              {
                                name: "x",
                                nodeType: "YulIdentifier",
                                src: "8158:1:55",
                              },
                            ],
                            functionName: {
                              name: "sdiv",
                              nodeType: "YulIdentifier",
                              src: "8149:4:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "8149:11:55",
                          },
                        ],
                        functionName: {
                          name: "slt",
                          nodeType: "YulIdentifier",
                          src: "8142:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8142:19:55",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "8125:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8125:37:55",
                  },
                  nodeType: "YulIf",
                  src: "8122:63:55",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "8194:19:55",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "8208:1:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8211:1:55",
                        type: "",
                        value: "0",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "8204:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8204:9:55",
                  },
                  variables: [
                    {
                      name: "_6",
                      nodeType: "YulTypedName",
                      src: "8198:2:55",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "8263:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "8265:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "8265:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "8265:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "_6",
                            nodeType: "YulIdentifier",
                            src: "8233:2:55",
                          },
                          {
                            name: "_2",
                            nodeType: "YulIdentifier",
                            src: "8237:2:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "8229:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8229:11:55",
                      },
                      {
                        arguments: [
                          {
                            name: "x",
                            nodeType: "YulIdentifier",
                            src: "8246:1:55",
                          },
                          {
                            arguments: [
                              {
                                name: "_4",
                                nodeType: "YulIdentifier",
                                src: "8254:2:55",
                              },
                              {
                                name: "y",
                                nodeType: "YulIdentifier",
                                src: "8258:1:55",
                              },
                            ],
                            functionName: {
                              name: "sdiv",
                              nodeType: "YulIdentifier",
                              src: "8249:4:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "8249:11:55",
                          },
                        ],
                        functionName: {
                          name: "slt",
                          nodeType: "YulIdentifier",
                          src: "8242:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8242:19:55",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "8225:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8225:37:55",
                  },
                  nodeType: "YulIf",
                  src: "8222:63:55",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "8335:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "8337:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "8337:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "8337:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "_6",
                            nodeType: "YulIdentifier",
                            src: "8305:2:55",
                          },
                          {
                            name: "_5",
                            nodeType: "YulIdentifier",
                            src: "8309:2:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "8301:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8301:11:55",
                      },
                      {
                        arguments: [
                          {
                            name: "x",
                            nodeType: "YulIdentifier",
                            src: "8318:1:55",
                          },
                          {
                            arguments: [
                              {
                                name: "_1",
                                nodeType: "YulIdentifier",
                                src: "8326:2:55",
                              },
                              {
                                name: "y",
                                nodeType: "YulIdentifier",
                                src: "8330:1:55",
                              },
                            ],
                            functionName: {
                              name: "sdiv",
                              nodeType: "YulIdentifier",
                              src: "8321:4:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "8321:11:55",
                          },
                        ],
                        functionName: {
                          name: "slt",
                          nodeType: "YulIdentifier",
                          src: "8314:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8314:19:55",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "8297:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8297:37:55",
                  },
                  nodeType: "YulIf",
                  src: "8294:63:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "8366:20:55",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "8381:1:55",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "8384:1:55",
                      },
                    ],
                    functionName: {
                      name: "mul",
                      nodeType: "YulIdentifier",
                      src: "8377:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8377:9:55",
                  },
                  variableNames: [
                    {
                      name: "product",
                      nodeType: "YulIdentifier",
                      src: "8366:7:55",
                    },
                  ],
                },
              ],
            },
            name: "checked_mul_t_int256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "7869:1:55",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "7872:1:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "product",
                nodeType: "YulTypedName",
                src: "7878:7:55",
                type: "",
              },
            ],
            src: "7839:553:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "8429:95:55",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8446:1:55",
                        type: "",
                        value: "0",
                      },
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "8453:3:55",
                            type: "",
                            value: "224",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "8458:10:55",
                            type: "",
                            value: "0x4e487b71",
                          },
                        ],
                        functionName: {
                          name: "shl",
                          nodeType: "YulIdentifier",
                          src: "8449:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8449:20:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "8439:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8439:31:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "8439:31:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8486:1:55",
                        type: "",
                        value: "4",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8489:4:55",
                        type: "",
                        value: "0x12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "8479:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8479:15:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "8479:15:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8510:1:55",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8513:4:55",
                        type: "",
                        value: "0x24",
                      },
                    ],
                    functionName: {
                      name: "revert",
                      nodeType: "YulIdentifier",
                      src: "8503:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8503:15:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "8503:15:55",
                },
              ],
            },
            name: "panic_error_0x12",
            nodeType: "YulFunctionDefinition",
            src: "8397:127:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "8574:148:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "8597:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x12",
                            nodeType: "YulIdentifier",
                            src: "8599:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "8599:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "8599:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "8594:1:55",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "8587:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8587:9:55",
                  },
                  nodeType: "YulIf",
                  src: "8584:35:55",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "8670:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "8672:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "8672:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "8672:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "x",
                            nodeType: "YulIdentifier",
                            src: "8638:1:55",
                          },
                          {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "8645:3:55",
                                type: "",
                                value: "255",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "8650:1:55",
                                type: "",
                                value: "1",
                              },
                            ],
                            functionName: {
                              name: "shl",
                              nodeType: "YulIdentifier",
                              src: "8641:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "8641:11:55",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "8635:2:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8635:18:55",
                      },
                      {
                        arguments: [
                          {
                            name: "y",
                            nodeType: "YulIdentifier",
                            src: "8658:1:55",
                          },
                          {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "8665:1:55",
                                type: "",
                                value: "0",
                              },
                            ],
                            functionName: {
                              name: "not",
                              nodeType: "YulIdentifier",
                              src: "8661:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "8661:6:55",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "8655:2:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8655:13:55",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "8631:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8631:38:55",
                  },
                  nodeType: "YulIf",
                  src: "8628:64:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "8701:15:55",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "8711:1:55",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "8714:1:55",
                      },
                    ],
                    functionName: {
                      name: "sdiv",
                      nodeType: "YulIdentifier",
                      src: "8706:4:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8706:10:55",
                  },
                  variableNames: [
                    {
                      name: "r",
                      nodeType: "YulIdentifier",
                      src: "8701:1:55",
                    },
                  ],
                },
              ],
            },
            name: "checked_div_t_int256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "8559:1:55",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "8562:1:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "r",
                nodeType: "YulTypedName",
                src: "8568:1:55",
                type: "",
              },
            ],
            src: "8529:193:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "8779:116:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "8838:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "8840:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "8840:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "8840:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "x",
                                nodeType: "YulIdentifier",
                                src: "8810:1:55",
                              },
                            ],
                            functionName: {
                              name: "iszero",
                              nodeType: "YulIdentifier",
                              src: "8803:6:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "8803:9:55",
                          },
                        ],
                        functionName: {
                          name: "iszero",
                          nodeType: "YulIdentifier",
                          src: "8796:6:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8796:17:55",
                      },
                      {
                        arguments: [
                          {
                            name: "y",
                            nodeType: "YulIdentifier",
                            src: "8818:1:55",
                          },
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "8829:1:55",
                                    type: "",
                                    value: "0",
                                  },
                                ],
                                functionName: {
                                  name: "not",
                                  nodeType: "YulIdentifier",
                                  src: "8825:3:55",
                                },
                                nodeType: "YulFunctionCall",
                                src: "8825:6:55",
                              },
                              {
                                name: "x",
                                nodeType: "YulIdentifier",
                                src: "8833:1:55",
                              },
                            ],
                            functionName: {
                              name: "div",
                              nodeType: "YulIdentifier",
                              src: "8821:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "8821:14:55",
                          },
                        ],
                        functionName: {
                          name: "gt",
                          nodeType: "YulIdentifier",
                          src: "8815:2:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8815:21:55",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "8792:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8792:45:55",
                  },
                  nodeType: "YulIf",
                  src: "8789:71:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "8869:20:55",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "8884:1:55",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "8887:1:55",
                      },
                    ],
                    functionName: {
                      name: "mul",
                      nodeType: "YulIdentifier",
                      src: "8880:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8880:9:55",
                  },
                  variableNames: [
                    {
                      name: "product",
                      nodeType: "YulIdentifier",
                      src: "8869:7:55",
                    },
                  ],
                },
              ],
            },
            name: "checked_mul_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "8758:1:55",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "8761:1:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "product",
                nodeType: "YulTypedName",
                src: "8767:7:55",
                type: "",
              },
            ],
            src: "8727:168:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "8946:74:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "8969:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x12",
                            nodeType: "YulIdentifier",
                            src: "8971:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "8971:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "8971:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "8966:1:55",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "8959:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8959:9:55",
                  },
                  nodeType: "YulIf",
                  src: "8956:35:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "9000:14:55",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "9009:1:55",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "9012:1:55",
                      },
                    ],
                    functionName: {
                      name: "div",
                      nodeType: "YulIdentifier",
                      src: "9005:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9005:9:55",
                  },
                  variableNames: [
                    {
                      name: "r",
                      nodeType: "YulIdentifier",
                      src: "9000:1:55",
                    },
                  ],
                },
              ],
            },
            name: "checked_div_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "8931:1:55",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "8934:1:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "r",
                nodeType: "YulTypedName",
                src: "8940:1:55",
                type: "",
              },
            ],
            src: "8900:120:55",
          },
        ],
      },
      contents:
        '{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), "Ownable: caller is not the owner")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), "ReentrancyGuard: reentrant call")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), "Ownable: new owner is the zero a")\n        mstore(add(headStart, 96), "ddress")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_mul_t_int256(x, y) -> product\n    {\n        let _1 := sub(shl(255, 1), 1)\n        let _2 := sgt(y, 0)\n        let _3 := sgt(x, 0)\n        if and(and(_3, _2), gt(x, div(_1, y))) { panic_error_0x11() }\n        let _4 := shl(255, 1)\n        let _5 := slt(y, 0)\n        if and(and(_3, _5), slt(y, sdiv(_4, x))) { panic_error_0x11() }\n        let _6 := slt(x, 0)\n        if and(and(_6, _2), slt(x, sdiv(_4, y))) { panic_error_0x11() }\n        if and(and(_6, _5), slt(x, sdiv(_1, y))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_int256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        if and(eq(x, shl(255, 1)), eq(y, not(0))) { panic_error_0x11() }\n        r := sdiv(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n}',
      id: 55,
      language: "Yul",
      name: "#utility.yul",
    },
  ],
  sourceMap:
    "515:7965:46:-:0;;;1556:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:3;719:10:27;921:18:3;:32::i;:::-;1701:1:6;1806:22;;1635:12:46;:28;;-1:-1:-1;;;;;1635:28:46;;;-1:-1:-1;;;;;;1635:28:46;;;;;;;1673:15;:34;;;;;;;;;;;515:7965;;2270:187:3;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:3;;;-1:-1:-1;;;;;;2378:17:3;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:131:55:-;-1:-1:-1;;;;;89:31:55;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:393::-;237:6;245;298:2;286:9;277:7;273:23;269:32;266:52;;;314:1;311;304:12;266:52;346:9;340:16;365:31;390:5;365:31;:::i;:::-;465:2;450:18;;444:25;415:5;;-1:-1:-1;478:33:55;444:25;478:33;:::i;:::-;530:7;520:17;;;150:393;;;;;:::o;:::-;515:7965:46;;;;;;",
  deployedSourceMap:
    "515:7965:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1769:435;;;;;;;;;;;;;:::i;:::-;;;160:25:55;;;148:2;133:18;1769:435:46;;;;;;;;5983:123;;;;;;;;;;-1:-1:-1;5983:123:46;;;;;:::i;:::-;;:::i;:::-;;3299:2241;;;;;;:::i;:::-;;:::i;1668:101:3:-;;;;;;;;;;;;;:::i;1036:85::-;;;;;;;;;;-1:-1:-1;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;1036:85;;;-1:-1:-1;;;;;1209:32:55;;;1191:51;;1179:2;1164:18;1036:85:3;1045:203:55;966:41:46;;;;;;;;;;-1:-1:-1;966:41:46;;;;;;1013:27;;;;;;;;;;-1:-1:-1;1013:27:46;;;;-1:-1:-1;;;;;1013:27:46;;;1046:38;;;;;;;;;;-1:-1:-1;1046:38:46;;;;-1:-1:-1;;;;;1046:38:46;;;6544:1934;;;;;;;;;;-1:-1:-1;6544:1934:46;;;;;:::i;:::-;;:::i;2385:563::-;;;;;;;;;;;;;:::i;:::-;;;;2167:25:55;;;2223:2;2208:18;;2201:34;;;;2251:18;;;2244:34;2309:2;2294:18;;2287:34;2154:3;2139:19;2385:563:46;1936:391:55;1918:198:3;;;;;;;;;;-1:-1:-1;1918:198:3;;;;;:::i;:::-;;:::i;5693:156:46:-;;;;;;;;;;-1:-1:-1;5693:156:46;;;;;:::i;:::-;;:::i;1769:435::-;1824:7;1861:20;1914:1;1884:27;:17;918:14:28;;827:112;1884:27:46;:31;;;;:::i;:::-;1861:54;;1843:336;1929:16;;1843:336;;2019:35;;;;:21;:35;;;;;:48;2087:15;-1:-1:-1;1998:171:46;;2142:12;1769:435;-1:-1:-1;1769:435:46:o;1998:171::-;1959:14;;;;:::i;:::-;;;;1843:336;;;;2196:1;2189:8;;1769:435;:::o;5983:123::-;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;;;;;;;;;6068:12:46::1;:31:::0;;-1:-1:-1;;;;;;6068:31:46::1;-1:-1:-1::0;;;;;6068:31:46;;;::::1;::::0;;;::::1;::::0;;5983:123::o;3299:2241::-;1744:1:6;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:6;;3558:2:55;2317:63:6;;;3540:21:55;3597:2;3577:18;;;3570:30;3636:33;3616:18;;;3609:61;3687:18;;2317:63:6;3356:355:55;2317:63:6;1744:1;2455:7;:18;3484:34:46::1;::::0;3588:26:::1;:24;:26::i;:::-;3470:144;;;;;;3705:26;3686:15;:45;3682:90;;3752:20;;-1:-1:-1::0;;;3752:20:46::1;;;;;;;;;;;3682:90;-1:-1:-1::0;;;;;3827:53:46;::::1;;::::0;;;:31:::1;:53;::::0;;;;;::::1;;3823:104;;;3901:26;;-1:-1:-1::0;;;3901:26:46::1;;;;;;;;;;;3823:104;4027:12;::::0;4187:27:::1;::::0;;-1:-1:-1;;;4187:27:46;;;;-1:-1:-1;;;;;4027:12:46;;::::1;::::0;4119:23;;3993:18:::1;::::0;4187:25;;::::1;::::0;::::1;::::0;:27:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:25;:27:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4162:52;;;;;;4224:21;4248:351;4274:282;4333:166;4384:5;4415:9;-1:-1:-1::0;;;;;4415:18:46::1;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4461:5;-1:-1:-1::0;;;;;4461:14:46::1;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4333:25;:166::i;:::-;4535:7;4274:12;:282::i;:::-;4570:19;4248:12;:351::i;:::-;4224:375:::0;-1:-1:-1;;;;;;4686:34:46;::::1;4682:618;;4752:7;4740:9;:19;4736:396;;;4786:40;;-1:-1:-1::0;;;4786:40:46::1;;;;;;;;;;;4736:396;4865:15;::::0;:33:::1;::::0;-1:-1:-1;;;;;4865:15:46;;::::1;::::0;:33;::::1;;;::::0;4890:7;;4865:15:::1;:33:::0;:15;:33;4890:7;4865:15;:33;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;5066:51:46::1;::::0;5074:10:::1;::::0;5095:21:::1;5066:51:::0;::::1;;;::::0;::::1;::::0;;;5095:21;5074:10;5066:51;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;4682:618;;;5264:15;::::0;;5226:63:::1;::::0;-1:-1:-1;;;5226:63:46;;5252:10:::1;5226:63:::0;;::::1;4904:34:55::0;;;;-1:-1:-1;;;;;5264:15:46;;::::1;4954:18:55::0;;;4947:43;5006:18;;;4999:34;;;5191:20:46;;5226:25;;::::1;::::0;::::1;::::0;4839:18:55;;5226:63:46::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5148:152;4682:618;5353:37;::::0;-1:-1:-1;;;5353:37:46;;5364:10:::1;5353:37;::::0;::::1;5500:51:55::0;5567:18;;;5560:34;;;-1:-1:-1;;;;;5353:10:46;::::1;::::0;::::1;::::0;5473:18:55;;5353:37:46::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5405:128:46::1;::::0;;5779:25:55;;;5835:2;5820:18;;5813:34;;;-1:-1:-1;;;;;5405:128:46;::::1;::::0;-1:-1:-1;5431:10:46::1;::::0;-1:-1:-1;5405:128:46::1;::::0;5752:18:55;5405:128:46::1;;;;;;;-1:-1:-1::0;;1701:1:6;2628:22;;-1:-1:-1;;;;;;;3299:2241:46:o;1668:101:3:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;6544:1934:46:-;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;6767:27:46::1;6797:36:::0;;;:21:::1;:36;::::0;;;;:62;;6895:45:::1;::::0;::::1;::::0;6986:68:::1;::::0;::::1;::::0;7102:79:::1;::::0;;::::1;::::0;6797:62;;6895:45;;7282:24;;:60;::::1;;;-1:-1:-1::0;7322:20:46;;7282:60:::1;:106;;;;-1:-1:-1::0;7358:30:46;;7282:106:::1;:154;;;;-1:-1:-1::0;7404:32:46;;7282:154:::1;7265:211;;;7447:29;:17;1032:19:28::0;;1050:1;1032:19;;;945:123;7447:29:46::1;7624:18:::0;;;:159:::1;;-1:-1:-1::0;7659:18:46;;;::::1;::::0;:123:::1;;-1:-1:-1::0;7729:21:46::1;:40;7751:17;7767:1;7751:13:::0;:17:::1;:::i;:::-;7729:40;;;;;;;;;;;:53;;;7697:13;:85;7659:123;7607:222;;;7801:28;;-1:-1:-1::0;;;7801:28:46::1;;;;;;;;;;;7607:222;7899:14:::0;7895:51:::1;;7922:24;;-1:-1:-1::0;;;7922:24:46::1;;;;;;;;;;;7895:51;7960:24:::0;7956:71:::1;;7993:34;;-1:-1:-1::0;;;7993:34:46::1;;;;;;;;;;;7956:71;8041:26:::0;8037:87:::1;;8088:36;;-1:-1:-1::0;;;8088:36:46::1;;;;;;;;;;;8037:87;-1:-1:-1::0;;;8135:36:46::1;::::0;;;-1:-1:-1;8135:21:46::1;:36;::::0;;;;;:65;;;8210:45:::1;::::0;::::1;:57:::0;;;;8277:68:::1;::::0;::::1;:90:::0;8377:70:::1;;:94:::0;6544:1934::o;2385:563::-;2479:7;2500;2521;2542;2574:27;2604:24;:22;:24::i;:::-;2659:42;;;;:21;:42;;;;;:55;;2728:51;;;;2793:61;;;;2868:63;;;;;2659:55;;2728:51;;-1:-1:-1;2793:61:46;;-1:-1:-1;2868:63:46;-1:-1:-1;2385:563:46;-1:-1:-1;;2385:563:46:o;1918:198:3:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:3;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:3;;6060:2:55;1998:73:3::1;::::0;::::1;6042:21:55::0;6099:2;6079:18;;;6072:30;6138:34;6118:18;;;6111:62;-1:-1:-1;;;6189:18:55;;;6182:36;6235:19;;1998:73:3::1;5858:402:55::0;1998:73:3::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;5693:156:46:-;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;5805:15:46::1;:37:::0;;-1:-1:-1;;;;;;5805:37:46::1;-1:-1:-1::0;;;;;5805:37:46;;;::::1;::::0;;;::::1;::::0;;5693:156::o;1027:420:45:-;1154:6;1193:9;1176:26;;:14;:26;;;1172:246;;;1253:26;1265:14;1253:9;:26;:::i;:::-;1241:39;;1245:35;;1241:2;:39;:::i;:::-;1225:56;;:6;:56;:::i;:::-;1218:63;;;;1172:246;1319:9;1302:26;;:14;:26;;;1298:120;;;1379:26;1396:9;1379:14;:26;:::i;:::-;1367:39;;1371:35;;1367:2;:39;:::i;:::-;1351:56;;:6;:56;:::i;1298:120::-;-1:-1:-1;1434:6:45;1027:420;;;;;;:::o;3451:96:37:-;3509:7;3535:5;3539:1;3535;:5;:::i;:::-;3528:12;;3451:96;;;;;:::o;3836:::-;3894:7;3920:5;3924:1;3920;:5;:::i;2270:187:3:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:3;;;-1:-1:-1;;;;;;2378:17:3;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;196:131:55:-;-1:-1:-1;;;;;271:31:55;;261:42;;251:70;;317:1;314;307:12;332:247;391:6;444:2;432:9;423:7;419:23;415:32;412:52;;;460:1;457;450:12;412:52;499:9;486:23;518:31;543:5;518:31;:::i;584:456::-;661:6;669;677;730:2;718:9;709:7;705:23;701:32;698:52;;;746:1;743;736:12;698:52;785:9;772:23;804:31;829:5;804:31;:::i;:::-;854:5;-1:-1:-1;906:2:55;891:18;;878:32;;-1:-1:-1;962:2:55;947:18;;934:32;975:33;934:32;975:33;:::i;:::-;1027:7;1017:17;;;584:456;;;;;:::o;1477:454::-;1572:6;1580;1588;1596;1604;1657:3;1645:9;1636:7;1632:23;1628:33;1625:53;;;1674:1;1671;1664:12;1625:53;-1:-1:-1;;1697:23:55;;;1767:2;1752:18;;1739:32;;-1:-1:-1;1818:2:55;1803:18;;1790:32;;1869:2;1854:18;;1841:32;;-1:-1:-1;1920:3:55;1905:19;1892:33;;-1:-1:-1;1477:454:55;-1:-1:-1;1477:454:55:o;2592:127::-;2653:10;2648:3;2644:20;2641:1;2634:31;2684:4;2681:1;2674:15;2708:4;2705:1;2698:15;2724:125;2764:4;2792:1;2789;2786:8;2783:34;;;2797:18;;:::i;:::-;-1:-1:-1;2834:9:55;;2724:125::o;2854:136::-;2893:3;2921:5;2911:39;;2930:18;;:::i;:::-;-1:-1:-1;;;2966:18:55;;2854:136::o;2995:356::-;3197:2;3179:21;;;3216:18;;;3209:30;3275:34;3270:2;3255:18;;3248:62;3342:2;3327:18;;2995:356::o;3716:179::-;3794:13;;3847:22;3836:34;;3826:45;;3816:73;;3885:1;3882;3875:12;3816:73;3716:179;;;:::o;3900:473::-;4003:6;4011;4019;4027;4035;4088:3;4076:9;4067:7;4063:23;4059:33;4056:53;;;4105:1;4102;4095:12;4056:53;4128:39;4157:9;4128:39;:::i;:::-;4118:49;;4207:2;4196:9;4192:18;4186:25;4176:35;;4251:2;4240:9;4236:18;4230:25;4220:35;;4295:2;4284:9;4280:18;4274:25;4264:35;;4318:49;4362:3;4351:9;4347:19;4318:49;:::i;:::-;4308:59;;3900:473;;;;;;;;:::o;4378:273::-;4446:6;4499:2;4487:9;4478:7;4474:23;4470:32;4467:52;;;4515:1;4512;4505:12;4467:52;4547:9;4541:16;4597:4;4590:5;4586:16;4579:5;4576:27;4566:55;;4617:1;4614;4607:12;5044:277;5111:6;5164:2;5152:9;5143:7;5139:23;5135:32;5132:52;;;5180:1;5177;5170:12;5132:52;5212:9;5206:16;5265:5;5258:13;5251:21;5244:5;5241:32;5231:60;;5287:1;5284;5277:12;6265:195;6303:4;6340;6337:1;6333:12;6372:4;6369:1;6365:12;6397:3;6392;6389:12;6386:38;;;6404:18;;:::i;:::-;6441:13;;;6265:195;-1:-1:-1;;;6265:195:55:o;6465:422::-;6554:1;6597:5;6554:1;6611:270;6632:7;6622:8;6619:21;6611:270;;;6691:4;6687:1;6683:6;6679:17;6673:4;6670:27;6667:53;;;6700:18;;:::i;:::-;6750:7;6740:8;6736:22;6733:55;;;6770:16;;;;6733:55;6849:22;;;;6809:15;;;;6611:270;;;6615:3;6465:422;;;;;:::o;6892:806::-;6941:5;6971:8;6961:80;;-1:-1:-1;7012:1:55;7026:5;;6961:80;7060:4;7050:76;;-1:-1:-1;7097:1:55;7111:5;;7050:76;7142:4;7160:1;7155:59;;;;7228:1;7223:130;;;;7135:218;;7155:59;7185:1;7176:10;;7199:5;;;7223:130;7260:3;7250:8;7247:17;7244:43;;;7267:18;;:::i;:::-;-1:-1:-1;;7323:1:55;7309:16;;7338:5;;7135:218;;7437:2;7427:8;7424:16;7418:3;7412:4;7409:13;7405:36;7399:2;7389:8;7386:16;7381:2;7375:4;7372:12;7368:35;7365:77;7362:159;;;-1:-1:-1;7474:19:55;;;7506:5;;7362:159;7553:34;7578:8;7572:4;7553:34;:::i;:::-;7623:6;7619:1;7615:6;7611:19;7602:7;7599:32;7596:58;;;7634:18;;:::i;:::-;7672:20;;6892:806;-1:-1:-1;;;6892:806:55:o;7703:131::-;7763:5;7792:36;7819:8;7813:4;7792:36;:::i;7839:553::-;7878:7;-1:-1:-1;;;;;7948:9:55;;;7976;;;8001:11;;;8020:10;;;8014:17;;7997:35;7994:61;;;8035:18;;:::i;:::-;-1:-1:-1;;;8111:1:55;8104:9;;8129:11;;;8149;;;8142:19;;8125:37;8122:63;;;8165:18;;:::i;:::-;8211:1;8208;8204:9;8194:19;;8258:1;8254:2;8249:11;8246:1;8242:19;8237:2;8233;8229:11;8225:37;8222:63;;;8265:18;;:::i;:::-;8330:1;8326:2;8321:11;8318:1;8314:19;8309:2;8305;8301:11;8297:37;8294:63;;;8337:18;;:::i;:::-;-1:-1:-1;;;8377:9:55;;;;;7839:553;-1:-1:-1;;;7839:553:55:o;8397:127::-;8458:10;8453:3;8449:20;8446:1;8439:31;8489:4;8486:1;8479:15;8513:4;8510:1;8503:15;8529:193;8568:1;8594;8584:35;;8599:18;;:::i;:::-;-1:-1:-1;;;8635:18:55;;-1:-1:-1;;8655:13:55;;8631:38;8628:64;;;8672:18;;:::i;:::-;-1:-1:-1;8706:10:55;;8529:193::o;8727:168::-;8767:7;8833:1;8829;8825:6;8821:14;8818:1;8815:21;8810:1;8803:9;8796:17;8792:45;8789:71;;;8840:18;;:::i;:::-;-1:-1:-1;8880:9:55;;8727:168::o;8900:120::-;8940:1;8966;8956:35;;8971:18;;:::i;:::-;-1:-1:-1;9005:9:55;;8900:120::o",
  source:
    '// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity ^0.8.11;\n\nimport "@openzeppelin/contracts/access/Ownable.sol";\nimport "@openzeppelin/contracts/token/ERC20/IERC20.sol";\nimport "@openzeppelin/contracts/utils/Counters.sol";\nimport "@openzeppelin/contracts/utils/math/SafeMath.sol";\nimport "@openzeppelin/contracts/security/ReentrancyGuard.sol";\nimport "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol";\nimport "../libraries/PriceConverter.sol";\nimport "../token/interfaces/IERC20Custom.sol";\n\ncontract Presale is Ownable, ReentrancyGuard {\n    using Counters for Counters.Counter;\n    using SafeMath for uint256;\n\n    struct PresaleData {\n        uint256 startingTime;\n        uint256 usdPrice;\n        uint256 minimumUSDPurchase;\n        uint256 maximumPresaleAmount;\n    }\n\n    event TokenPresold(\n        address indexed to,\n        address indexed paymentTokenAddress,\n        uint256 amount,\n        uint256 paymentTokenamount\n    );\n\n    Counters.Counter public totalPresaleRound;\n    address public tokenAddress;\n    address payable public presaleReceiver;\n\n    // Mapping `presaleRound` to its data details\n    mapping(uint256 => PresaleData) presaleDetailsMapping;\n    mapping(address => bool) presaleTokenAvaliblilityMapping;\n\n    error presaleRoundClosed();\n    error presaleTokenNotAvailable();\n    error presaleNativeTokenPaymentNotSufficient();\n    error presaleStartingTimeInvalid();\n    error presaleUSDPriceInvalid();\n    error presaleMimumumUSDPurchaseInvalid();\n    error presaleMaximumPresaleAmountInvalid();\n\n    constructor(address _tokenAddress, address payable _presaleReceiver) {\n        tokenAddress = _tokenAddress;\n        presaleReceiver = _presaleReceiver;\n    }\n\n    /**\n     * Get Current Presale Round\n     */\n    function getCurrentPresaleRound() public view returns (uint256) {\n        for (\n            uint256 presaleRound = totalPresaleRound.current() - 1;\n            presaleRound > 0;\n            presaleRound--\n        ) {\n            if (\n                presaleDetailsMapping[presaleRound].startingTime <=\n                block.timestamp\n            ) {\n                return presaleRound;\n            }\n        }\n\n        return 0;\n    }\n\n    /**\n     * Getting the Current Presale Details, including:\n     * - Starting Time\n     * - USD Price\n     * - Minimum USD Purchase\n     * - Maximum Presale Amount\n     */\n    function getCurrentPresaleDetails()\n        public\n        view\n        returns (\n            uint256,\n            uint256,\n            uint256,\n            uint256\n        )\n    {\n        uint256 currentPresaleRound = getCurrentPresaleRound();\n        return (\n            presaleDetailsMapping[currentPresaleRound].startingTime,\n            presaleDetailsMapping[currentPresaleRound].usdPrice,\n            presaleDetailsMapping[currentPresaleRound].minimumUSDPurchase,\n            presaleDetailsMapping[currentPresaleRound].maximumPresaleAmount\n        );\n    }\n\n    /**\n     * Execute the Presale of ALPS Token in exchange of other token\n     *\n     * @dev _paymentTokenAddress - Address of the token use to pay (address 0 is for native token)\n     * @dev _amount - Amount denominated in the `paymentTokenAddress` being paid\n     * @dev _aggregatorTokenAddress - Use to convert price with Chainlink\n     */\n    function presaleTokens(\n        address _paymentTokenAddress,\n        uint256 _amount,\n        address _aggregatorTokenAddress\n    ) public payable nonReentrant {\n        (\n            uint256 currentPresaleStartingTime,\n            uint256 currentPresalePrice,\n            ,\n\n        ) = getCurrentPresaleDetails();\n\n        // Check whether the presale round is still open\n        if (block.timestamp >= currentPresaleStartingTime)\n            revert presaleRoundClosed();\n\n        // Check whether token is valid\n        if (presaleTokenAvaliblilityMapping[_paymentTokenAddress])\n            revert presaleTokenNotAvailable();\n\n        // Convert the token with Chainlink Price Feed\n        IERC20Custom token = IERC20Custom(tokenAddress);\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\n            _aggregatorTokenAddress\n        );\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        uint256 presaleAmount = SafeMath.div(\n            SafeMath.mul(\n                uint256(\n                    PriceConverter.scalePrice(\n                        price,\n                        priceFeed.decimals(),\n                        token.decimals()\n                    )\n                ),\n                _amount\n            ),\n            currentPresalePrice\n        );\n\n        // Receive the payment token and transfer it to another address\n        if (_paymentTokenAddress == address(0)) {\n            if (msg.value < _amount) {\n                revert presaleNativeTokenPaymentNotSufficient();\n            } else {\n                presaleReceiver.transfer(_amount);\n\n                // in case you deployed the contract with more ether than required,\n                // transfer the remaining ether back to yourself\n                payable(msg.sender).transfer(address(this).balance);\n            }\n        } else {\n            IERC20 paymentToken = IERC20(_paymentTokenAddress);\n            paymentToken.transferFrom(msg.sender, presaleReceiver, _amount);\n        }\n\n        // Send ALPS token to `msg.sender`\n        token.mint(msg.sender, presaleAmount);\n        emit TokenPresold(\n            msg.sender,\n            _paymentTokenAddress,\n            presaleAmount,\n            _amount\n        );\n    }\n\n    /**\n     * Set new Presale Receiver Address\n     *\n     * @dev _newPresaleReceiver - Address that\'ll receive the presale payment token\n     */\n    function setPresaleReceiver(address payable _newPresaleReceiver)\n        public\n        onlyOwner\n    {\n        presaleReceiver = _newPresaleReceiver;\n    }\n\n    /**\n     * Set new Presale Token Address\n     *\n     * @dev _newTokenAddress - Address of token that\'ll be presaled\n     */\n    function setPresaleTokenAddress(address _newTokenAddress) public onlyOwner {\n        tokenAddress = _newTokenAddress;\n    }\n\n    /**\n     * Creating/Updating a presale round information\n     *\n     * @dev _presaleRound - The presale round chosen\n     * @dev _startingTime - The starting Presale time\n     * @dev _usdPrice - The USD Price of the Token in certain Presale Round\n     * @dev _minimumUSDPurchase - The minimum USD amount to purchase the token\n     * @dev _maximumPresaleAmount - The maximum amount of token available for a presale round\n     */\n    function setPresaleRound(\n        uint256 _presaleRound,\n        uint256 _startingTime,\n        uint256 _usdPrice,\n        uint256 _minimumUSDPurchase,\n        uint256 _maximumPresaleAmount\n    ) public onlyOwner {\n        uint256 presaleStartingTime = presaleDetailsMapping[_presaleRound]\n            .startingTime;\n        uint256 presaleUSDPrice = presaleDetailsMapping[_presaleRound].usdPrice;\n        uint256 presaleMinimumUSDPurchase = presaleDetailsMapping[_presaleRound]\n            .minimumUSDPurchase;\n        uint256 presaleMaximumPresaleAmount = presaleDetailsMapping[\n            _presaleRound\n        ].maximumPresaleAmount;\n\n        // Increment the total round counter when new presale is created\n        if (\n            presaleStartingTime == 0 &&\n            presaleUSDPrice == 0 &&\n            presaleMinimumUSDPurchase == 0 &&\n            presaleMaximumPresaleAmount == 0\n        ) totalPresaleRound.increment();\n\n        // Starting time has to be:\n        // - larger than zero\n        // - larger than previous round starting time\n        if (\n            _startingTime == 0 ||\n            (_presaleRound != 0 &&\n                _startingTime <\n                presaleDetailsMapping[_presaleRound - 1].startingTime)\n        ) revert presaleStartingTimeInvalid();\n\n        // These values given must be larger than zero\n        if (_usdPrice == 0) revert presaleUSDPriceInvalid();\n        if (_minimumUSDPurchase == 0) revert presaleMimumumUSDPurchaseInvalid();\n        if (_maximumPresaleAmount == 0)\n            revert presaleMaximumPresaleAmountInvalid();\n\n        presaleDetailsMapping[_presaleRound].startingTime = _startingTime;\n        presaleDetailsMapping[_presaleRound].usdPrice = _usdPrice;\n        presaleDetailsMapping[_presaleRound]\n            .minimumUSDPurchase = _minimumUSDPurchase;\n        presaleDetailsMapping[_presaleRound]\n            .maximumPresaleAmount = _maximumPresaleAmount;\n    }\n}\n',
  sourcePath:
    "/Users/yosephks/Documents/GitHub/alpsfinance-smart-contracts/contracts/presale/Presale.sol",
  ast: {
    absolutePath: "project:/contracts/presale/Presale.sol",
    exportedSymbols: {
      AggregatorV3Interface: [45],
      Context: [5297],
      Counters: [5371],
      IERC20: [2884],
      IERC20Custom: [9114],
      Ownable: [532],
      Presale: [8101],
      PriceConverter: [7631],
      ReentrancyGuard: [742],
      SafeMath: [7057],
    },
    id: 8102,
    license: "AGPL-3.0",
    nodeType: "SourceUnit",
    nodes: [
      {
        id: 7633,
        literals: ["solidity", "^", "0.8", ".11"],
        nodeType: "PragmaDirective",
        src: "38:24:46",
      },
      {
        absolutePath: "@openzeppelin/contracts/access/Ownable.sol",
        file: "@openzeppelin/contracts/access/Ownable.sol",
        id: 7634,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8102,
        sourceUnit: 533,
        src: "64:52:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        file: "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        id: 7635,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8102,
        sourceUnit: 2885,
        src: "117:56:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/utils/Counters.sol",
        file: "@openzeppelin/contracts/utils/Counters.sol",
        id: 7636,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8102,
        sourceUnit: 5372,
        src: "174:52:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/utils/math/SafeMath.sol",
        file: "@openzeppelin/contracts/utils/math/SafeMath.sol",
        id: 7637,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8102,
        sourceUnit: 7058,
        src: "227:57:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        file: "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        id: 7638,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8102,
        sourceUnit: 743,
        src: "285:62:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath:
          "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        file: "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        id: 7639,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8102,
        sourceUnit: 46,
        src: "348:76:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "project:/contracts/libraries/PriceConverter.sol",
        file: "../libraries/PriceConverter.sol",
        id: 7640,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8102,
        sourceUnit: 7632,
        src: "425:41:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "project:/contracts/token/interfaces/IERC20Custom.sol",
        file: "../token/interfaces/IERC20Custom.sol",
        id: 7641,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8102,
        sourceUnit: 9115,
        src: "467:46:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 7642,
              name: "Ownable",
              nodeType: "IdentifierPath",
              referencedDeclaration: 532,
              src: "535:7:46",
            },
            id: 7643,
            nodeType: "InheritanceSpecifier",
            src: "535:7:46",
          },
          {
            baseName: {
              id: 7644,
              name: "ReentrancyGuard",
              nodeType: "IdentifierPath",
              referencedDeclaration: 742,
              src: "544:15:46",
            },
            id: 7645,
            nodeType: "InheritanceSpecifier",
            src: "544:15:46",
          },
        ],
        canonicalName: "Presale",
        contractDependencies: [],
        contractKind: "contract",
        fullyImplemented: true,
        id: 8101,
        linearizedBaseContracts: [8101, 742, 532, 5297],
        name: "Presale",
        nameLocation: "524:7:46",
        nodeType: "ContractDefinition",
        nodes: [
          {
            id: 7649,
            libraryName: {
              id: 7646,
              name: "Counters",
              nodeType: "IdentifierPath",
              referencedDeclaration: 5371,
              src: "572:8:46",
            },
            nodeType: "UsingForDirective",
            src: "566:36:46",
            typeName: {
              id: 7648,
              nodeType: "UserDefinedTypeName",
              pathNode: {
                id: 7647,
                name: "Counters.Counter",
                nodeType: "IdentifierPath",
                referencedDeclaration: 5303,
                src: "585:16:46",
              },
              referencedDeclaration: 5303,
              src: "585:16:46",
              typeDescriptions: {
                typeIdentifier: "t_struct$_Counter_$5303_storage_ptr",
                typeString: "struct Counters.Counter",
              },
            },
          },
          {
            id: 7652,
            libraryName: {
              id: 7650,
              name: "SafeMath",
              nodeType: "IdentifierPath",
              referencedDeclaration: 7057,
              src: "613:8:46",
            },
            nodeType: "UsingForDirective",
            src: "607:27:46",
            typeName: {
              id: 7651,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "626:7:46",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
          },
          {
            canonicalName: "Presale.PresaleData",
            id: 7661,
            members: [
              {
                constant: false,
                id: 7654,
                mutability: "mutable",
                name: "startingTime",
                nameLocation: "677:12:46",
                nodeType: "VariableDeclaration",
                scope: 7661,
                src: "669:20:46",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 7653,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "669:7:46",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 7656,
                mutability: "mutable",
                name: "usdPrice",
                nameLocation: "707:8:46",
                nodeType: "VariableDeclaration",
                scope: 7661,
                src: "699:16:46",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 7655,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "699:7:46",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 7658,
                mutability: "mutable",
                name: "minimumUSDPurchase",
                nameLocation: "733:18:46",
                nodeType: "VariableDeclaration",
                scope: 7661,
                src: "725:26:46",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 7657,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "725:7:46",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 7660,
                mutability: "mutable",
                name: "maximumPresaleAmount",
                nameLocation: "769:20:46",
                nodeType: "VariableDeclaration",
                scope: 7661,
                src: "761:28:46",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 7659,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "761:7:46",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
            ],
            name: "PresaleData",
            nameLocation: "647:11:46",
            nodeType: "StructDefinition",
            scope: 8101,
            src: "640:156:46",
            visibility: "public",
          },
          {
            anonymous: false,
            id: 7671,
            name: "TokenPresold",
            nameLocation: "808:12:46",
            nodeType: "EventDefinition",
            parameters: {
              id: 7670,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7663,
                  indexed: true,
                  mutability: "mutable",
                  name: "to",
                  nameLocation: "846:2:46",
                  nodeType: "VariableDeclaration",
                  scope: 7671,
                  src: "830:18:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7662,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "830:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7665,
                  indexed: true,
                  mutability: "mutable",
                  name: "paymentTokenAddress",
                  nameLocation: "874:19:46",
                  nodeType: "VariableDeclaration",
                  scope: 7671,
                  src: "858:35:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7664,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "858:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7667,
                  indexed: false,
                  mutability: "mutable",
                  name: "amount",
                  nameLocation: "911:6:46",
                  nodeType: "VariableDeclaration",
                  scope: 7671,
                  src: "903:14:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7666,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "903:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7669,
                  indexed: false,
                  mutability: "mutable",
                  name: "paymentTokenamount",
                  nameLocation: "935:18:46",
                  nodeType: "VariableDeclaration",
                  scope: 7671,
                  src: "927:26:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7668,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "927:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "820:139:46",
            },
            src: "802:158:46",
          },
          {
            constant: false,
            functionSelector: "962de5c0",
            id: 7674,
            mutability: "mutable",
            name: "totalPresaleRound",
            nameLocation: "990:17:46",
            nodeType: "VariableDeclaration",
            scope: 8101,
            src: "966:41:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_struct$_Counter_$5303_storage",
              typeString: "struct Counters.Counter",
            },
            typeName: {
              id: 7673,
              nodeType: "UserDefinedTypeName",
              pathNode: {
                id: 7672,
                name: "Counters.Counter",
                nodeType: "IdentifierPath",
                referencedDeclaration: 5303,
                src: "966:16:46",
              },
              referencedDeclaration: 5303,
              src: "966:16:46",
              typeDescriptions: {
                typeIdentifier: "t_struct$_Counter_$5303_storage_ptr",
                typeString: "struct Counters.Counter",
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "9d76ea58",
            id: 7676,
            mutability: "mutable",
            name: "tokenAddress",
            nameLocation: "1028:12:46",
            nodeType: "VariableDeclaration",
            scope: 8101,
            src: "1013:27:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_address",
              typeString: "address",
            },
            typeName: {
              id: 7675,
              name: "address",
              nodeType: "ElementaryTypeName",
              src: "1013:7:46",
              stateMutability: "nonpayable",
              typeDescriptions: {
                typeIdentifier: "t_address",
                typeString: "address",
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "c1436415",
            id: 7678,
            mutability: "mutable",
            name: "presaleReceiver",
            nameLocation: "1069:15:46",
            nodeType: "VariableDeclaration",
            scope: 8101,
            src: "1046:38:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_address_payable",
              typeString: "address payable",
            },
            typeName: {
              id: 7677,
              name: "address",
              nodeType: "ElementaryTypeName",
              src: "1046:15:46",
              stateMutability: "payable",
              typeDescriptions: {
                typeIdentifier: "t_address_payable",
                typeString: "address payable",
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            id: 7683,
            mutability: "mutable",
            name: "presaleDetailsMapping",
            nameLocation: "1173:21:46",
            nodeType: "VariableDeclaration",
            scope: 8101,
            src: "1141:53:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier:
                "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
              typeString: "mapping(uint256 => struct Presale.PresaleData)",
            },
            typeName: {
              id: 7682,
              keyType: {
                id: 7679,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "1149:7:46",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "1141:31:46",
              typeDescriptions: {
                typeIdentifier:
                  "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                typeString: "mapping(uint256 => struct Presale.PresaleData)",
              },
              valueType: {
                id: 7681,
                nodeType: "UserDefinedTypeName",
                pathNode: {
                  id: 7680,
                  name: "PresaleData",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 7661,
                  src: "1160:11:46",
                },
                referencedDeclaration: 7661,
                src: "1160:11:46",
                typeDescriptions: {
                  typeIdentifier: "t_struct$_PresaleData_$7661_storage_ptr",
                  typeString: "struct Presale.PresaleData",
                },
              },
            },
            visibility: "internal",
          },
          {
            constant: false,
            id: 7687,
            mutability: "mutable",
            name: "presaleTokenAvaliblilityMapping",
            nameLocation: "1225:31:46",
            nodeType: "VariableDeclaration",
            scope: 8101,
            src: "1200:56:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_address_$_t_bool_$",
              typeString: "mapping(address => bool)",
            },
            typeName: {
              id: 7686,
              keyType: {
                id: 7684,
                name: "address",
                nodeType: "ElementaryTypeName",
                src: "1208:7:46",
                typeDescriptions: {
                  typeIdentifier: "t_address",
                  typeString: "address",
                },
              },
              nodeType: "Mapping",
              src: "1200:24:46",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_address_$_t_bool_$",
                typeString: "mapping(address => bool)",
              },
              valueType: {
                id: 7685,
                name: "bool",
                nodeType: "ElementaryTypeName",
                src: "1219:4:46",
                typeDescriptions: {
                  typeIdentifier: "t_bool",
                  typeString: "bool",
                },
              },
            },
            visibility: "internal",
          },
          {
            id: 7689,
            name: "presaleRoundClosed",
            nameLocation: "1269:18:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7688,
              nodeType: "ParameterList",
              parameters: [],
              src: "1287:2:46",
            },
            src: "1263:27:46",
          },
          {
            id: 7691,
            name: "presaleTokenNotAvailable",
            nameLocation: "1301:24:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7690,
              nodeType: "ParameterList",
              parameters: [],
              src: "1325:2:46",
            },
            src: "1295:33:46",
          },
          {
            id: 7693,
            name: "presaleNativeTokenPaymentNotSufficient",
            nameLocation: "1339:38:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7692,
              nodeType: "ParameterList",
              parameters: [],
              src: "1377:2:46",
            },
            src: "1333:47:46",
          },
          {
            id: 7695,
            name: "presaleStartingTimeInvalid",
            nameLocation: "1391:26:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7694,
              nodeType: "ParameterList",
              parameters: [],
              src: "1417:2:46",
            },
            src: "1385:35:46",
          },
          {
            id: 7697,
            name: "presaleUSDPriceInvalid",
            nameLocation: "1431:22:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7696,
              nodeType: "ParameterList",
              parameters: [],
              src: "1453:2:46",
            },
            src: "1425:31:46",
          },
          {
            id: 7699,
            name: "presaleMimumumUSDPurchaseInvalid",
            nameLocation: "1467:32:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7698,
              nodeType: "ParameterList",
              parameters: [],
              src: "1499:2:46",
            },
            src: "1461:41:46",
          },
          {
            id: 7701,
            name: "presaleMaximumPresaleAmountInvalid",
            nameLocation: "1513:34:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7700,
              nodeType: "ParameterList",
              parameters: [],
              src: "1547:2:46",
            },
            src: "1507:43:46",
          },
          {
            body: {
              id: 7716,
              nodeType: "Block",
              src: "1625:89:46",
              statements: [
                {
                  expression: {
                    id: 7710,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 7708,
                      name: "tokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7676,
                      src: "1635:12:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 7709,
                      name: "_tokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7703,
                      src: "1650:13:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "1635:28:46",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 7711,
                  nodeType: "ExpressionStatement",
                  src: "1635:28:46",
                },
                {
                  expression: {
                    id: 7714,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 7712,
                      name: "presaleReceiver",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7678,
                      src: "1673:15:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 7713,
                      name: "_presaleReceiver",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7705,
                      src: "1691:16:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    src: "1673:34:46",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  id: 7715,
                  nodeType: "ExpressionStatement",
                  src: "1673:34:46",
                },
              ],
            },
            id: 7717,
            implemented: true,
            kind: "constructor",
            modifiers: [],
            name: "",
            nameLocation: "-1:-1:-1",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7706,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7703,
                  mutability: "mutable",
                  name: "_tokenAddress",
                  nameLocation: "1576:13:46",
                  nodeType: "VariableDeclaration",
                  scope: 7717,
                  src: "1568:21:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7702,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1568:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7705,
                  mutability: "mutable",
                  name: "_presaleReceiver",
                  nameLocation: "1607:16:46",
                  nodeType: "VariableDeclaration",
                  scope: 7717,
                  src: "1591:32:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address_payable",
                    typeString: "address payable",
                  },
                  typeName: {
                    id: 7704,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1591:15:46",
                    stateMutability: "payable",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1567:57:46",
            },
            returnParameters: {
              id: 7707,
              nodeType: "ParameterList",
              parameters: [],
              src: "1625:0:46",
            },
            scope: 8101,
            src: "1556:158:46",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 7752,
              nodeType: "Block",
              src: "1833:371:46",
              statements: [
                {
                  body: {
                    id: 7748,
                    nodeType: "Block",
                    src: "1984:195:46",
                    statements: [
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 7743,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              baseExpression: {
                                id: 7737,
                                name: "presaleDetailsMapping",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 7683,
                                src: "2019:21:46",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                                  typeString:
                                    "mapping(uint256 => struct Presale.PresaleData storage ref)",
                                },
                              },
                              id: 7739,
                              indexExpression: {
                                id: 7738,
                                name: "presaleRound",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 7724,
                                src: "2041:12:46",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "2019:35:46",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_PresaleData_$7661_storage",
                                typeString:
                                  "struct Presale.PresaleData storage ref",
                              },
                            },
                            id: 7740,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "startingTime",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 7654,
                            src: "2019:48:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "<=",
                          rightExpression: {
                            expression: {
                              id: 7741,
                              name: "block",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967292,
                              src: "2087:5:46",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_block",
                                typeString: "block",
                              },
                            },
                            id: 7742,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "timestamp",
                            nodeType: "MemberAccess",
                            src: "2087:15:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "2019:83:46",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 7747,
                        nodeType: "IfStatement",
                        src: "1998:171:46",
                        trueBody: {
                          id: 7746,
                          nodeType: "Block",
                          src: "2117:52:46",
                          statements: [
                            {
                              expression: {
                                id: 7744,
                                name: "presaleRound",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 7724,
                                src: "2142:12:46",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              functionReturnParameters: 7722,
                              id: 7745,
                              nodeType: "Return",
                              src: "2135:19:46",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 7733,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 7731,
                      name: "presaleRound",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7724,
                      src: "1929:12:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: ">",
                    rightExpression: {
                      hexValue: "30",
                      id: 7732,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "1944:1:46",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "1929:16:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 7749,
                  initializationExpression: {
                    assignments: [7724],
                    declarations: [
                      {
                        constant: false,
                        id: 7724,
                        mutability: "mutable",
                        name: "presaleRound",
                        nameLocation: "1869:12:46",
                        nodeType: "VariableDeclaration",
                        scope: 7749,
                        src: "1861:20:46",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 7723,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "1861:7:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 7730,
                    initialValue: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 7729,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        arguments: [],
                        expression: {
                          argumentTypes: [],
                          expression: {
                            id: 7725,
                            name: "totalPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7674,
                            src: "1884:17:46",
                            typeDescriptions: {
                              typeIdentifier: "t_struct$_Counter_$5303_storage",
                              typeString: "struct Counters.Counter storage ref",
                            },
                          },
                          id: 7726,
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "current",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 5315,
                          src: "1884:25:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_view$_t_struct$_Counter_$5303_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5303_storage_ptr_$",
                            typeString:
                              "function (struct Counters.Counter storage pointer) view returns (uint256)",
                          },
                        },
                        id: 7727,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "1884:27:46",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "-",
                      rightExpression: {
                        hexValue: "31",
                        id: 7728,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "1914:1:46",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_1_by_1",
                          typeString: "int_const 1",
                        },
                        value: "1",
                      },
                      src: "1884:31:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "1861:54:46",
                  },
                  loopExpression: {
                    expression: {
                      id: 7735,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "--",
                      prefix: false,
                      src: "1959:14:46",
                      subExpression: {
                        id: 7734,
                        name: "presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7724,
                        src: "1959:12:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 7736,
                    nodeType: "ExpressionStatement",
                    src: "1959:14:46",
                  },
                  nodeType: "ForStatement",
                  src: "1843:336:46",
                },
                {
                  expression: {
                    hexValue: "30",
                    id: 7750,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "number",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "2196:1:46",
                    typeDescriptions: {
                      typeIdentifier: "t_rational_0_by_1",
                      typeString: "int_const 0",
                    },
                    value: "0",
                  },
                  functionReturnParameters: 7722,
                  id: 7751,
                  nodeType: "Return",
                  src: "2189:8:46",
                },
              ],
            },
            documentation: {
              id: 7718,
              nodeType: "StructuredDocumentation",
              src: "1720:44:46",
              text: " Get Current Presale Round",
            },
            functionSelector: "1c63f0ed",
            id: 7753,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "getCurrentPresaleRound",
            nameLocation: "1778:22:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7719,
              nodeType: "ParameterList",
              parameters: [],
              src: "1800:2:46",
            },
            returnParameters: {
              id: 7722,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7721,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7753,
                  src: "1824:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7720,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1824:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1823:9:46",
            },
            scope: 8101,
            src: "1769:435:46",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 7788,
              nodeType: "Block",
              src: "2564:384:46",
              statements: [
                {
                  assignments: [7766],
                  declarations: [
                    {
                      constant: false,
                      id: 7766,
                      mutability: "mutable",
                      name: "currentPresaleRound",
                      nameLocation: "2582:19:46",
                      nodeType: "VariableDeclaration",
                      scope: 7788,
                      src: "2574:27:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7765,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "2574:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7769,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 7767,
                      name: "getCurrentPresaleRound",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7753,
                      src: "2604:22:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$__$returns$_t_uint256_$",
                        typeString: "function () view returns (uint256)",
                      },
                    },
                    id: 7768,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2604:24:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "2574:54:46",
                },
                {
                  expression: {
                    components: [
                      {
                        expression: {
                          baseExpression: {
                            id: 7770,
                            name: "presaleDetailsMapping",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7683,
                            src: "2659:21:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                              typeString:
                                "mapping(uint256 => struct Presale.PresaleData storage ref)",
                            },
                          },
                          id: 7772,
                          indexExpression: {
                            id: 7771,
                            name: "currentPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7766,
                            src: "2681:19:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "2659:42:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_PresaleData_$7661_storage",
                            typeString:
                              "struct Presale.PresaleData storage ref",
                          },
                        },
                        id: 7773,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "startingTime",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 7654,
                        src: "2659:55:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          baseExpression: {
                            id: 7774,
                            name: "presaleDetailsMapping",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7683,
                            src: "2728:21:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                              typeString:
                                "mapping(uint256 => struct Presale.PresaleData storage ref)",
                            },
                          },
                          id: 7776,
                          indexExpression: {
                            id: 7775,
                            name: "currentPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7766,
                            src: "2750:19:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "2728:42:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_PresaleData_$7661_storage",
                            typeString:
                              "struct Presale.PresaleData storage ref",
                          },
                        },
                        id: 7777,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "usdPrice",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 7656,
                        src: "2728:51:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          baseExpression: {
                            id: 7778,
                            name: "presaleDetailsMapping",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7683,
                            src: "2793:21:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                              typeString:
                                "mapping(uint256 => struct Presale.PresaleData storage ref)",
                            },
                          },
                          id: 7780,
                          indexExpression: {
                            id: 7779,
                            name: "currentPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7766,
                            src: "2815:19:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "2793:42:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_PresaleData_$7661_storage",
                            typeString:
                              "struct Presale.PresaleData storage ref",
                          },
                        },
                        id: 7781,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "minimumUSDPurchase",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 7658,
                        src: "2793:61:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          baseExpression: {
                            id: 7782,
                            name: "presaleDetailsMapping",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7683,
                            src: "2868:21:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                              typeString:
                                "mapping(uint256 => struct Presale.PresaleData storage ref)",
                            },
                          },
                          id: 7784,
                          indexExpression: {
                            id: 7783,
                            name: "currentPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7766,
                            src: "2890:19:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "2868:42:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_PresaleData_$7661_storage",
                            typeString:
                              "struct Presale.PresaleData storage ref",
                          },
                        },
                        id: 7785,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "maximumPresaleAmount",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 7660,
                        src: "2868:63:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    id: 7786,
                    isConstant: false,
                    isInlineArray: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "TupleExpression",
                    src: "2645:296:46",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      typeString: "tuple(uint256,uint256,uint256,uint256)",
                    },
                  },
                  functionReturnParameters: 7764,
                  id: 7787,
                  nodeType: "Return",
                  src: "2638:303:46",
                },
              ],
            },
            documentation: {
              id: 7754,
              nodeType: "StructuredDocumentation",
              src: "2210:170:46",
              text: " Getting the Current Presale Details, including:\n - Starting Time\n - USD Price\n - Minimum USD Purchase\n - Maximum Presale Amount",
            },
            functionSelector: "ec2b3523",
            id: 7789,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "getCurrentPresaleDetails",
            nameLocation: "2394:24:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7755,
              nodeType: "ParameterList",
              parameters: [],
              src: "2418:2:46",
            },
            returnParameters: {
              id: 7764,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7757,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7789,
                  src: "2479:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7756,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2479:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7759,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7789,
                  src: "2500:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7758,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2500:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7761,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7789,
                  src: "2521:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7760,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2521:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7763,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7789,
                  src: "2542:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7762,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2542:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2465:94:46",
            },
            scope: 8101,
            src: "2385:563:46",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 7937,
              nodeType: "Block",
              src: "3460:2080:46",
              statements: [
                {
                  assignments: [7802, 7804, null, null],
                  declarations: [
                    {
                      constant: false,
                      id: 7802,
                      mutability: "mutable",
                      name: "currentPresaleStartingTime",
                      nameLocation: "3492:26:46",
                      nodeType: "VariableDeclaration",
                      scope: 7937,
                      src: "3484:34:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7801,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "3484:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                    {
                      constant: false,
                      id: 7804,
                      mutability: "mutable",
                      name: "currentPresalePrice",
                      nameLocation: "3540:19:46",
                      nodeType: "VariableDeclaration",
                      scope: 7937,
                      src: "3532:27:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7803,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "3532:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                    null,
                    null,
                  ],
                  id: 7807,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 7805,
                      name: "getCurrentPresaleDetails",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7789,
                      src: "3588:24:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        typeString:
                          "function () view returns (uint256,uint256,uint256,uint256)",
                      },
                    },
                    id: 7806,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3588:26:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier:
                        "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      typeString: "tuple(uint256,uint256,uint256,uint256)",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "3470:144:46",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 7811,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 7808,
                        name: "block",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 4294967292,
                        src: "3686:5:46",
                        typeDescriptions: {
                          typeIdentifier: "t_magic_block",
                          typeString: "block",
                        },
                      },
                      id: 7809,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "timestamp",
                      nodeType: "MemberAccess",
                      src: "3686:15:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: ">=",
                    rightExpression: {
                      id: 7810,
                      name: "currentPresaleStartingTime",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7802,
                      src: "3705:26:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "3686:45:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 7815,
                  nodeType: "IfStatement",
                  src: "3682:90:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 7812,
                        name: "presaleRoundClosed",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7689,
                        src: "3752:18:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 7813,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "3752:20:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 7814,
                    nodeType: "RevertStatement",
                    src: "3745:27:46",
                  },
                },
                {
                  condition: {
                    baseExpression: {
                      id: 7816,
                      name: "presaleTokenAvaliblilityMapping",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7687,
                      src: "3827:31:46",
                      typeDescriptions: {
                        typeIdentifier: "t_mapping$_t_address_$_t_bool_$",
                        typeString: "mapping(address => bool)",
                      },
                    },
                    id: 7818,
                    indexExpression: {
                      id: 7817,
                      name: "_paymentTokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7792,
                      src: "3859:20:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "3827:53:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 7822,
                  nodeType: "IfStatement",
                  src: "3823:104:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 7819,
                        name: "presaleTokenNotAvailable",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7691,
                        src: "3901:24:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 7820,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "3901:26:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 7821,
                    nodeType: "RevertStatement",
                    src: "3894:33:46",
                  },
                },
                {
                  assignments: [7825],
                  declarations: [
                    {
                      constant: false,
                      id: 7825,
                      mutability: "mutable",
                      name: "token",
                      nameLocation: "4006:5:46",
                      nodeType: "VariableDeclaration",
                      scope: 7937,
                      src: "3993:18:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_IERC20Custom_$9114",
                        typeString: "contract IERC20Custom",
                      },
                      typeName: {
                        id: 7824,
                        nodeType: "UserDefinedTypeName",
                        pathNode: {
                          id: 7823,
                          name: "IERC20Custom",
                          nodeType: "IdentifierPath",
                          referencedDeclaration: 9114,
                          src: "3993:12:46",
                        },
                        referencedDeclaration: 9114,
                        src: "3993:12:46",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_IERC20Custom_$9114",
                          typeString: "contract IERC20Custom",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7829,
                  initialValue: {
                    arguments: [
                      {
                        id: 7827,
                        name: "tokenAddress",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7676,
                        src: "4027:12:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      id: 7826,
                      name: "IERC20Custom",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 9114,
                      src: "4014:12:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_type$_t_contract$_IERC20Custom_$9114_$",
                        typeString: "type(contract IERC20Custom)",
                      },
                    },
                    id: 7828,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "typeConversion",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4014:26:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_contract$_IERC20Custom_$9114",
                      typeString: "contract IERC20Custom",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "3993:47:46",
                },
                {
                  assignments: [7832],
                  declarations: [
                    {
                      constant: false,
                      id: 7832,
                      mutability: "mutable",
                      name: "priceFeed",
                      nameLocation: "4072:9:46",
                      nodeType: "VariableDeclaration",
                      scope: 7937,
                      src: "4050:31:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_AggregatorV3Interface_$45",
                        typeString: "contract AggregatorV3Interface",
                      },
                      typeName: {
                        id: 7831,
                        nodeType: "UserDefinedTypeName",
                        pathNode: {
                          id: 7830,
                          name: "AggregatorV3Interface",
                          nodeType: "IdentifierPath",
                          referencedDeclaration: 45,
                          src: "4050:21:46",
                        },
                        referencedDeclaration: 45,
                        src: "4050:21:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_contract$_AggregatorV3Interface_$45",
                          typeString: "contract AggregatorV3Interface",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7836,
                  initialValue: {
                    arguments: [
                      {
                        id: 7834,
                        name: "_aggregatorTokenAddress",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7796,
                        src: "4119:23:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      id: 7833,
                      name: "AggregatorV3Interface",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 45,
                      src: "4084:21:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                        typeString: "type(contract AggregatorV3Interface)",
                      },
                    },
                    id: 7835,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "typeConversion",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4084:68:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_contract$_AggregatorV3Interface_$45",
                      typeString: "contract AggregatorV3Interface",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4050:102:46",
                },
                {
                  assignments: [null, 7838, null, null, null],
                  declarations: [
                    null,
                    {
                      constant: false,
                      id: 7838,
                      mutability: "mutable",
                      name: "price",
                      nameLocation: "4172:5:46",
                      nodeType: "VariableDeclaration",
                      scope: 7937,
                      src: "4165:12:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_int256",
                        typeString: "int256",
                      },
                      typeName: {
                        id: 7837,
                        name: "int256",
                        nodeType: "ElementaryTypeName",
                        src: "4165:6:46",
                        typeDescriptions: {
                          typeIdentifier: "t_int256",
                          typeString: "int256",
                        },
                      },
                      visibility: "internal",
                    },
                    null,
                    null,
                    null,
                  ],
                  id: 7842,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 7839,
                        name: "priceFeed",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7832,
                        src: "4187:9:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_contract$_AggregatorV3Interface_$45",
                          typeString: "contract AggregatorV3Interface",
                        },
                      },
                      id: 7840,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "latestRoundData",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 44,
                      src: "4187:25:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        typeString:
                          "function () view external returns (uint80,int256,uint256,uint256,uint80)",
                      },
                    },
                    id: 7841,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4187:27:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier:
                        "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      typeString: "tuple(uint80,int256,uint256,uint256,uint80)",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4162:52:46",
                },
                {
                  assignments: [7844],
                  declarations: [
                    {
                      constant: false,
                      id: 7844,
                      mutability: "mutable",
                      name: "presaleAmount",
                      nameLocation: "4232:13:46",
                      nodeType: "VariableDeclaration",
                      scope: 7937,
                      src: "4224:21:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7843,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "4224:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7866,
                  initialValue: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    id: 7853,
                                    name: "price",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7838,
                                    src: "4384:5:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_int256",
                                      typeString: "int256",
                                    },
                                  },
                                  {
                                    arguments: [],
                                    expression: {
                                      argumentTypes: [],
                                      expression: {
                                        id: 7854,
                                        name: "priceFeed",
                                        nodeType: "Identifier",
                                        overloadedDeclarations: [],
                                        referencedDeclaration: 7832,
                                        src: "4415:9:46",
                                        typeDescriptions: {
                                          typeIdentifier:
                                            "t_contract$_AggregatorV3Interface_$45",
                                          typeString:
                                            "contract AggregatorV3Interface",
                                        },
                                      },
                                      id: 7855,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: false,
                                      lValueRequested: false,
                                      memberName: "decimals",
                                      nodeType: "MemberAccess",
                                      referencedDeclaration: 6,
                                      src: "4415:18:46",
                                      typeDescriptions: {
                                        typeIdentifier:
                                          "t_function_external_view$__$returns$_t_uint8_$",
                                        typeString:
                                          "function () view external returns (uint8)",
                                      },
                                    },
                                    id: 7856,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    kind: "functionCall",
                                    lValueRequested: false,
                                    names: [],
                                    nodeType: "FunctionCall",
                                    src: "4415:20:46",
                                    tryCall: false,
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint8",
                                      typeString: "uint8",
                                    },
                                  },
                                  {
                                    arguments: [],
                                    expression: {
                                      argumentTypes: [],
                                      expression: {
                                        id: 7857,
                                        name: "token",
                                        nodeType: "Identifier",
                                        overloadedDeclarations: [],
                                        referencedDeclaration: 7825,
                                        src: "4461:5:46",
                                        typeDescriptions: {
                                          typeIdentifier:
                                            "t_contract$_IERC20Custom_$9114",
                                          typeString: "contract IERC20Custom",
                                        },
                                      },
                                      id: 7858,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: false,
                                      lValueRequested: false,
                                      memberName: "decimals",
                                      nodeType: "MemberAccess",
                                      referencedDeclaration: 9068,
                                      src: "4461:14:46",
                                      typeDescriptions: {
                                        typeIdentifier:
                                          "t_function_external_view$__$returns$_t_uint8_$",
                                        typeString:
                                          "function () view external returns (uint8)",
                                      },
                                    },
                                    id: 7859,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    kind: "functionCall",
                                    lValueRequested: false,
                                    names: [],
                                    nodeType: "FunctionCall",
                                    src: "4461:16:46",
                                    tryCall: false,
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint8",
                                      typeString: "uint8",
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_int256",
                                      typeString: "int256",
                                    },
                                    {
                                      typeIdentifier: "t_uint8",
                                      typeString: "uint8",
                                    },
                                    {
                                      typeIdentifier: "t_uint8",
                                      typeString: "uint8",
                                    },
                                  ],
                                  expression: {
                                    id: 7851,
                                    name: "PriceConverter",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7631,
                                    src: "4333:14:46",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_type$_t_contract$_PriceConverter_$7631_$",
                                      typeString:
                                        "type(library PriceConverter)",
                                    },
                                  },
                                  id: 7852,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "scalePrice",
                                  nodeType: "MemberAccess",
                                  referencedDeclaration: 7630,
                                  src: "4333:25:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_internal_pure$_t_int256_$_t_uint8_$_t_uint8_$returns$_t_int256_$",
                                    typeString:
                                      "function (int256,uint8,uint8) pure returns (int256)",
                                  },
                                },
                                id: 7860,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "4333:166:46",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_int256",
                                  typeString: "int256",
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_int256",
                                  typeString: "int256",
                                },
                              ],
                              id: 7850,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "4304:7:46",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_uint256_$",
                                typeString: "type(uint256)",
                              },
                              typeName: {
                                id: 7849,
                                name: "uint256",
                                nodeType: "ElementaryTypeName",
                                src: "4304:7:46",
                                typeDescriptions: {},
                              },
                            },
                            id: 7861,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "4304:213:46",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          {
                            id: 7862,
                            name: "_amount",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7794,
                            src: "4535:7:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          ],
                          expression: {
                            id: 7847,
                            name: "SafeMath",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7057,
                            src: "4274:8:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_type$_t_contract$_SafeMath_$7057_$",
                              typeString: "type(library SafeMath)",
                            },
                          },
                          id: 7848,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "mul",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 6951,
                          src: "4274:12:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            typeString:
                              "function (uint256,uint256) pure returns (uint256)",
                          },
                        },
                        id: 7863,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "4274:282:46",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        id: 7864,
                        name: "currentPresalePrice",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7804,
                        src: "4570:19:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 7845,
                        name: "SafeMath",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7057,
                        src: "4248:8:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_SafeMath_$7057_$",
                          typeString: "type(library SafeMath)",
                        },
                      },
                      id: 7846,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "div",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 6966,
                      src: "4248:12:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        typeString:
                          "function (uint256,uint256) pure returns (uint256)",
                      },
                    },
                    id: 7865,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4248:351:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4224:375:46",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    id: 7872,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 7867,
                      name: "_paymentTokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7792,
                      src: "4686:20:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      arguments: [
                        {
                          hexValue: "30",
                          id: 7870,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "4718:1:46",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                          value: "0",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                        ],
                        id: 7869,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        nodeType: "ElementaryTypeNameExpression",
                        src: "4710:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_type$_t_address_$",
                          typeString: "type(address)",
                        },
                        typeName: {
                          id: 7868,
                          name: "address",
                          nodeType: "ElementaryTypeName",
                          src: "4710:7:46",
                          typeDescriptions: {},
                        },
                      },
                      id: 7871,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "typeConversion",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "4710:10:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "4686:34:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  falseBody: {
                    id: 7919,
                    nodeType: "Block",
                    src: "5148:152:46",
                    statements: [
                      {
                        assignments: [7905],
                        declarations: [
                          {
                            constant: false,
                            id: 7905,
                            mutability: "mutable",
                            name: "paymentToken",
                            nameLocation: "5169:12:46",
                            nodeType: "VariableDeclaration",
                            scope: 7919,
                            src: "5162:19:46",
                            stateVariable: false,
                            storageLocation: "default",
                            typeDescriptions: {
                              typeIdentifier: "t_contract$_IERC20_$2884",
                              typeString: "contract IERC20",
                            },
                            typeName: {
                              id: 7904,
                              nodeType: "UserDefinedTypeName",
                              pathNode: {
                                id: 7903,
                                name: "IERC20",
                                nodeType: "IdentifierPath",
                                referencedDeclaration: 2884,
                                src: "5162:6:46",
                              },
                              referencedDeclaration: 2884,
                              src: "5162:6:46",
                              typeDescriptions: {
                                typeIdentifier: "t_contract$_IERC20_$2884",
                                typeString: "contract IERC20",
                              },
                            },
                            visibility: "internal",
                          },
                        ],
                        id: 7909,
                        initialValue: {
                          arguments: [
                            {
                              id: 7907,
                              name: "_paymentTokenAddress",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7792,
                              src: "5191:20:46",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            ],
                            id: 7906,
                            name: "IERC20",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2884,
                            src: "5184:6:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_type$_t_contract$_IERC20_$2884_$",
                              typeString: "type(contract IERC20)",
                            },
                          },
                          id: 7908,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "5184:28:46",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_contract$_IERC20_$2884",
                            typeString: "contract IERC20",
                          },
                        },
                        nodeType: "VariableDeclarationStatement",
                        src: "5162:50:46",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              expression: {
                                id: 7913,
                                name: "msg",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 4294967281,
                                src: "5252:3:46",
                                typeDescriptions: {
                                  typeIdentifier: "t_magic_message",
                                  typeString: "msg",
                                },
                              },
                              id: 7914,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "sender",
                              nodeType: "MemberAccess",
                              src: "5252:10:46",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            {
                              id: 7915,
                              name: "presaleReceiver",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7678,
                              src: "5264:15:46",
                              typeDescriptions: {
                                typeIdentifier: "t_address_payable",
                                typeString: "address payable",
                              },
                            },
                            {
                              id: 7916,
                              name: "_amount",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7794,
                              src: "5281:7:46",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                              {
                                typeIdentifier: "t_address_payable",
                                typeString: "address payable",
                              },
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            ],
                            expression: {
                              id: 7910,
                              name: "paymentToken",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7905,
                              src: "5226:12:46",
                              typeDescriptions: {
                                typeIdentifier: "t_contract$_IERC20_$2884",
                                typeString: "contract IERC20",
                              },
                            },
                            id: 7912,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "transferFrom",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 2865,
                            src: "5226:25:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              typeString:
                                "function (address,address,uint256) external returns (bool)",
                            },
                          },
                          id: 7917,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "5226:63:46",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 7918,
                        nodeType: "ExpressionStatement",
                        src: "5226:63:46",
                      },
                    ],
                  },
                  id: 7920,
                  nodeType: "IfStatement",
                  src: "4682:618:46",
                  trueBody: {
                    id: 7902,
                    nodeType: "Block",
                    src: "4722:420:46",
                    statements: [
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 7876,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              id: 7873,
                              name: "msg",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967281,
                              src: "4740:3:46",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_message",
                                typeString: "msg",
                              },
                            },
                            id: 7874,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "value",
                            nodeType: "MemberAccess",
                            src: "4740:9:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "<",
                          rightExpression: {
                            id: 7875,
                            name: "_amount",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7794,
                            src: "4752:7:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "4740:19:46",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        falseBody: {
                          id: 7900,
                          nodeType: "Block",
                          src: "4847:285:46",
                          statements: [
                            {
                              expression: {
                                arguments: [
                                  {
                                    id: 7884,
                                    name: "_amount",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7794,
                                    src: "4890:7:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  ],
                                  expression: {
                                    id: 7881,
                                    name: "presaleReceiver",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7678,
                                    src: "4865:15:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_address_payable",
                                      typeString: "address payable",
                                    },
                                  },
                                  id: 7883,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "transfer",
                                  nodeType: "MemberAccess",
                                  src: "4865:24:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    typeString: "function (uint256)",
                                  },
                                },
                                id: 7885,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "4865:33:46",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_tuple$__$",
                                  typeString: "tuple()",
                                },
                              },
                              id: 7886,
                              nodeType: "ExpressionStatement",
                              src: "4865:33:46",
                            },
                            {
                              expression: {
                                arguments: [
                                  {
                                    expression: {
                                      arguments: [
                                        {
                                          id: 7895,
                                          name: "this",
                                          nodeType: "Identifier",
                                          overloadedDeclarations: [],
                                          referencedDeclaration: 4294967268,
                                          src: "5103:4:46",
                                          typeDescriptions: {
                                            typeIdentifier:
                                              "t_contract$_Presale_$8101",
                                            typeString: "contract Presale",
                                          },
                                        },
                                      ],
                                      expression: {
                                        argumentTypes: [
                                          {
                                            typeIdentifier:
                                              "t_contract$_Presale_$8101",
                                            typeString: "contract Presale",
                                          },
                                        ],
                                        id: 7894,
                                        isConstant: false,
                                        isLValue: false,
                                        isPure: true,
                                        lValueRequested: false,
                                        nodeType:
                                          "ElementaryTypeNameExpression",
                                        src: "5095:7:46",
                                        typeDescriptions: {
                                          typeIdentifier: "t_type$_t_address_$",
                                          typeString: "type(address)",
                                        },
                                        typeName: {
                                          id: 7893,
                                          name: "address",
                                          nodeType: "ElementaryTypeName",
                                          src: "5095:7:46",
                                          typeDescriptions: {},
                                        },
                                      },
                                      id: 7896,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: false,
                                      kind: "typeConversion",
                                      lValueRequested: false,
                                      names: [],
                                      nodeType: "FunctionCall",
                                      src: "5095:13:46",
                                      tryCall: false,
                                      typeDescriptions: {
                                        typeIdentifier: "t_address",
                                        typeString: "address",
                                      },
                                    },
                                    id: 7897,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    lValueRequested: false,
                                    memberName: "balance",
                                    nodeType: "MemberAccess",
                                    src: "5095:21:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  ],
                                  expression: {
                                    arguments: [
                                      {
                                        expression: {
                                          id: 7889,
                                          name: "msg",
                                          nodeType: "Identifier",
                                          overloadedDeclarations: [],
                                          referencedDeclaration: 4294967281,
                                          src: "5074:3:46",
                                          typeDescriptions: {
                                            typeIdentifier: "t_magic_message",
                                            typeString: "msg",
                                          },
                                        },
                                        id: 7890,
                                        isConstant: false,
                                        isLValue: false,
                                        isPure: false,
                                        lValueRequested: false,
                                        memberName: "sender",
                                        nodeType: "MemberAccess",
                                        src: "5074:10:46",
                                        typeDescriptions: {
                                          typeIdentifier: "t_address",
                                          typeString: "address",
                                        },
                                      },
                                    ],
                                    expression: {
                                      argumentTypes: [
                                        {
                                          typeIdentifier: "t_address",
                                          typeString: "address",
                                        },
                                      ],
                                      id: 7888,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: true,
                                      lValueRequested: false,
                                      nodeType: "ElementaryTypeNameExpression",
                                      src: "5066:8:46",
                                      typeDescriptions: {
                                        typeIdentifier:
                                          "t_type$_t_address_payable_$",
                                        typeString: "type(address payable)",
                                      },
                                      typeName: {
                                        id: 7887,
                                        name: "address",
                                        nodeType: "ElementaryTypeName",
                                        src: "5066:8:46",
                                        stateMutability: "payable",
                                        typeDescriptions: {},
                                      },
                                    },
                                    id: 7891,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    kind: "typeConversion",
                                    lValueRequested: false,
                                    names: [],
                                    nodeType: "FunctionCall",
                                    src: "5066:19:46",
                                    tryCall: false,
                                    typeDescriptions: {
                                      typeIdentifier: "t_address_payable",
                                      typeString: "address payable",
                                    },
                                  },
                                  id: 7892,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "transfer",
                                  nodeType: "MemberAccess",
                                  src: "5066:28:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    typeString: "function (uint256)",
                                  },
                                },
                                id: 7898,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "5066:51:46",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_tuple$__$",
                                  typeString: "tuple()",
                                },
                              },
                              id: 7899,
                              nodeType: "ExpressionStatement",
                              src: "5066:51:46",
                            },
                          ],
                        },
                        id: 7901,
                        nodeType: "IfStatement",
                        src: "4736:396:46",
                        trueBody: {
                          id: 7880,
                          nodeType: "Block",
                          src: "4761:80:46",
                          statements: [
                            {
                              errorCall: {
                                arguments: [],
                                expression: {
                                  argumentTypes: [],
                                  id: 7877,
                                  name: "presaleNativeTokenPaymentNotSufficient",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 7693,
                                  src: "4786:38:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_error_pure$__$returns$__$",
                                    typeString: "function () pure",
                                  },
                                },
                                id: 7878,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "4786:40:46",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_tuple$__$",
                                  typeString: "tuple()",
                                },
                              },
                              id: 7879,
                              nodeType: "RevertStatement",
                              src: "4779:47:46",
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
                {
                  expression: {
                    arguments: [
                      {
                        expression: {
                          id: 7924,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 4294967281,
                          src: "5364:3:46",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 7925,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        src: "5364:10:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 7926,
                        name: "presaleAmount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7844,
                        src: "5376:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 7921,
                        name: "token",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7825,
                        src: "5353:5:46",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_IERC20Custom_$9114",
                          typeString: "contract IERC20Custom",
                        },
                      },
                      id: 7923,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "mint",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 9101,
                      src: "5353:10:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,uint256) external",
                      },
                    },
                    id: 7927,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5353:37:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 7928,
                  nodeType: "ExpressionStatement",
                  src: "5353:37:46",
                },
                {
                  eventCall: {
                    arguments: [
                      {
                        expression: {
                          id: 7930,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 4294967281,
                          src: "5431:3:46",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 7931,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        src: "5431:10:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 7932,
                        name: "_paymentTokenAddress",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7792,
                        src: "5455:20:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 7933,
                        name: "presaleAmount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7844,
                        src: "5489:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        id: 7934,
                        name: "_amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7794,
                        src: "5516:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 7929,
                      name: "TokenPresold",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7671,
                      src: "5405:12:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        typeString:
                          "function (address,address,uint256,uint256)",
                      },
                    },
                    id: 7935,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5405:128:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 7936,
                  nodeType: "EmitStatement",
                  src: "5400:133:46",
                },
              ],
            },
            documentation: {
              id: 7790,
              nodeType: "StructuredDocumentation",
              src: "2954:340:46",
              text: " Execute the Presale of ALPS Token in exchange of other token\n @dev _paymentTokenAddress - Address of the token use to pay (address 0 is for native token)\n @dev _amount - Amount denominated in the `paymentTokenAddress` being paid\n @dev _aggregatorTokenAddress - Use to convert price with Chainlink",
            },
            functionSelector: "6a107cd8",
            id: 7938,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 7799,
                kind: "modifierInvocation",
                modifierName: {
                  id: 7798,
                  name: "nonReentrant",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 741,
                  src: "3447:12:46",
                },
                nodeType: "ModifierInvocation",
                src: "3447:12:46",
              },
            ],
            name: "presaleTokens",
            nameLocation: "3308:13:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7797,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7792,
                  mutability: "mutable",
                  name: "_paymentTokenAddress",
                  nameLocation: "3339:20:46",
                  nodeType: "VariableDeclaration",
                  scope: 7938,
                  src: "3331:28:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7791,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "3331:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7794,
                  mutability: "mutable",
                  name: "_amount",
                  nameLocation: "3377:7:46",
                  nodeType: "VariableDeclaration",
                  scope: 7938,
                  src: "3369:15:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7793,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3369:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7796,
                  mutability: "mutable",
                  name: "_aggregatorTokenAddress",
                  nameLocation: "3402:23:46",
                  nodeType: "VariableDeclaration",
                  scope: 7938,
                  src: "3394:31:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7795,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "3394:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3321:110:46",
            },
            returnParameters: {
              id: 7800,
              nodeType: "ParameterList",
              parameters: [],
              src: "3460:0:46",
            },
            scope: 8101,
            src: "3299:2241:46",
            stateMutability: "payable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 7950,
              nodeType: "Block",
              src: "5795:54:46",
              statements: [
                {
                  expression: {
                    id: 7948,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 7946,
                      name: "presaleReceiver",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7678,
                      src: "5805:15:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 7947,
                      name: "_newPresaleReceiver",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7941,
                      src: "5823:19:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    src: "5805:37:46",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  id: 7949,
                  nodeType: "ExpressionStatement",
                  src: "5805:37:46",
                },
              ],
            },
            documentation: {
              id: 7939,
              nodeType: "StructuredDocumentation",
              src: "5546:142:46",
              text: " Set new Presale Receiver Address\n @dev _newPresaleReceiver - Address that'll receive the presale payment token",
            },
            functionSelector: "feda925b",
            id: 7951,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 7944,
                kind: "modifierInvocation",
                modifierName: {
                  id: 7943,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 474,
                  src: "5781:9:46",
                },
                nodeType: "ModifierInvocation",
                src: "5781:9:46",
              },
            ],
            name: "setPresaleReceiver",
            nameLocation: "5702:18:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7942,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7941,
                  mutability: "mutable",
                  name: "_newPresaleReceiver",
                  nameLocation: "5737:19:46",
                  nodeType: "VariableDeclaration",
                  scope: 7951,
                  src: "5721:35:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address_payable",
                    typeString: "address payable",
                  },
                  typeName: {
                    id: 7940,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "5721:15:46",
                    stateMutability: "payable",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "5720:37:46",
            },
            returnParameters: {
              id: 7945,
              nodeType: "ParameterList",
              parameters: [],
              src: "5795:0:46",
            },
            scope: 8101,
            src: "5693:156:46",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 7963,
              nodeType: "Block",
              src: "6058:48:46",
              statements: [
                {
                  expression: {
                    id: 7961,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 7959,
                      name: "tokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7676,
                      src: "6068:12:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 7960,
                      name: "_newTokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7954,
                      src: "6083:16:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "6068:31:46",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 7962,
                  nodeType: "ExpressionStatement",
                  src: "6068:31:46",
                },
              ],
            },
            documentation: {
              id: 7952,
              nodeType: "StructuredDocumentation",
              src: "5855:123:46",
              text: " Set new Presale Token Address\n @dev _newTokenAddress - Address of token that'll be presaled",
            },
            functionSelector: "3c0c134d",
            id: 7964,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 7957,
                kind: "modifierInvocation",
                modifierName: {
                  id: 7956,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 474,
                  src: "6048:9:46",
                },
                nodeType: "ModifierInvocation",
                src: "6048:9:46",
              },
            ],
            name: "setPresaleTokenAddress",
            nameLocation: "5992:22:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7955,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7954,
                  mutability: "mutable",
                  name: "_newTokenAddress",
                  nameLocation: "6023:16:46",
                  nodeType: "VariableDeclaration",
                  scope: 7964,
                  src: "6015:24:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7953,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "6015:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "6014:26:46",
            },
            returnParameters: {
              id: 7958,
              nodeType: "ParameterList",
              parameters: [],
              src: "6058:0:46",
            },
            scope: 8101,
            src: "5983:123:46",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 8099,
              nodeType: "Block",
              src: "6757:1721:46",
              statements: [
                {
                  assignments: [7981],
                  declarations: [
                    {
                      constant: false,
                      id: 7981,
                      mutability: "mutable",
                      name: "presaleStartingTime",
                      nameLocation: "6775:19:46",
                      nodeType: "VariableDeclaration",
                      scope: 8099,
                      src: "6767:27:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7980,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6767:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7986,
                  initialValue: {
                    expression: {
                      baseExpression: {
                        id: 7982,
                        name: "presaleDetailsMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7683,
                        src: "6797:21:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                          typeString:
                            "mapping(uint256 => struct Presale.PresaleData storage ref)",
                        },
                      },
                      id: 7984,
                      indexExpression: {
                        id: 7983,
                        name: "_presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7967,
                        src: "6819:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "6797:36:46",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                        typeString: "struct Presale.PresaleData storage ref",
                      },
                    },
                    id: 7985,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberName: "startingTime",
                    nodeType: "MemberAccess",
                    referencedDeclaration: 7654,
                    src: "6797:62:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6767:92:46",
                },
                {
                  assignments: [7988],
                  declarations: [
                    {
                      constant: false,
                      id: 7988,
                      mutability: "mutable",
                      name: "presaleUSDPrice",
                      nameLocation: "6877:15:46",
                      nodeType: "VariableDeclaration",
                      scope: 8099,
                      src: "6869:23:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7987,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6869:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7993,
                  initialValue: {
                    expression: {
                      baseExpression: {
                        id: 7989,
                        name: "presaleDetailsMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7683,
                        src: "6895:21:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                          typeString:
                            "mapping(uint256 => struct Presale.PresaleData storage ref)",
                        },
                      },
                      id: 7991,
                      indexExpression: {
                        id: 7990,
                        name: "_presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7967,
                        src: "6917:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "6895:36:46",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                        typeString: "struct Presale.PresaleData storage ref",
                      },
                    },
                    id: 7992,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberName: "usdPrice",
                    nodeType: "MemberAccess",
                    referencedDeclaration: 7656,
                    src: "6895:45:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6869:71:46",
                },
                {
                  assignments: [7995],
                  declarations: [
                    {
                      constant: false,
                      id: 7995,
                      mutability: "mutable",
                      name: "presaleMinimumUSDPurchase",
                      nameLocation: "6958:25:46",
                      nodeType: "VariableDeclaration",
                      scope: 8099,
                      src: "6950:33:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7994,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6950:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 8000,
                  initialValue: {
                    expression: {
                      baseExpression: {
                        id: 7996,
                        name: "presaleDetailsMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7683,
                        src: "6986:21:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                          typeString:
                            "mapping(uint256 => struct Presale.PresaleData storage ref)",
                        },
                      },
                      id: 7998,
                      indexExpression: {
                        id: 7997,
                        name: "_presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7967,
                        src: "7008:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "6986:36:46",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                        typeString: "struct Presale.PresaleData storage ref",
                      },
                    },
                    id: 7999,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberName: "minimumUSDPurchase",
                    nodeType: "MemberAccess",
                    referencedDeclaration: 7658,
                    src: "6986:68:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6950:104:46",
                },
                {
                  assignments: [8002],
                  declarations: [
                    {
                      constant: false,
                      id: 8002,
                      mutability: "mutable",
                      name: "presaleMaximumPresaleAmount",
                      nameLocation: "7072:27:46",
                      nodeType: "VariableDeclaration",
                      scope: 8099,
                      src: "7064:35:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 8001,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "7064:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 8007,
                  initialValue: {
                    expression: {
                      baseExpression: {
                        id: 8003,
                        name: "presaleDetailsMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7683,
                        src: "7102:21:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                          typeString:
                            "mapping(uint256 => struct Presale.PresaleData storage ref)",
                        },
                      },
                      id: 8005,
                      indexExpression: {
                        id: 8004,
                        name: "_presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7967,
                        src: "7137:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "7102:58:46",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                        typeString: "struct Presale.PresaleData storage ref",
                      },
                    },
                    id: 8006,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberName: "maximumPresaleAmount",
                    nodeType: "MemberAccess",
                    referencedDeclaration: 7660,
                    src: "7102:79:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "7064:117:46",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    id: 8022,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      id: 8018,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        commonType: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        id: 8014,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 8010,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 8008,
                            name: "presaleStartingTime",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7981,
                            src: "7282:19:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "==",
                          rightExpression: {
                            hexValue: "30",
                            id: 8009,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "7305:1:46",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_0_by_1",
                              typeString: "int_const 0",
                            },
                            value: "0",
                          },
                          src: "7282:24:46",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "&&",
                        rightExpression: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 8013,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 8011,
                            name: "presaleUSDPrice",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7988,
                            src: "7322:15:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "==",
                          rightExpression: {
                            hexValue: "30",
                            id: 8012,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "7341:1:46",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_0_by_1",
                              typeString: "int_const 0",
                            },
                            value: "0",
                          },
                          src: "7322:20:46",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        src: "7282:60:46",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "&&",
                      rightExpression: {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 8017,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 8015,
                          name: "presaleMinimumUSDPurchase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7995,
                          src: "7358:25:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "==",
                        rightExpression: {
                          hexValue: "30",
                          id: 8016,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "7387:1:46",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                          value: "0",
                        },
                        src: "7358:30:46",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      src: "7282:106:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "&&",
                    rightExpression: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 8021,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 8019,
                        name: "presaleMaximumPresaleAmount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 8002,
                        src: "7404:27:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "==",
                      rightExpression: {
                        hexValue: "30",
                        id: 8020,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "7435:1:46",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_0_by_1",
                          typeString: "int_const 0",
                        },
                        value: "0",
                      },
                      src: "7404:32:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    src: "7282:154:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8028,
                  nodeType: "IfStatement",
                  src: "7265:211:46",
                  trueBody: {
                    expression: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        expression: {
                          id: 8023,
                          name: "totalPresaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7674,
                          src: "7447:17:46",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Counter_$5303_storage",
                            typeString: "struct Counters.Counter storage ref",
                          },
                        },
                        id: 8025,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "increment",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 5329,
                        src: "7447:27:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_struct$_Counter_$5303_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$5303_storage_ptr_$",
                          typeString:
                            "function (struct Counters.Counter storage pointer)",
                        },
                      },
                      id: 8026,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "7447:29:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 8027,
                    nodeType: "ExpressionStatement",
                    src: "7447:29:46",
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    id: 8045,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 8031,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 8029,
                        name: "_startingTime",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7969,
                        src: "7624:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "==",
                      rightExpression: {
                        hexValue: "30",
                        id: 8030,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "7641:1:46",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_0_by_1",
                          typeString: "int_const 0",
                        },
                        value: "0",
                      },
                      src: "7624:18:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "||",
                    rightExpression: {
                      components: [
                        {
                          commonType: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          id: 8043,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            commonType: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            id: 8034,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              id: 8032,
                              name: "_presaleRound",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7967,
                              src: "7659:13:46",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            nodeType: "BinaryOperation",
                            operator: "!=",
                            rightExpression: {
                              hexValue: "30",
                              id: 8033,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "7676:1:46",
                              typeDescriptions: {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                              value: "0",
                            },
                            src: "7659:18:46",
                            typeDescriptions: {
                              typeIdentifier: "t_bool",
                              typeString: "bool",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "&&",
                          rightExpression: {
                            commonType: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            id: 8042,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              id: 8035,
                              name: "_startingTime",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7969,
                              src: "7697:13:46",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            nodeType: "BinaryOperation",
                            operator: "<",
                            rightExpression: {
                              expression: {
                                baseExpression: {
                                  id: 8036,
                                  name: "presaleDetailsMapping",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 7683,
                                  src: "7729:21:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                                    typeString:
                                      "mapping(uint256 => struct Presale.PresaleData storage ref)",
                                  },
                                },
                                id: 8040,
                                indexExpression: {
                                  commonType: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                  id: 8039,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  leftExpression: {
                                    id: 8037,
                                    name: "_presaleRound",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7967,
                                    src: "7751:13:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  nodeType: "BinaryOperation",
                                  operator: "-",
                                  rightExpression: {
                                    hexValue: "31",
                                    id: 8038,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: true,
                                    kind: "number",
                                    lValueRequested: false,
                                    nodeType: "Literal",
                                    src: "7767:1:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_rational_1_by_1",
                                      typeString: "int_const 1",
                                    },
                                    value: "1",
                                  },
                                  src: "7751:17:46",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: "IndexAccess",
                                src: "7729:40:46",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_PresaleData_$7661_storage",
                                  typeString:
                                    "struct Presale.PresaleData storage ref",
                                },
                              },
                              id: 8041,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "startingTime",
                              nodeType: "MemberAccess",
                              referencedDeclaration: 7654,
                              src: "7729:53:46",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            src: "7697:85:46",
                            typeDescriptions: {
                              typeIdentifier: "t_bool",
                              typeString: "bool",
                            },
                          },
                          src: "7659:123:46",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                      ],
                      id: 8044,
                      isConstant: false,
                      isInlineArray: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "TupleExpression",
                      src: "7658:125:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    src: "7624:159:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8049,
                  nodeType: "IfStatement",
                  src: "7607:222:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 8046,
                        name: "presaleStartingTimeInvalid",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7695,
                        src: "7801:26:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 8047,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "7801:28:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 8048,
                    nodeType: "RevertStatement",
                    src: "7794:35:46",
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 8052,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 8050,
                      name: "_usdPrice",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7971,
                      src: "7899:9:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      hexValue: "30",
                      id: 8051,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "7912:1:46",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "7899:14:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8056,
                  nodeType: "IfStatement",
                  src: "7895:51:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 8053,
                        name: "presaleUSDPriceInvalid",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7697,
                        src: "7922:22:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 8054,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "7922:24:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 8055,
                    nodeType: "RevertStatement",
                    src: "7915:31:46",
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 8059,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 8057,
                      name: "_minimumUSDPurchase",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7973,
                      src: "7960:19:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      hexValue: "30",
                      id: 8058,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "7983:1:46",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "7960:24:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8063,
                  nodeType: "IfStatement",
                  src: "7956:71:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 8060,
                        name: "presaleMimumumUSDPurchaseInvalid",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7699,
                        src: "7993:32:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 8061,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "7993:34:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 8062,
                    nodeType: "RevertStatement",
                    src: "7986:41:46",
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 8066,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 8064,
                      name: "_maximumPresaleAmount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7975,
                      src: "8041:21:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      hexValue: "30",
                      id: 8065,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "8066:1:46",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "8041:26:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8070,
                  nodeType: "IfStatement",
                  src: "8037:87:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 8067,
                        name: "presaleMaximumPresaleAmountInvalid",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7701,
                        src: "8088:34:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 8068,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "8088:36:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 8069,
                    nodeType: "RevertStatement",
                    src: "8081:43:46",
                  },
                },
                {
                  expression: {
                    id: 8076,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 8071,
                          name: "presaleDetailsMapping",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7683,
                          src: "8135:21:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                            typeString:
                              "mapping(uint256 => struct Presale.PresaleData storage ref)",
                          },
                        },
                        id: 8073,
                        indexExpression: {
                          id: 8072,
                          name: "_presaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7967,
                          src: "8157:13:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "8135:36:46",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                          typeString: "struct Presale.PresaleData storage ref",
                        },
                      },
                      id: 8074,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "startingTime",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 7654,
                      src: "8135:49:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8075,
                      name: "_startingTime",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7969,
                      src: "8187:13:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "8135:65:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 8077,
                  nodeType: "ExpressionStatement",
                  src: "8135:65:46",
                },
                {
                  expression: {
                    id: 8083,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 8078,
                          name: "presaleDetailsMapping",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7683,
                          src: "8210:21:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                            typeString:
                              "mapping(uint256 => struct Presale.PresaleData storage ref)",
                          },
                        },
                        id: 8080,
                        indexExpression: {
                          id: 8079,
                          name: "_presaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7967,
                          src: "8232:13:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "8210:36:46",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                          typeString: "struct Presale.PresaleData storage ref",
                        },
                      },
                      id: 8081,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "usdPrice",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 7656,
                      src: "8210:45:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8082,
                      name: "_usdPrice",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7971,
                      src: "8258:9:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "8210:57:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 8084,
                  nodeType: "ExpressionStatement",
                  src: "8210:57:46",
                },
                {
                  expression: {
                    id: 8090,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 8085,
                          name: "presaleDetailsMapping",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7683,
                          src: "8277:21:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                            typeString:
                              "mapping(uint256 => struct Presale.PresaleData storage ref)",
                          },
                        },
                        id: 8087,
                        indexExpression: {
                          id: 8086,
                          name: "_presaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7967,
                          src: "8299:13:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "8277:36:46",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                          typeString: "struct Presale.PresaleData storage ref",
                        },
                      },
                      id: 8088,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "minimumUSDPurchase",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 7658,
                      src: "8277:68:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8089,
                      name: "_minimumUSDPurchase",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7973,
                      src: "8348:19:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "8277:90:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 8091,
                  nodeType: "ExpressionStatement",
                  src: "8277:90:46",
                },
                {
                  expression: {
                    id: 8097,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 8092,
                          name: "presaleDetailsMapping",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7683,
                          src: "8377:21:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                            typeString:
                              "mapping(uint256 => struct Presale.PresaleData storage ref)",
                          },
                        },
                        id: 8094,
                        indexExpression: {
                          id: 8093,
                          name: "_presaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7967,
                          src: "8399:13:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "8377:36:46",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                          typeString: "struct Presale.PresaleData storage ref",
                        },
                      },
                      id: 8095,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "maximumPresaleAmount",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 7660,
                      src: "8377:70:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8096,
                      name: "_maximumPresaleAmount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7975,
                      src: "8450:21:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "8377:94:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 8098,
                  nodeType: "ExpressionStatement",
                  src: "8377:94:46",
                },
              ],
            },
            documentation: {
              id: 7965,
              nodeType: "StructuredDocumentation",
              src: "6112:427:46",
              text: " Creating/Updating a presale round information\n @dev _presaleRound - The presale round chosen\n @dev _startingTime - The starting Presale time\n @dev _usdPrice - The USD Price of the Token in certain Presale Round\n @dev _minimumUSDPurchase - The minimum USD amount to purchase the token\n @dev _maximumPresaleAmount - The maximum amount of token available for a presale round",
            },
            functionSelector: "c829d1db",
            id: 8100,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 7978,
                kind: "modifierInvocation",
                modifierName: {
                  id: 7977,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 474,
                  src: "6747:9:46",
                },
                nodeType: "ModifierInvocation",
                src: "6747:9:46",
              },
            ],
            name: "setPresaleRound",
            nameLocation: "6553:15:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7976,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7967,
                  mutability: "mutable",
                  name: "_presaleRound",
                  nameLocation: "6586:13:46",
                  nodeType: "VariableDeclaration",
                  scope: 8100,
                  src: "6578:21:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7966,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "6578:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7969,
                  mutability: "mutable",
                  name: "_startingTime",
                  nameLocation: "6617:13:46",
                  nodeType: "VariableDeclaration",
                  scope: 8100,
                  src: "6609:21:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7968,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "6609:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7971,
                  mutability: "mutable",
                  name: "_usdPrice",
                  nameLocation: "6648:9:46",
                  nodeType: "VariableDeclaration",
                  scope: 8100,
                  src: "6640:17:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7970,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "6640:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7973,
                  mutability: "mutable",
                  name: "_minimumUSDPurchase",
                  nameLocation: "6675:19:46",
                  nodeType: "VariableDeclaration",
                  scope: 8100,
                  src: "6667:27:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7972,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "6667:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7975,
                  mutability: "mutable",
                  name: "_maximumPresaleAmount",
                  nameLocation: "6712:21:46",
                  nodeType: "VariableDeclaration",
                  scope: 8100,
                  src: "6704:29:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7974,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "6704:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "6568:171:46",
            },
            returnParameters: {
              id: 7979,
              nodeType: "ParameterList",
              parameters: [],
              src: "6757:0:46",
            },
            scope: 8101,
            src: "6544:1934:46",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
        ],
        scope: 8102,
        src: "515:7965:46",
        usedErrors: [7689, 7691, 7693, 7695, 7697, 7699, 7701],
      },
    ],
    src: "38:8443:46",
  },
  legacyAST: {
    absolutePath: "project:/contracts/presale/Presale.sol",
    exportedSymbols: {
      AggregatorV3Interface: [45],
      Context: [5297],
      Counters: [5371],
      IERC20: [2884],
      IERC20Custom: [9114],
      Ownable: [532],
      Presale: [8101],
      PriceConverter: [7631],
      ReentrancyGuard: [742],
      SafeMath: [7057],
    },
    id: 8102,
    license: "AGPL-3.0",
    nodeType: "SourceUnit",
    nodes: [
      {
        id: 7633,
        literals: ["solidity", "^", "0.8", ".11"],
        nodeType: "PragmaDirective",
        src: "38:24:46",
      },
      {
        absolutePath: "@openzeppelin/contracts/access/Ownable.sol",
        file: "@openzeppelin/contracts/access/Ownable.sol",
        id: 7634,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8102,
        sourceUnit: 533,
        src: "64:52:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        file: "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        id: 7635,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8102,
        sourceUnit: 2885,
        src: "117:56:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/utils/Counters.sol",
        file: "@openzeppelin/contracts/utils/Counters.sol",
        id: 7636,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8102,
        sourceUnit: 5372,
        src: "174:52:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/utils/math/SafeMath.sol",
        file: "@openzeppelin/contracts/utils/math/SafeMath.sol",
        id: 7637,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8102,
        sourceUnit: 7058,
        src: "227:57:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        file: "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        id: 7638,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8102,
        sourceUnit: 743,
        src: "285:62:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath:
          "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        file: "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        id: 7639,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8102,
        sourceUnit: 46,
        src: "348:76:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "project:/contracts/libraries/PriceConverter.sol",
        file: "../libraries/PriceConverter.sol",
        id: 7640,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8102,
        sourceUnit: 7632,
        src: "425:41:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "project:/contracts/token/interfaces/IERC20Custom.sol",
        file: "../token/interfaces/IERC20Custom.sol",
        id: 7641,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8102,
        sourceUnit: 9115,
        src: "467:46:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 7642,
              name: "Ownable",
              nodeType: "IdentifierPath",
              referencedDeclaration: 532,
              src: "535:7:46",
            },
            id: 7643,
            nodeType: "InheritanceSpecifier",
            src: "535:7:46",
          },
          {
            baseName: {
              id: 7644,
              name: "ReentrancyGuard",
              nodeType: "IdentifierPath",
              referencedDeclaration: 742,
              src: "544:15:46",
            },
            id: 7645,
            nodeType: "InheritanceSpecifier",
            src: "544:15:46",
          },
        ],
        canonicalName: "Presale",
        contractDependencies: [],
        contractKind: "contract",
        fullyImplemented: true,
        id: 8101,
        linearizedBaseContracts: [8101, 742, 532, 5297],
        name: "Presale",
        nameLocation: "524:7:46",
        nodeType: "ContractDefinition",
        nodes: [
          {
            id: 7649,
            libraryName: {
              id: 7646,
              name: "Counters",
              nodeType: "IdentifierPath",
              referencedDeclaration: 5371,
              src: "572:8:46",
            },
            nodeType: "UsingForDirective",
            src: "566:36:46",
            typeName: {
              id: 7648,
              nodeType: "UserDefinedTypeName",
              pathNode: {
                id: 7647,
                name: "Counters.Counter",
                nodeType: "IdentifierPath",
                referencedDeclaration: 5303,
                src: "585:16:46",
              },
              referencedDeclaration: 5303,
              src: "585:16:46",
              typeDescriptions: {
                typeIdentifier: "t_struct$_Counter_$5303_storage_ptr",
                typeString: "struct Counters.Counter",
              },
            },
          },
          {
            id: 7652,
            libraryName: {
              id: 7650,
              name: "SafeMath",
              nodeType: "IdentifierPath",
              referencedDeclaration: 7057,
              src: "613:8:46",
            },
            nodeType: "UsingForDirective",
            src: "607:27:46",
            typeName: {
              id: 7651,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "626:7:46",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
          },
          {
            canonicalName: "Presale.PresaleData",
            id: 7661,
            members: [
              {
                constant: false,
                id: 7654,
                mutability: "mutable",
                name: "startingTime",
                nameLocation: "677:12:46",
                nodeType: "VariableDeclaration",
                scope: 7661,
                src: "669:20:46",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 7653,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "669:7:46",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 7656,
                mutability: "mutable",
                name: "usdPrice",
                nameLocation: "707:8:46",
                nodeType: "VariableDeclaration",
                scope: 7661,
                src: "699:16:46",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 7655,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "699:7:46",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 7658,
                mutability: "mutable",
                name: "minimumUSDPurchase",
                nameLocation: "733:18:46",
                nodeType: "VariableDeclaration",
                scope: 7661,
                src: "725:26:46",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 7657,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "725:7:46",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 7660,
                mutability: "mutable",
                name: "maximumPresaleAmount",
                nameLocation: "769:20:46",
                nodeType: "VariableDeclaration",
                scope: 7661,
                src: "761:28:46",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 7659,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "761:7:46",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
            ],
            name: "PresaleData",
            nameLocation: "647:11:46",
            nodeType: "StructDefinition",
            scope: 8101,
            src: "640:156:46",
            visibility: "public",
          },
          {
            anonymous: false,
            id: 7671,
            name: "TokenPresold",
            nameLocation: "808:12:46",
            nodeType: "EventDefinition",
            parameters: {
              id: 7670,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7663,
                  indexed: true,
                  mutability: "mutable",
                  name: "to",
                  nameLocation: "846:2:46",
                  nodeType: "VariableDeclaration",
                  scope: 7671,
                  src: "830:18:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7662,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "830:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7665,
                  indexed: true,
                  mutability: "mutable",
                  name: "paymentTokenAddress",
                  nameLocation: "874:19:46",
                  nodeType: "VariableDeclaration",
                  scope: 7671,
                  src: "858:35:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7664,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "858:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7667,
                  indexed: false,
                  mutability: "mutable",
                  name: "amount",
                  nameLocation: "911:6:46",
                  nodeType: "VariableDeclaration",
                  scope: 7671,
                  src: "903:14:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7666,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "903:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7669,
                  indexed: false,
                  mutability: "mutable",
                  name: "paymentTokenamount",
                  nameLocation: "935:18:46",
                  nodeType: "VariableDeclaration",
                  scope: 7671,
                  src: "927:26:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7668,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "927:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "820:139:46",
            },
            src: "802:158:46",
          },
          {
            constant: false,
            functionSelector: "962de5c0",
            id: 7674,
            mutability: "mutable",
            name: "totalPresaleRound",
            nameLocation: "990:17:46",
            nodeType: "VariableDeclaration",
            scope: 8101,
            src: "966:41:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_struct$_Counter_$5303_storage",
              typeString: "struct Counters.Counter",
            },
            typeName: {
              id: 7673,
              nodeType: "UserDefinedTypeName",
              pathNode: {
                id: 7672,
                name: "Counters.Counter",
                nodeType: "IdentifierPath",
                referencedDeclaration: 5303,
                src: "966:16:46",
              },
              referencedDeclaration: 5303,
              src: "966:16:46",
              typeDescriptions: {
                typeIdentifier: "t_struct$_Counter_$5303_storage_ptr",
                typeString: "struct Counters.Counter",
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "9d76ea58",
            id: 7676,
            mutability: "mutable",
            name: "tokenAddress",
            nameLocation: "1028:12:46",
            nodeType: "VariableDeclaration",
            scope: 8101,
            src: "1013:27:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_address",
              typeString: "address",
            },
            typeName: {
              id: 7675,
              name: "address",
              nodeType: "ElementaryTypeName",
              src: "1013:7:46",
              stateMutability: "nonpayable",
              typeDescriptions: {
                typeIdentifier: "t_address",
                typeString: "address",
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "c1436415",
            id: 7678,
            mutability: "mutable",
            name: "presaleReceiver",
            nameLocation: "1069:15:46",
            nodeType: "VariableDeclaration",
            scope: 8101,
            src: "1046:38:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_address_payable",
              typeString: "address payable",
            },
            typeName: {
              id: 7677,
              name: "address",
              nodeType: "ElementaryTypeName",
              src: "1046:15:46",
              stateMutability: "payable",
              typeDescriptions: {
                typeIdentifier: "t_address_payable",
                typeString: "address payable",
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            id: 7683,
            mutability: "mutable",
            name: "presaleDetailsMapping",
            nameLocation: "1173:21:46",
            nodeType: "VariableDeclaration",
            scope: 8101,
            src: "1141:53:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier:
                "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
              typeString: "mapping(uint256 => struct Presale.PresaleData)",
            },
            typeName: {
              id: 7682,
              keyType: {
                id: 7679,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "1149:7:46",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "1141:31:46",
              typeDescriptions: {
                typeIdentifier:
                  "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                typeString: "mapping(uint256 => struct Presale.PresaleData)",
              },
              valueType: {
                id: 7681,
                nodeType: "UserDefinedTypeName",
                pathNode: {
                  id: 7680,
                  name: "PresaleData",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 7661,
                  src: "1160:11:46",
                },
                referencedDeclaration: 7661,
                src: "1160:11:46",
                typeDescriptions: {
                  typeIdentifier: "t_struct$_PresaleData_$7661_storage_ptr",
                  typeString: "struct Presale.PresaleData",
                },
              },
            },
            visibility: "internal",
          },
          {
            constant: false,
            id: 7687,
            mutability: "mutable",
            name: "presaleTokenAvaliblilityMapping",
            nameLocation: "1225:31:46",
            nodeType: "VariableDeclaration",
            scope: 8101,
            src: "1200:56:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_address_$_t_bool_$",
              typeString: "mapping(address => bool)",
            },
            typeName: {
              id: 7686,
              keyType: {
                id: 7684,
                name: "address",
                nodeType: "ElementaryTypeName",
                src: "1208:7:46",
                typeDescriptions: {
                  typeIdentifier: "t_address",
                  typeString: "address",
                },
              },
              nodeType: "Mapping",
              src: "1200:24:46",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_address_$_t_bool_$",
                typeString: "mapping(address => bool)",
              },
              valueType: {
                id: 7685,
                name: "bool",
                nodeType: "ElementaryTypeName",
                src: "1219:4:46",
                typeDescriptions: {
                  typeIdentifier: "t_bool",
                  typeString: "bool",
                },
              },
            },
            visibility: "internal",
          },
          {
            id: 7689,
            name: "presaleRoundClosed",
            nameLocation: "1269:18:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7688,
              nodeType: "ParameterList",
              parameters: [],
              src: "1287:2:46",
            },
            src: "1263:27:46",
          },
          {
            id: 7691,
            name: "presaleTokenNotAvailable",
            nameLocation: "1301:24:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7690,
              nodeType: "ParameterList",
              parameters: [],
              src: "1325:2:46",
            },
            src: "1295:33:46",
          },
          {
            id: 7693,
            name: "presaleNativeTokenPaymentNotSufficient",
            nameLocation: "1339:38:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7692,
              nodeType: "ParameterList",
              parameters: [],
              src: "1377:2:46",
            },
            src: "1333:47:46",
          },
          {
            id: 7695,
            name: "presaleStartingTimeInvalid",
            nameLocation: "1391:26:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7694,
              nodeType: "ParameterList",
              parameters: [],
              src: "1417:2:46",
            },
            src: "1385:35:46",
          },
          {
            id: 7697,
            name: "presaleUSDPriceInvalid",
            nameLocation: "1431:22:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7696,
              nodeType: "ParameterList",
              parameters: [],
              src: "1453:2:46",
            },
            src: "1425:31:46",
          },
          {
            id: 7699,
            name: "presaleMimumumUSDPurchaseInvalid",
            nameLocation: "1467:32:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7698,
              nodeType: "ParameterList",
              parameters: [],
              src: "1499:2:46",
            },
            src: "1461:41:46",
          },
          {
            id: 7701,
            name: "presaleMaximumPresaleAmountInvalid",
            nameLocation: "1513:34:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7700,
              nodeType: "ParameterList",
              parameters: [],
              src: "1547:2:46",
            },
            src: "1507:43:46",
          },
          {
            body: {
              id: 7716,
              nodeType: "Block",
              src: "1625:89:46",
              statements: [
                {
                  expression: {
                    id: 7710,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 7708,
                      name: "tokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7676,
                      src: "1635:12:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 7709,
                      name: "_tokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7703,
                      src: "1650:13:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "1635:28:46",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 7711,
                  nodeType: "ExpressionStatement",
                  src: "1635:28:46",
                },
                {
                  expression: {
                    id: 7714,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 7712,
                      name: "presaleReceiver",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7678,
                      src: "1673:15:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 7713,
                      name: "_presaleReceiver",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7705,
                      src: "1691:16:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    src: "1673:34:46",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  id: 7715,
                  nodeType: "ExpressionStatement",
                  src: "1673:34:46",
                },
              ],
            },
            id: 7717,
            implemented: true,
            kind: "constructor",
            modifiers: [],
            name: "",
            nameLocation: "-1:-1:-1",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7706,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7703,
                  mutability: "mutable",
                  name: "_tokenAddress",
                  nameLocation: "1576:13:46",
                  nodeType: "VariableDeclaration",
                  scope: 7717,
                  src: "1568:21:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7702,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1568:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7705,
                  mutability: "mutable",
                  name: "_presaleReceiver",
                  nameLocation: "1607:16:46",
                  nodeType: "VariableDeclaration",
                  scope: 7717,
                  src: "1591:32:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address_payable",
                    typeString: "address payable",
                  },
                  typeName: {
                    id: 7704,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1591:15:46",
                    stateMutability: "payable",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1567:57:46",
            },
            returnParameters: {
              id: 7707,
              nodeType: "ParameterList",
              parameters: [],
              src: "1625:0:46",
            },
            scope: 8101,
            src: "1556:158:46",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 7752,
              nodeType: "Block",
              src: "1833:371:46",
              statements: [
                {
                  body: {
                    id: 7748,
                    nodeType: "Block",
                    src: "1984:195:46",
                    statements: [
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 7743,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              baseExpression: {
                                id: 7737,
                                name: "presaleDetailsMapping",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 7683,
                                src: "2019:21:46",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                                  typeString:
                                    "mapping(uint256 => struct Presale.PresaleData storage ref)",
                                },
                              },
                              id: 7739,
                              indexExpression: {
                                id: 7738,
                                name: "presaleRound",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 7724,
                                src: "2041:12:46",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "2019:35:46",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_PresaleData_$7661_storage",
                                typeString:
                                  "struct Presale.PresaleData storage ref",
                              },
                            },
                            id: 7740,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "startingTime",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 7654,
                            src: "2019:48:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "<=",
                          rightExpression: {
                            expression: {
                              id: 7741,
                              name: "block",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967292,
                              src: "2087:5:46",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_block",
                                typeString: "block",
                              },
                            },
                            id: 7742,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "timestamp",
                            nodeType: "MemberAccess",
                            src: "2087:15:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "2019:83:46",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 7747,
                        nodeType: "IfStatement",
                        src: "1998:171:46",
                        trueBody: {
                          id: 7746,
                          nodeType: "Block",
                          src: "2117:52:46",
                          statements: [
                            {
                              expression: {
                                id: 7744,
                                name: "presaleRound",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 7724,
                                src: "2142:12:46",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              functionReturnParameters: 7722,
                              id: 7745,
                              nodeType: "Return",
                              src: "2135:19:46",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 7733,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 7731,
                      name: "presaleRound",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7724,
                      src: "1929:12:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: ">",
                    rightExpression: {
                      hexValue: "30",
                      id: 7732,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "1944:1:46",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "1929:16:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 7749,
                  initializationExpression: {
                    assignments: [7724],
                    declarations: [
                      {
                        constant: false,
                        id: 7724,
                        mutability: "mutable",
                        name: "presaleRound",
                        nameLocation: "1869:12:46",
                        nodeType: "VariableDeclaration",
                        scope: 7749,
                        src: "1861:20:46",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 7723,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "1861:7:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 7730,
                    initialValue: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 7729,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        arguments: [],
                        expression: {
                          argumentTypes: [],
                          expression: {
                            id: 7725,
                            name: "totalPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7674,
                            src: "1884:17:46",
                            typeDescriptions: {
                              typeIdentifier: "t_struct$_Counter_$5303_storage",
                              typeString: "struct Counters.Counter storage ref",
                            },
                          },
                          id: 7726,
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "current",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 5315,
                          src: "1884:25:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_view$_t_struct$_Counter_$5303_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5303_storage_ptr_$",
                            typeString:
                              "function (struct Counters.Counter storage pointer) view returns (uint256)",
                          },
                        },
                        id: 7727,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "1884:27:46",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "-",
                      rightExpression: {
                        hexValue: "31",
                        id: 7728,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "1914:1:46",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_1_by_1",
                          typeString: "int_const 1",
                        },
                        value: "1",
                      },
                      src: "1884:31:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "1861:54:46",
                  },
                  loopExpression: {
                    expression: {
                      id: 7735,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "--",
                      prefix: false,
                      src: "1959:14:46",
                      subExpression: {
                        id: 7734,
                        name: "presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7724,
                        src: "1959:12:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 7736,
                    nodeType: "ExpressionStatement",
                    src: "1959:14:46",
                  },
                  nodeType: "ForStatement",
                  src: "1843:336:46",
                },
                {
                  expression: {
                    hexValue: "30",
                    id: 7750,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "number",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "2196:1:46",
                    typeDescriptions: {
                      typeIdentifier: "t_rational_0_by_1",
                      typeString: "int_const 0",
                    },
                    value: "0",
                  },
                  functionReturnParameters: 7722,
                  id: 7751,
                  nodeType: "Return",
                  src: "2189:8:46",
                },
              ],
            },
            documentation: {
              id: 7718,
              nodeType: "StructuredDocumentation",
              src: "1720:44:46",
              text: " Get Current Presale Round",
            },
            functionSelector: "1c63f0ed",
            id: 7753,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "getCurrentPresaleRound",
            nameLocation: "1778:22:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7719,
              nodeType: "ParameterList",
              parameters: [],
              src: "1800:2:46",
            },
            returnParameters: {
              id: 7722,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7721,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7753,
                  src: "1824:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7720,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1824:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1823:9:46",
            },
            scope: 8101,
            src: "1769:435:46",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 7788,
              nodeType: "Block",
              src: "2564:384:46",
              statements: [
                {
                  assignments: [7766],
                  declarations: [
                    {
                      constant: false,
                      id: 7766,
                      mutability: "mutable",
                      name: "currentPresaleRound",
                      nameLocation: "2582:19:46",
                      nodeType: "VariableDeclaration",
                      scope: 7788,
                      src: "2574:27:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7765,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "2574:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7769,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 7767,
                      name: "getCurrentPresaleRound",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7753,
                      src: "2604:22:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$__$returns$_t_uint256_$",
                        typeString: "function () view returns (uint256)",
                      },
                    },
                    id: 7768,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2604:24:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "2574:54:46",
                },
                {
                  expression: {
                    components: [
                      {
                        expression: {
                          baseExpression: {
                            id: 7770,
                            name: "presaleDetailsMapping",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7683,
                            src: "2659:21:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                              typeString:
                                "mapping(uint256 => struct Presale.PresaleData storage ref)",
                            },
                          },
                          id: 7772,
                          indexExpression: {
                            id: 7771,
                            name: "currentPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7766,
                            src: "2681:19:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "2659:42:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_PresaleData_$7661_storage",
                            typeString:
                              "struct Presale.PresaleData storage ref",
                          },
                        },
                        id: 7773,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "startingTime",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 7654,
                        src: "2659:55:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          baseExpression: {
                            id: 7774,
                            name: "presaleDetailsMapping",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7683,
                            src: "2728:21:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                              typeString:
                                "mapping(uint256 => struct Presale.PresaleData storage ref)",
                            },
                          },
                          id: 7776,
                          indexExpression: {
                            id: 7775,
                            name: "currentPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7766,
                            src: "2750:19:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "2728:42:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_PresaleData_$7661_storage",
                            typeString:
                              "struct Presale.PresaleData storage ref",
                          },
                        },
                        id: 7777,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "usdPrice",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 7656,
                        src: "2728:51:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          baseExpression: {
                            id: 7778,
                            name: "presaleDetailsMapping",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7683,
                            src: "2793:21:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                              typeString:
                                "mapping(uint256 => struct Presale.PresaleData storage ref)",
                            },
                          },
                          id: 7780,
                          indexExpression: {
                            id: 7779,
                            name: "currentPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7766,
                            src: "2815:19:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "2793:42:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_PresaleData_$7661_storage",
                            typeString:
                              "struct Presale.PresaleData storage ref",
                          },
                        },
                        id: 7781,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "minimumUSDPurchase",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 7658,
                        src: "2793:61:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          baseExpression: {
                            id: 7782,
                            name: "presaleDetailsMapping",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7683,
                            src: "2868:21:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                              typeString:
                                "mapping(uint256 => struct Presale.PresaleData storage ref)",
                            },
                          },
                          id: 7784,
                          indexExpression: {
                            id: 7783,
                            name: "currentPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7766,
                            src: "2890:19:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "2868:42:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_PresaleData_$7661_storage",
                            typeString:
                              "struct Presale.PresaleData storage ref",
                          },
                        },
                        id: 7785,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "maximumPresaleAmount",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 7660,
                        src: "2868:63:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    id: 7786,
                    isConstant: false,
                    isInlineArray: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "TupleExpression",
                    src: "2645:296:46",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      typeString: "tuple(uint256,uint256,uint256,uint256)",
                    },
                  },
                  functionReturnParameters: 7764,
                  id: 7787,
                  nodeType: "Return",
                  src: "2638:303:46",
                },
              ],
            },
            documentation: {
              id: 7754,
              nodeType: "StructuredDocumentation",
              src: "2210:170:46",
              text: " Getting the Current Presale Details, including:\n - Starting Time\n - USD Price\n - Minimum USD Purchase\n - Maximum Presale Amount",
            },
            functionSelector: "ec2b3523",
            id: 7789,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "getCurrentPresaleDetails",
            nameLocation: "2394:24:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7755,
              nodeType: "ParameterList",
              parameters: [],
              src: "2418:2:46",
            },
            returnParameters: {
              id: 7764,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7757,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7789,
                  src: "2479:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7756,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2479:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7759,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7789,
                  src: "2500:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7758,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2500:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7761,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7789,
                  src: "2521:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7760,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2521:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7763,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7789,
                  src: "2542:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7762,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2542:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2465:94:46",
            },
            scope: 8101,
            src: "2385:563:46",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 7937,
              nodeType: "Block",
              src: "3460:2080:46",
              statements: [
                {
                  assignments: [7802, 7804, null, null],
                  declarations: [
                    {
                      constant: false,
                      id: 7802,
                      mutability: "mutable",
                      name: "currentPresaleStartingTime",
                      nameLocation: "3492:26:46",
                      nodeType: "VariableDeclaration",
                      scope: 7937,
                      src: "3484:34:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7801,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "3484:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                    {
                      constant: false,
                      id: 7804,
                      mutability: "mutable",
                      name: "currentPresalePrice",
                      nameLocation: "3540:19:46",
                      nodeType: "VariableDeclaration",
                      scope: 7937,
                      src: "3532:27:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7803,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "3532:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                    null,
                    null,
                  ],
                  id: 7807,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 7805,
                      name: "getCurrentPresaleDetails",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7789,
                      src: "3588:24:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        typeString:
                          "function () view returns (uint256,uint256,uint256,uint256)",
                      },
                    },
                    id: 7806,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3588:26:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier:
                        "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      typeString: "tuple(uint256,uint256,uint256,uint256)",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "3470:144:46",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 7811,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 7808,
                        name: "block",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 4294967292,
                        src: "3686:5:46",
                        typeDescriptions: {
                          typeIdentifier: "t_magic_block",
                          typeString: "block",
                        },
                      },
                      id: 7809,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "timestamp",
                      nodeType: "MemberAccess",
                      src: "3686:15:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: ">=",
                    rightExpression: {
                      id: 7810,
                      name: "currentPresaleStartingTime",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7802,
                      src: "3705:26:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "3686:45:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 7815,
                  nodeType: "IfStatement",
                  src: "3682:90:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 7812,
                        name: "presaleRoundClosed",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7689,
                        src: "3752:18:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 7813,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "3752:20:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 7814,
                    nodeType: "RevertStatement",
                    src: "3745:27:46",
                  },
                },
                {
                  condition: {
                    baseExpression: {
                      id: 7816,
                      name: "presaleTokenAvaliblilityMapping",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7687,
                      src: "3827:31:46",
                      typeDescriptions: {
                        typeIdentifier: "t_mapping$_t_address_$_t_bool_$",
                        typeString: "mapping(address => bool)",
                      },
                    },
                    id: 7818,
                    indexExpression: {
                      id: 7817,
                      name: "_paymentTokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7792,
                      src: "3859:20:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "3827:53:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 7822,
                  nodeType: "IfStatement",
                  src: "3823:104:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 7819,
                        name: "presaleTokenNotAvailable",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7691,
                        src: "3901:24:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 7820,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "3901:26:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 7821,
                    nodeType: "RevertStatement",
                    src: "3894:33:46",
                  },
                },
                {
                  assignments: [7825],
                  declarations: [
                    {
                      constant: false,
                      id: 7825,
                      mutability: "mutable",
                      name: "token",
                      nameLocation: "4006:5:46",
                      nodeType: "VariableDeclaration",
                      scope: 7937,
                      src: "3993:18:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_IERC20Custom_$9114",
                        typeString: "contract IERC20Custom",
                      },
                      typeName: {
                        id: 7824,
                        nodeType: "UserDefinedTypeName",
                        pathNode: {
                          id: 7823,
                          name: "IERC20Custom",
                          nodeType: "IdentifierPath",
                          referencedDeclaration: 9114,
                          src: "3993:12:46",
                        },
                        referencedDeclaration: 9114,
                        src: "3993:12:46",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_IERC20Custom_$9114",
                          typeString: "contract IERC20Custom",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7829,
                  initialValue: {
                    arguments: [
                      {
                        id: 7827,
                        name: "tokenAddress",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7676,
                        src: "4027:12:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      id: 7826,
                      name: "IERC20Custom",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 9114,
                      src: "4014:12:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_type$_t_contract$_IERC20Custom_$9114_$",
                        typeString: "type(contract IERC20Custom)",
                      },
                    },
                    id: 7828,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "typeConversion",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4014:26:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_contract$_IERC20Custom_$9114",
                      typeString: "contract IERC20Custom",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "3993:47:46",
                },
                {
                  assignments: [7832],
                  declarations: [
                    {
                      constant: false,
                      id: 7832,
                      mutability: "mutable",
                      name: "priceFeed",
                      nameLocation: "4072:9:46",
                      nodeType: "VariableDeclaration",
                      scope: 7937,
                      src: "4050:31:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_AggregatorV3Interface_$45",
                        typeString: "contract AggregatorV3Interface",
                      },
                      typeName: {
                        id: 7831,
                        nodeType: "UserDefinedTypeName",
                        pathNode: {
                          id: 7830,
                          name: "AggregatorV3Interface",
                          nodeType: "IdentifierPath",
                          referencedDeclaration: 45,
                          src: "4050:21:46",
                        },
                        referencedDeclaration: 45,
                        src: "4050:21:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_contract$_AggregatorV3Interface_$45",
                          typeString: "contract AggregatorV3Interface",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7836,
                  initialValue: {
                    arguments: [
                      {
                        id: 7834,
                        name: "_aggregatorTokenAddress",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7796,
                        src: "4119:23:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      id: 7833,
                      name: "AggregatorV3Interface",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 45,
                      src: "4084:21:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                        typeString: "type(contract AggregatorV3Interface)",
                      },
                    },
                    id: 7835,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "typeConversion",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4084:68:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_contract$_AggregatorV3Interface_$45",
                      typeString: "contract AggregatorV3Interface",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4050:102:46",
                },
                {
                  assignments: [null, 7838, null, null, null],
                  declarations: [
                    null,
                    {
                      constant: false,
                      id: 7838,
                      mutability: "mutable",
                      name: "price",
                      nameLocation: "4172:5:46",
                      nodeType: "VariableDeclaration",
                      scope: 7937,
                      src: "4165:12:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_int256",
                        typeString: "int256",
                      },
                      typeName: {
                        id: 7837,
                        name: "int256",
                        nodeType: "ElementaryTypeName",
                        src: "4165:6:46",
                        typeDescriptions: {
                          typeIdentifier: "t_int256",
                          typeString: "int256",
                        },
                      },
                      visibility: "internal",
                    },
                    null,
                    null,
                    null,
                  ],
                  id: 7842,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 7839,
                        name: "priceFeed",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7832,
                        src: "4187:9:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_contract$_AggregatorV3Interface_$45",
                          typeString: "contract AggregatorV3Interface",
                        },
                      },
                      id: 7840,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "latestRoundData",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 44,
                      src: "4187:25:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        typeString:
                          "function () view external returns (uint80,int256,uint256,uint256,uint80)",
                      },
                    },
                    id: 7841,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4187:27:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier:
                        "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      typeString: "tuple(uint80,int256,uint256,uint256,uint80)",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4162:52:46",
                },
                {
                  assignments: [7844],
                  declarations: [
                    {
                      constant: false,
                      id: 7844,
                      mutability: "mutable",
                      name: "presaleAmount",
                      nameLocation: "4232:13:46",
                      nodeType: "VariableDeclaration",
                      scope: 7937,
                      src: "4224:21:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7843,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "4224:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7866,
                  initialValue: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    id: 7853,
                                    name: "price",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7838,
                                    src: "4384:5:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_int256",
                                      typeString: "int256",
                                    },
                                  },
                                  {
                                    arguments: [],
                                    expression: {
                                      argumentTypes: [],
                                      expression: {
                                        id: 7854,
                                        name: "priceFeed",
                                        nodeType: "Identifier",
                                        overloadedDeclarations: [],
                                        referencedDeclaration: 7832,
                                        src: "4415:9:46",
                                        typeDescriptions: {
                                          typeIdentifier:
                                            "t_contract$_AggregatorV3Interface_$45",
                                          typeString:
                                            "contract AggregatorV3Interface",
                                        },
                                      },
                                      id: 7855,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: false,
                                      lValueRequested: false,
                                      memberName: "decimals",
                                      nodeType: "MemberAccess",
                                      referencedDeclaration: 6,
                                      src: "4415:18:46",
                                      typeDescriptions: {
                                        typeIdentifier:
                                          "t_function_external_view$__$returns$_t_uint8_$",
                                        typeString:
                                          "function () view external returns (uint8)",
                                      },
                                    },
                                    id: 7856,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    kind: "functionCall",
                                    lValueRequested: false,
                                    names: [],
                                    nodeType: "FunctionCall",
                                    src: "4415:20:46",
                                    tryCall: false,
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint8",
                                      typeString: "uint8",
                                    },
                                  },
                                  {
                                    arguments: [],
                                    expression: {
                                      argumentTypes: [],
                                      expression: {
                                        id: 7857,
                                        name: "token",
                                        nodeType: "Identifier",
                                        overloadedDeclarations: [],
                                        referencedDeclaration: 7825,
                                        src: "4461:5:46",
                                        typeDescriptions: {
                                          typeIdentifier:
                                            "t_contract$_IERC20Custom_$9114",
                                          typeString: "contract IERC20Custom",
                                        },
                                      },
                                      id: 7858,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: false,
                                      lValueRequested: false,
                                      memberName: "decimals",
                                      nodeType: "MemberAccess",
                                      referencedDeclaration: 9068,
                                      src: "4461:14:46",
                                      typeDescriptions: {
                                        typeIdentifier:
                                          "t_function_external_view$__$returns$_t_uint8_$",
                                        typeString:
                                          "function () view external returns (uint8)",
                                      },
                                    },
                                    id: 7859,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    kind: "functionCall",
                                    lValueRequested: false,
                                    names: [],
                                    nodeType: "FunctionCall",
                                    src: "4461:16:46",
                                    tryCall: false,
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint8",
                                      typeString: "uint8",
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_int256",
                                      typeString: "int256",
                                    },
                                    {
                                      typeIdentifier: "t_uint8",
                                      typeString: "uint8",
                                    },
                                    {
                                      typeIdentifier: "t_uint8",
                                      typeString: "uint8",
                                    },
                                  ],
                                  expression: {
                                    id: 7851,
                                    name: "PriceConverter",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7631,
                                    src: "4333:14:46",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_type$_t_contract$_PriceConverter_$7631_$",
                                      typeString:
                                        "type(library PriceConverter)",
                                    },
                                  },
                                  id: 7852,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "scalePrice",
                                  nodeType: "MemberAccess",
                                  referencedDeclaration: 7630,
                                  src: "4333:25:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_internal_pure$_t_int256_$_t_uint8_$_t_uint8_$returns$_t_int256_$",
                                    typeString:
                                      "function (int256,uint8,uint8) pure returns (int256)",
                                  },
                                },
                                id: 7860,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "4333:166:46",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_int256",
                                  typeString: "int256",
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_int256",
                                  typeString: "int256",
                                },
                              ],
                              id: 7850,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "4304:7:46",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_uint256_$",
                                typeString: "type(uint256)",
                              },
                              typeName: {
                                id: 7849,
                                name: "uint256",
                                nodeType: "ElementaryTypeName",
                                src: "4304:7:46",
                                typeDescriptions: {},
                              },
                            },
                            id: 7861,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "4304:213:46",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          {
                            id: 7862,
                            name: "_amount",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7794,
                            src: "4535:7:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          ],
                          expression: {
                            id: 7847,
                            name: "SafeMath",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7057,
                            src: "4274:8:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_type$_t_contract$_SafeMath_$7057_$",
                              typeString: "type(library SafeMath)",
                            },
                          },
                          id: 7848,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "mul",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 6951,
                          src: "4274:12:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            typeString:
                              "function (uint256,uint256) pure returns (uint256)",
                          },
                        },
                        id: 7863,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "4274:282:46",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        id: 7864,
                        name: "currentPresalePrice",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7804,
                        src: "4570:19:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 7845,
                        name: "SafeMath",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7057,
                        src: "4248:8:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_SafeMath_$7057_$",
                          typeString: "type(library SafeMath)",
                        },
                      },
                      id: 7846,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "div",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 6966,
                      src: "4248:12:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        typeString:
                          "function (uint256,uint256) pure returns (uint256)",
                      },
                    },
                    id: 7865,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4248:351:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4224:375:46",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    id: 7872,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 7867,
                      name: "_paymentTokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7792,
                      src: "4686:20:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      arguments: [
                        {
                          hexValue: "30",
                          id: 7870,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "4718:1:46",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                          value: "0",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                        ],
                        id: 7869,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        nodeType: "ElementaryTypeNameExpression",
                        src: "4710:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_type$_t_address_$",
                          typeString: "type(address)",
                        },
                        typeName: {
                          id: 7868,
                          name: "address",
                          nodeType: "ElementaryTypeName",
                          src: "4710:7:46",
                          typeDescriptions: {},
                        },
                      },
                      id: 7871,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "typeConversion",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "4710:10:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "4686:34:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  falseBody: {
                    id: 7919,
                    nodeType: "Block",
                    src: "5148:152:46",
                    statements: [
                      {
                        assignments: [7905],
                        declarations: [
                          {
                            constant: false,
                            id: 7905,
                            mutability: "mutable",
                            name: "paymentToken",
                            nameLocation: "5169:12:46",
                            nodeType: "VariableDeclaration",
                            scope: 7919,
                            src: "5162:19:46",
                            stateVariable: false,
                            storageLocation: "default",
                            typeDescriptions: {
                              typeIdentifier: "t_contract$_IERC20_$2884",
                              typeString: "contract IERC20",
                            },
                            typeName: {
                              id: 7904,
                              nodeType: "UserDefinedTypeName",
                              pathNode: {
                                id: 7903,
                                name: "IERC20",
                                nodeType: "IdentifierPath",
                                referencedDeclaration: 2884,
                                src: "5162:6:46",
                              },
                              referencedDeclaration: 2884,
                              src: "5162:6:46",
                              typeDescriptions: {
                                typeIdentifier: "t_contract$_IERC20_$2884",
                                typeString: "contract IERC20",
                              },
                            },
                            visibility: "internal",
                          },
                        ],
                        id: 7909,
                        initialValue: {
                          arguments: [
                            {
                              id: 7907,
                              name: "_paymentTokenAddress",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7792,
                              src: "5191:20:46",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            ],
                            id: 7906,
                            name: "IERC20",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2884,
                            src: "5184:6:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_type$_t_contract$_IERC20_$2884_$",
                              typeString: "type(contract IERC20)",
                            },
                          },
                          id: 7908,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "5184:28:46",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_contract$_IERC20_$2884",
                            typeString: "contract IERC20",
                          },
                        },
                        nodeType: "VariableDeclarationStatement",
                        src: "5162:50:46",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              expression: {
                                id: 7913,
                                name: "msg",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 4294967281,
                                src: "5252:3:46",
                                typeDescriptions: {
                                  typeIdentifier: "t_magic_message",
                                  typeString: "msg",
                                },
                              },
                              id: 7914,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "sender",
                              nodeType: "MemberAccess",
                              src: "5252:10:46",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            {
                              id: 7915,
                              name: "presaleReceiver",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7678,
                              src: "5264:15:46",
                              typeDescriptions: {
                                typeIdentifier: "t_address_payable",
                                typeString: "address payable",
                              },
                            },
                            {
                              id: 7916,
                              name: "_amount",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7794,
                              src: "5281:7:46",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                              {
                                typeIdentifier: "t_address_payable",
                                typeString: "address payable",
                              },
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            ],
                            expression: {
                              id: 7910,
                              name: "paymentToken",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7905,
                              src: "5226:12:46",
                              typeDescriptions: {
                                typeIdentifier: "t_contract$_IERC20_$2884",
                                typeString: "contract IERC20",
                              },
                            },
                            id: 7912,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "transferFrom",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 2865,
                            src: "5226:25:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              typeString:
                                "function (address,address,uint256) external returns (bool)",
                            },
                          },
                          id: 7917,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "5226:63:46",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 7918,
                        nodeType: "ExpressionStatement",
                        src: "5226:63:46",
                      },
                    ],
                  },
                  id: 7920,
                  nodeType: "IfStatement",
                  src: "4682:618:46",
                  trueBody: {
                    id: 7902,
                    nodeType: "Block",
                    src: "4722:420:46",
                    statements: [
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 7876,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              id: 7873,
                              name: "msg",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967281,
                              src: "4740:3:46",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_message",
                                typeString: "msg",
                              },
                            },
                            id: 7874,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "value",
                            nodeType: "MemberAccess",
                            src: "4740:9:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "<",
                          rightExpression: {
                            id: 7875,
                            name: "_amount",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7794,
                            src: "4752:7:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "4740:19:46",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        falseBody: {
                          id: 7900,
                          nodeType: "Block",
                          src: "4847:285:46",
                          statements: [
                            {
                              expression: {
                                arguments: [
                                  {
                                    id: 7884,
                                    name: "_amount",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7794,
                                    src: "4890:7:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  ],
                                  expression: {
                                    id: 7881,
                                    name: "presaleReceiver",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7678,
                                    src: "4865:15:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_address_payable",
                                      typeString: "address payable",
                                    },
                                  },
                                  id: 7883,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "transfer",
                                  nodeType: "MemberAccess",
                                  src: "4865:24:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    typeString: "function (uint256)",
                                  },
                                },
                                id: 7885,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "4865:33:46",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_tuple$__$",
                                  typeString: "tuple()",
                                },
                              },
                              id: 7886,
                              nodeType: "ExpressionStatement",
                              src: "4865:33:46",
                            },
                            {
                              expression: {
                                arguments: [
                                  {
                                    expression: {
                                      arguments: [
                                        {
                                          id: 7895,
                                          name: "this",
                                          nodeType: "Identifier",
                                          overloadedDeclarations: [],
                                          referencedDeclaration: 4294967268,
                                          src: "5103:4:46",
                                          typeDescriptions: {
                                            typeIdentifier:
                                              "t_contract$_Presale_$8101",
                                            typeString: "contract Presale",
                                          },
                                        },
                                      ],
                                      expression: {
                                        argumentTypes: [
                                          {
                                            typeIdentifier:
                                              "t_contract$_Presale_$8101",
                                            typeString: "contract Presale",
                                          },
                                        ],
                                        id: 7894,
                                        isConstant: false,
                                        isLValue: false,
                                        isPure: true,
                                        lValueRequested: false,
                                        nodeType:
                                          "ElementaryTypeNameExpression",
                                        src: "5095:7:46",
                                        typeDescriptions: {
                                          typeIdentifier: "t_type$_t_address_$",
                                          typeString: "type(address)",
                                        },
                                        typeName: {
                                          id: 7893,
                                          name: "address",
                                          nodeType: "ElementaryTypeName",
                                          src: "5095:7:46",
                                          typeDescriptions: {},
                                        },
                                      },
                                      id: 7896,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: false,
                                      kind: "typeConversion",
                                      lValueRequested: false,
                                      names: [],
                                      nodeType: "FunctionCall",
                                      src: "5095:13:46",
                                      tryCall: false,
                                      typeDescriptions: {
                                        typeIdentifier: "t_address",
                                        typeString: "address",
                                      },
                                    },
                                    id: 7897,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    lValueRequested: false,
                                    memberName: "balance",
                                    nodeType: "MemberAccess",
                                    src: "5095:21:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  ],
                                  expression: {
                                    arguments: [
                                      {
                                        expression: {
                                          id: 7889,
                                          name: "msg",
                                          nodeType: "Identifier",
                                          overloadedDeclarations: [],
                                          referencedDeclaration: 4294967281,
                                          src: "5074:3:46",
                                          typeDescriptions: {
                                            typeIdentifier: "t_magic_message",
                                            typeString: "msg",
                                          },
                                        },
                                        id: 7890,
                                        isConstant: false,
                                        isLValue: false,
                                        isPure: false,
                                        lValueRequested: false,
                                        memberName: "sender",
                                        nodeType: "MemberAccess",
                                        src: "5074:10:46",
                                        typeDescriptions: {
                                          typeIdentifier: "t_address",
                                          typeString: "address",
                                        },
                                      },
                                    ],
                                    expression: {
                                      argumentTypes: [
                                        {
                                          typeIdentifier: "t_address",
                                          typeString: "address",
                                        },
                                      ],
                                      id: 7888,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: true,
                                      lValueRequested: false,
                                      nodeType: "ElementaryTypeNameExpression",
                                      src: "5066:8:46",
                                      typeDescriptions: {
                                        typeIdentifier:
                                          "t_type$_t_address_payable_$",
                                        typeString: "type(address payable)",
                                      },
                                      typeName: {
                                        id: 7887,
                                        name: "address",
                                        nodeType: "ElementaryTypeName",
                                        src: "5066:8:46",
                                        stateMutability: "payable",
                                        typeDescriptions: {},
                                      },
                                    },
                                    id: 7891,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    kind: "typeConversion",
                                    lValueRequested: false,
                                    names: [],
                                    nodeType: "FunctionCall",
                                    src: "5066:19:46",
                                    tryCall: false,
                                    typeDescriptions: {
                                      typeIdentifier: "t_address_payable",
                                      typeString: "address payable",
                                    },
                                  },
                                  id: 7892,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "transfer",
                                  nodeType: "MemberAccess",
                                  src: "5066:28:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    typeString: "function (uint256)",
                                  },
                                },
                                id: 7898,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "5066:51:46",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_tuple$__$",
                                  typeString: "tuple()",
                                },
                              },
                              id: 7899,
                              nodeType: "ExpressionStatement",
                              src: "5066:51:46",
                            },
                          ],
                        },
                        id: 7901,
                        nodeType: "IfStatement",
                        src: "4736:396:46",
                        trueBody: {
                          id: 7880,
                          nodeType: "Block",
                          src: "4761:80:46",
                          statements: [
                            {
                              errorCall: {
                                arguments: [],
                                expression: {
                                  argumentTypes: [],
                                  id: 7877,
                                  name: "presaleNativeTokenPaymentNotSufficient",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 7693,
                                  src: "4786:38:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_error_pure$__$returns$__$",
                                    typeString: "function () pure",
                                  },
                                },
                                id: 7878,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "4786:40:46",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_tuple$__$",
                                  typeString: "tuple()",
                                },
                              },
                              id: 7879,
                              nodeType: "RevertStatement",
                              src: "4779:47:46",
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
                {
                  expression: {
                    arguments: [
                      {
                        expression: {
                          id: 7924,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 4294967281,
                          src: "5364:3:46",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 7925,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        src: "5364:10:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 7926,
                        name: "presaleAmount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7844,
                        src: "5376:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 7921,
                        name: "token",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7825,
                        src: "5353:5:46",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_IERC20Custom_$9114",
                          typeString: "contract IERC20Custom",
                        },
                      },
                      id: 7923,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "mint",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 9101,
                      src: "5353:10:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,uint256) external",
                      },
                    },
                    id: 7927,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5353:37:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 7928,
                  nodeType: "ExpressionStatement",
                  src: "5353:37:46",
                },
                {
                  eventCall: {
                    arguments: [
                      {
                        expression: {
                          id: 7930,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 4294967281,
                          src: "5431:3:46",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 7931,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        src: "5431:10:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 7932,
                        name: "_paymentTokenAddress",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7792,
                        src: "5455:20:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 7933,
                        name: "presaleAmount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7844,
                        src: "5489:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        id: 7934,
                        name: "_amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7794,
                        src: "5516:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 7929,
                      name: "TokenPresold",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7671,
                      src: "5405:12:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        typeString:
                          "function (address,address,uint256,uint256)",
                      },
                    },
                    id: 7935,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5405:128:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 7936,
                  nodeType: "EmitStatement",
                  src: "5400:133:46",
                },
              ],
            },
            documentation: {
              id: 7790,
              nodeType: "StructuredDocumentation",
              src: "2954:340:46",
              text: " Execute the Presale of ALPS Token in exchange of other token\n @dev _paymentTokenAddress - Address of the token use to pay (address 0 is for native token)\n @dev _amount - Amount denominated in the `paymentTokenAddress` being paid\n @dev _aggregatorTokenAddress - Use to convert price with Chainlink",
            },
            functionSelector: "6a107cd8",
            id: 7938,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 7799,
                kind: "modifierInvocation",
                modifierName: {
                  id: 7798,
                  name: "nonReentrant",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 741,
                  src: "3447:12:46",
                },
                nodeType: "ModifierInvocation",
                src: "3447:12:46",
              },
            ],
            name: "presaleTokens",
            nameLocation: "3308:13:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7797,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7792,
                  mutability: "mutable",
                  name: "_paymentTokenAddress",
                  nameLocation: "3339:20:46",
                  nodeType: "VariableDeclaration",
                  scope: 7938,
                  src: "3331:28:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7791,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "3331:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7794,
                  mutability: "mutable",
                  name: "_amount",
                  nameLocation: "3377:7:46",
                  nodeType: "VariableDeclaration",
                  scope: 7938,
                  src: "3369:15:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7793,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3369:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7796,
                  mutability: "mutable",
                  name: "_aggregatorTokenAddress",
                  nameLocation: "3402:23:46",
                  nodeType: "VariableDeclaration",
                  scope: 7938,
                  src: "3394:31:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7795,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "3394:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3321:110:46",
            },
            returnParameters: {
              id: 7800,
              nodeType: "ParameterList",
              parameters: [],
              src: "3460:0:46",
            },
            scope: 8101,
            src: "3299:2241:46",
            stateMutability: "payable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 7950,
              nodeType: "Block",
              src: "5795:54:46",
              statements: [
                {
                  expression: {
                    id: 7948,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 7946,
                      name: "presaleReceiver",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7678,
                      src: "5805:15:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 7947,
                      name: "_newPresaleReceiver",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7941,
                      src: "5823:19:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    src: "5805:37:46",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  id: 7949,
                  nodeType: "ExpressionStatement",
                  src: "5805:37:46",
                },
              ],
            },
            documentation: {
              id: 7939,
              nodeType: "StructuredDocumentation",
              src: "5546:142:46",
              text: " Set new Presale Receiver Address\n @dev _newPresaleReceiver - Address that'll receive the presale payment token",
            },
            functionSelector: "feda925b",
            id: 7951,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 7944,
                kind: "modifierInvocation",
                modifierName: {
                  id: 7943,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 474,
                  src: "5781:9:46",
                },
                nodeType: "ModifierInvocation",
                src: "5781:9:46",
              },
            ],
            name: "setPresaleReceiver",
            nameLocation: "5702:18:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7942,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7941,
                  mutability: "mutable",
                  name: "_newPresaleReceiver",
                  nameLocation: "5737:19:46",
                  nodeType: "VariableDeclaration",
                  scope: 7951,
                  src: "5721:35:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address_payable",
                    typeString: "address payable",
                  },
                  typeName: {
                    id: 7940,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "5721:15:46",
                    stateMutability: "payable",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "5720:37:46",
            },
            returnParameters: {
              id: 7945,
              nodeType: "ParameterList",
              parameters: [],
              src: "5795:0:46",
            },
            scope: 8101,
            src: "5693:156:46",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 7963,
              nodeType: "Block",
              src: "6058:48:46",
              statements: [
                {
                  expression: {
                    id: 7961,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 7959,
                      name: "tokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7676,
                      src: "6068:12:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 7960,
                      name: "_newTokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7954,
                      src: "6083:16:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "6068:31:46",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 7962,
                  nodeType: "ExpressionStatement",
                  src: "6068:31:46",
                },
              ],
            },
            documentation: {
              id: 7952,
              nodeType: "StructuredDocumentation",
              src: "5855:123:46",
              text: " Set new Presale Token Address\n @dev _newTokenAddress - Address of token that'll be presaled",
            },
            functionSelector: "3c0c134d",
            id: 7964,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 7957,
                kind: "modifierInvocation",
                modifierName: {
                  id: 7956,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 474,
                  src: "6048:9:46",
                },
                nodeType: "ModifierInvocation",
                src: "6048:9:46",
              },
            ],
            name: "setPresaleTokenAddress",
            nameLocation: "5992:22:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7955,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7954,
                  mutability: "mutable",
                  name: "_newTokenAddress",
                  nameLocation: "6023:16:46",
                  nodeType: "VariableDeclaration",
                  scope: 7964,
                  src: "6015:24:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7953,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "6015:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "6014:26:46",
            },
            returnParameters: {
              id: 7958,
              nodeType: "ParameterList",
              parameters: [],
              src: "6058:0:46",
            },
            scope: 8101,
            src: "5983:123:46",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 8099,
              nodeType: "Block",
              src: "6757:1721:46",
              statements: [
                {
                  assignments: [7981],
                  declarations: [
                    {
                      constant: false,
                      id: 7981,
                      mutability: "mutable",
                      name: "presaleStartingTime",
                      nameLocation: "6775:19:46",
                      nodeType: "VariableDeclaration",
                      scope: 8099,
                      src: "6767:27:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7980,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6767:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7986,
                  initialValue: {
                    expression: {
                      baseExpression: {
                        id: 7982,
                        name: "presaleDetailsMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7683,
                        src: "6797:21:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                          typeString:
                            "mapping(uint256 => struct Presale.PresaleData storage ref)",
                        },
                      },
                      id: 7984,
                      indexExpression: {
                        id: 7983,
                        name: "_presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7967,
                        src: "6819:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "6797:36:46",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                        typeString: "struct Presale.PresaleData storage ref",
                      },
                    },
                    id: 7985,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberName: "startingTime",
                    nodeType: "MemberAccess",
                    referencedDeclaration: 7654,
                    src: "6797:62:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6767:92:46",
                },
                {
                  assignments: [7988],
                  declarations: [
                    {
                      constant: false,
                      id: 7988,
                      mutability: "mutable",
                      name: "presaleUSDPrice",
                      nameLocation: "6877:15:46",
                      nodeType: "VariableDeclaration",
                      scope: 8099,
                      src: "6869:23:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7987,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6869:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7993,
                  initialValue: {
                    expression: {
                      baseExpression: {
                        id: 7989,
                        name: "presaleDetailsMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7683,
                        src: "6895:21:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                          typeString:
                            "mapping(uint256 => struct Presale.PresaleData storage ref)",
                        },
                      },
                      id: 7991,
                      indexExpression: {
                        id: 7990,
                        name: "_presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7967,
                        src: "6917:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "6895:36:46",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                        typeString: "struct Presale.PresaleData storage ref",
                      },
                    },
                    id: 7992,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberName: "usdPrice",
                    nodeType: "MemberAccess",
                    referencedDeclaration: 7656,
                    src: "6895:45:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6869:71:46",
                },
                {
                  assignments: [7995],
                  declarations: [
                    {
                      constant: false,
                      id: 7995,
                      mutability: "mutable",
                      name: "presaleMinimumUSDPurchase",
                      nameLocation: "6958:25:46",
                      nodeType: "VariableDeclaration",
                      scope: 8099,
                      src: "6950:33:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7994,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6950:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 8000,
                  initialValue: {
                    expression: {
                      baseExpression: {
                        id: 7996,
                        name: "presaleDetailsMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7683,
                        src: "6986:21:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                          typeString:
                            "mapping(uint256 => struct Presale.PresaleData storage ref)",
                        },
                      },
                      id: 7998,
                      indexExpression: {
                        id: 7997,
                        name: "_presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7967,
                        src: "7008:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "6986:36:46",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                        typeString: "struct Presale.PresaleData storage ref",
                      },
                    },
                    id: 7999,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberName: "minimumUSDPurchase",
                    nodeType: "MemberAccess",
                    referencedDeclaration: 7658,
                    src: "6986:68:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6950:104:46",
                },
                {
                  assignments: [8002],
                  declarations: [
                    {
                      constant: false,
                      id: 8002,
                      mutability: "mutable",
                      name: "presaleMaximumPresaleAmount",
                      nameLocation: "7072:27:46",
                      nodeType: "VariableDeclaration",
                      scope: 8099,
                      src: "7064:35:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 8001,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "7064:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 8007,
                  initialValue: {
                    expression: {
                      baseExpression: {
                        id: 8003,
                        name: "presaleDetailsMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7683,
                        src: "7102:21:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                          typeString:
                            "mapping(uint256 => struct Presale.PresaleData storage ref)",
                        },
                      },
                      id: 8005,
                      indexExpression: {
                        id: 8004,
                        name: "_presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7967,
                        src: "7137:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "7102:58:46",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                        typeString: "struct Presale.PresaleData storage ref",
                      },
                    },
                    id: 8006,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberName: "maximumPresaleAmount",
                    nodeType: "MemberAccess",
                    referencedDeclaration: 7660,
                    src: "7102:79:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "7064:117:46",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    id: 8022,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      id: 8018,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        commonType: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        id: 8014,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 8010,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 8008,
                            name: "presaleStartingTime",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7981,
                            src: "7282:19:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "==",
                          rightExpression: {
                            hexValue: "30",
                            id: 8009,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "7305:1:46",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_0_by_1",
                              typeString: "int_const 0",
                            },
                            value: "0",
                          },
                          src: "7282:24:46",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "&&",
                        rightExpression: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 8013,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 8011,
                            name: "presaleUSDPrice",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7988,
                            src: "7322:15:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "==",
                          rightExpression: {
                            hexValue: "30",
                            id: 8012,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "7341:1:46",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_0_by_1",
                              typeString: "int_const 0",
                            },
                            value: "0",
                          },
                          src: "7322:20:46",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        src: "7282:60:46",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "&&",
                      rightExpression: {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 8017,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 8015,
                          name: "presaleMinimumUSDPurchase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7995,
                          src: "7358:25:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "==",
                        rightExpression: {
                          hexValue: "30",
                          id: 8016,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "7387:1:46",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                          value: "0",
                        },
                        src: "7358:30:46",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      src: "7282:106:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "&&",
                    rightExpression: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 8021,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 8019,
                        name: "presaleMaximumPresaleAmount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 8002,
                        src: "7404:27:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "==",
                      rightExpression: {
                        hexValue: "30",
                        id: 8020,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "7435:1:46",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_0_by_1",
                          typeString: "int_const 0",
                        },
                        value: "0",
                      },
                      src: "7404:32:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    src: "7282:154:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8028,
                  nodeType: "IfStatement",
                  src: "7265:211:46",
                  trueBody: {
                    expression: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        expression: {
                          id: 8023,
                          name: "totalPresaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7674,
                          src: "7447:17:46",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Counter_$5303_storage",
                            typeString: "struct Counters.Counter storage ref",
                          },
                        },
                        id: 8025,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "increment",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 5329,
                        src: "7447:27:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_struct$_Counter_$5303_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$5303_storage_ptr_$",
                          typeString:
                            "function (struct Counters.Counter storage pointer)",
                        },
                      },
                      id: 8026,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "7447:29:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 8027,
                    nodeType: "ExpressionStatement",
                    src: "7447:29:46",
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    id: 8045,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 8031,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 8029,
                        name: "_startingTime",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7969,
                        src: "7624:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "==",
                      rightExpression: {
                        hexValue: "30",
                        id: 8030,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "7641:1:46",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_0_by_1",
                          typeString: "int_const 0",
                        },
                        value: "0",
                      },
                      src: "7624:18:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "||",
                    rightExpression: {
                      components: [
                        {
                          commonType: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          id: 8043,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            commonType: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            id: 8034,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              id: 8032,
                              name: "_presaleRound",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7967,
                              src: "7659:13:46",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            nodeType: "BinaryOperation",
                            operator: "!=",
                            rightExpression: {
                              hexValue: "30",
                              id: 8033,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "7676:1:46",
                              typeDescriptions: {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                              value: "0",
                            },
                            src: "7659:18:46",
                            typeDescriptions: {
                              typeIdentifier: "t_bool",
                              typeString: "bool",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "&&",
                          rightExpression: {
                            commonType: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            id: 8042,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              id: 8035,
                              name: "_startingTime",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7969,
                              src: "7697:13:46",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            nodeType: "BinaryOperation",
                            operator: "<",
                            rightExpression: {
                              expression: {
                                baseExpression: {
                                  id: 8036,
                                  name: "presaleDetailsMapping",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 7683,
                                  src: "7729:21:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                                    typeString:
                                      "mapping(uint256 => struct Presale.PresaleData storage ref)",
                                  },
                                },
                                id: 8040,
                                indexExpression: {
                                  commonType: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                  id: 8039,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  leftExpression: {
                                    id: 8037,
                                    name: "_presaleRound",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7967,
                                    src: "7751:13:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  nodeType: "BinaryOperation",
                                  operator: "-",
                                  rightExpression: {
                                    hexValue: "31",
                                    id: 8038,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: true,
                                    kind: "number",
                                    lValueRequested: false,
                                    nodeType: "Literal",
                                    src: "7767:1:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_rational_1_by_1",
                                      typeString: "int_const 1",
                                    },
                                    value: "1",
                                  },
                                  src: "7751:17:46",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: "IndexAccess",
                                src: "7729:40:46",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_PresaleData_$7661_storage",
                                  typeString:
                                    "struct Presale.PresaleData storage ref",
                                },
                              },
                              id: 8041,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "startingTime",
                              nodeType: "MemberAccess",
                              referencedDeclaration: 7654,
                              src: "7729:53:46",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            src: "7697:85:46",
                            typeDescriptions: {
                              typeIdentifier: "t_bool",
                              typeString: "bool",
                            },
                          },
                          src: "7659:123:46",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                      ],
                      id: 8044,
                      isConstant: false,
                      isInlineArray: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "TupleExpression",
                      src: "7658:125:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    src: "7624:159:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8049,
                  nodeType: "IfStatement",
                  src: "7607:222:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 8046,
                        name: "presaleStartingTimeInvalid",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7695,
                        src: "7801:26:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 8047,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "7801:28:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 8048,
                    nodeType: "RevertStatement",
                    src: "7794:35:46",
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 8052,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 8050,
                      name: "_usdPrice",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7971,
                      src: "7899:9:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      hexValue: "30",
                      id: 8051,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "7912:1:46",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "7899:14:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8056,
                  nodeType: "IfStatement",
                  src: "7895:51:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 8053,
                        name: "presaleUSDPriceInvalid",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7697,
                        src: "7922:22:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 8054,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "7922:24:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 8055,
                    nodeType: "RevertStatement",
                    src: "7915:31:46",
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 8059,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 8057,
                      name: "_minimumUSDPurchase",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7973,
                      src: "7960:19:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      hexValue: "30",
                      id: 8058,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "7983:1:46",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "7960:24:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8063,
                  nodeType: "IfStatement",
                  src: "7956:71:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 8060,
                        name: "presaleMimumumUSDPurchaseInvalid",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7699,
                        src: "7993:32:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 8061,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "7993:34:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 8062,
                    nodeType: "RevertStatement",
                    src: "7986:41:46",
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 8066,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 8064,
                      name: "_maximumPresaleAmount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7975,
                      src: "8041:21:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      hexValue: "30",
                      id: 8065,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "8066:1:46",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "8041:26:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8070,
                  nodeType: "IfStatement",
                  src: "8037:87:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 8067,
                        name: "presaleMaximumPresaleAmountInvalid",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7701,
                        src: "8088:34:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 8068,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "8088:36:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 8069,
                    nodeType: "RevertStatement",
                    src: "8081:43:46",
                  },
                },
                {
                  expression: {
                    id: 8076,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 8071,
                          name: "presaleDetailsMapping",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7683,
                          src: "8135:21:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                            typeString:
                              "mapping(uint256 => struct Presale.PresaleData storage ref)",
                          },
                        },
                        id: 8073,
                        indexExpression: {
                          id: 8072,
                          name: "_presaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7967,
                          src: "8157:13:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "8135:36:46",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                          typeString: "struct Presale.PresaleData storage ref",
                        },
                      },
                      id: 8074,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "startingTime",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 7654,
                      src: "8135:49:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8075,
                      name: "_startingTime",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7969,
                      src: "8187:13:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "8135:65:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 8077,
                  nodeType: "ExpressionStatement",
                  src: "8135:65:46",
                },
                {
                  expression: {
                    id: 8083,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 8078,
                          name: "presaleDetailsMapping",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7683,
                          src: "8210:21:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                            typeString:
                              "mapping(uint256 => struct Presale.PresaleData storage ref)",
                          },
                        },
                        id: 8080,
                        indexExpression: {
                          id: 8079,
                          name: "_presaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7967,
                          src: "8232:13:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "8210:36:46",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                          typeString: "struct Presale.PresaleData storage ref",
                        },
                      },
                      id: 8081,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "usdPrice",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 7656,
                      src: "8210:45:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8082,
                      name: "_usdPrice",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7971,
                      src: "8258:9:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "8210:57:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 8084,
                  nodeType: "ExpressionStatement",
                  src: "8210:57:46",
                },
                {
                  expression: {
                    id: 8090,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 8085,
                          name: "presaleDetailsMapping",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7683,
                          src: "8277:21:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                            typeString:
                              "mapping(uint256 => struct Presale.PresaleData storage ref)",
                          },
                        },
                        id: 8087,
                        indexExpression: {
                          id: 8086,
                          name: "_presaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7967,
                          src: "8299:13:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "8277:36:46",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                          typeString: "struct Presale.PresaleData storage ref",
                        },
                      },
                      id: 8088,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "minimumUSDPurchase",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 7658,
                      src: "8277:68:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8089,
                      name: "_minimumUSDPurchase",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7973,
                      src: "8348:19:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "8277:90:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 8091,
                  nodeType: "ExpressionStatement",
                  src: "8277:90:46",
                },
                {
                  expression: {
                    id: 8097,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 8092,
                          name: "presaleDetailsMapping",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7683,
                          src: "8377:21:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                            typeString:
                              "mapping(uint256 => struct Presale.PresaleData storage ref)",
                          },
                        },
                        id: 8094,
                        indexExpression: {
                          id: 8093,
                          name: "_presaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7967,
                          src: "8399:13:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "8377:36:46",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                          typeString: "struct Presale.PresaleData storage ref",
                        },
                      },
                      id: 8095,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "maximumPresaleAmount",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 7660,
                      src: "8377:70:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8096,
                      name: "_maximumPresaleAmount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7975,
                      src: "8450:21:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "8377:94:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 8098,
                  nodeType: "ExpressionStatement",
                  src: "8377:94:46",
                },
              ],
            },
            documentation: {
              id: 7965,
              nodeType: "StructuredDocumentation",
              src: "6112:427:46",
              text: " Creating/Updating a presale round information\n @dev _presaleRound - The presale round chosen\n @dev _startingTime - The starting Presale time\n @dev _usdPrice - The USD Price of the Token in certain Presale Round\n @dev _minimumUSDPurchase - The minimum USD amount to purchase the token\n @dev _maximumPresaleAmount - The maximum amount of token available for a presale round",
            },
            functionSelector: "c829d1db",
            id: 8100,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 7978,
                kind: "modifierInvocation",
                modifierName: {
                  id: 7977,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 474,
                  src: "6747:9:46",
                },
                nodeType: "ModifierInvocation",
                src: "6747:9:46",
              },
            ],
            name: "setPresaleRound",
            nameLocation: "6553:15:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7976,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7967,
                  mutability: "mutable",
                  name: "_presaleRound",
                  nameLocation: "6586:13:46",
                  nodeType: "VariableDeclaration",
                  scope: 8100,
                  src: "6578:21:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7966,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "6578:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7969,
                  mutability: "mutable",
                  name: "_startingTime",
                  nameLocation: "6617:13:46",
                  nodeType: "VariableDeclaration",
                  scope: 8100,
                  src: "6609:21:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7968,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "6609:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7971,
                  mutability: "mutable",
                  name: "_usdPrice",
                  nameLocation: "6648:9:46",
                  nodeType: "VariableDeclaration",
                  scope: 8100,
                  src: "6640:17:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7970,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "6640:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7973,
                  mutability: "mutable",
                  name: "_minimumUSDPurchase",
                  nameLocation: "6675:19:46",
                  nodeType: "VariableDeclaration",
                  scope: 8100,
                  src: "6667:27:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7972,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "6667:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7975,
                  mutability: "mutable",
                  name: "_maximumPresaleAmount",
                  nameLocation: "6712:21:46",
                  nodeType: "VariableDeclaration",
                  scope: 8100,
                  src: "6704:29:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7974,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "6704:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "6568:171:46",
            },
            returnParameters: {
              id: 7979,
              nodeType: "ParameterList",
              parameters: [],
              src: "6757:0:46",
            },
            scope: 8101,
            src: "6544:1934:46",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
        ],
        scope: 8102,
        src: "515:7965:46",
        usedErrors: [7689, 7691, 7693, 7695, 7697, 7699, 7701],
      },
    ],
    src: "38:8443:46",
  },
  compiler: {
    name: "solc",
    version: "0.8.11+commit.d7f03943.Emscripten.clang",
  },
  networks: {},
  schemaVersion: "3.4.4",
  updatedAt: "2022-02-27T15:57:25.884Z",
  devdoc: {
    kind: "dev",
    methods: {
      "owner()": {
        details: "Returns the address of the current owner.",
      },
      "presaleTokens(address,uint256,address)": {
        details:
          "_paymentTokenAddress - Address of the token use to pay (address 0 is for native token)_amount - Amount denominated in the `paymentTokenAddress` being paid_aggregatorTokenAddress - Use to convert price with Chainlink",
      },
      "renounceOwnership()": {
        details:
          "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      },
      "setPresaleReceiver(address)": {
        details:
          "_newPresaleReceiver - Address that'll receive the presale payment token",
      },
      "setPresaleRound(uint256,uint256,uint256,uint256,uint256)": {
        details:
          "_presaleRound - The presale round chosen_startingTime - The starting Presale time_usdPrice - The USD Price of the Token in certain Presale Round_minimumUSDPurchase - The minimum USD amount to purchase the token_maximumPresaleAmount - The maximum amount of token available for a presale round",
      },
      "setPresaleTokenAddress(address)": {
        details: "_newTokenAddress - Address of token that'll be presaled",
      },
      "transferOwnership(address)": {
        details:
          "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      },
    },
    version: 1,
  },
  userdoc: {
    kind: "user",
    methods: {
      "getCurrentPresaleDetails()": {
        notice:
          "Getting the Current Presale Details, including: - Starting Time - USD Price - Minimum USD Purchase - Maximum Presale Amount",
      },
      "getCurrentPresaleRound()": {
        notice: "Get Current Presale Round",
      },
      "presaleTokens(address,uint256,address)": {
        notice: "Execute the Presale of ALPS Token in exchange of other token",
      },
      "setPresaleReceiver(address)": {
        notice: "Set new Presale Receiver Address",
      },
      "setPresaleRound(uint256,uint256,uint256,uint256,uint256)": {
        notice: "Creating/Updating a presale round information",
      },
      "setPresaleTokenAddress(address)": {
        notice: "Set new Presale Token Address",
      },
    },
    version: 1,
  },
};
