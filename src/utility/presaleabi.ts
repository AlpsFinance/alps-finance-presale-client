export const preSaleAbi = {
  contractName: "Presale",
  abi: [
    {
      inputs: [
        {
          internalType: "address",
          name: "_tokenAddress",
          type: "address",
        },
        {
          internalType: "address payable",
          name: "_presaleReceiver",
          type: "address",
        },
      ],
      stateMutability: "nonpayable",
      type: "constructor",
    },
    {
      inputs: [],
      name: "presaleAmountOverdemand",
      type: "error",
    },
    {
      inputs: [],
      name: "presaleMaximumPresaleAmountInvalid",
      type: "error",
    },
    {
      inputs: [],
      name: "presaleMimumumUSDPurchaseInvalid",
      type: "error",
    },
    {
      inputs: [],
      name: "presaleNativeTokenPaymentNotSufficient",
      type: "error",
    },
    {
      inputs: [],
      name: "presaleRoundClosed",
      type: "error",
    },
    {
      inputs: [],
      name: "presaleStartingTimeInvalid",
      type: "error",
    },
    {
      inputs: [],
      name: "presaleTokenAddressInvalid",
      type: "error",
    },
    {
      inputs: [],
      name: "presaleTokenNotAvailable",
      type: "error",
    },
    {
      inputs: [],
      name: "presaleUSDPriceInvalid",
      type: "error",
    },
    {
      inputs: [],
      name: "presaleUSDPurchaseNotSufficient",
      type: "error",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "previousOwner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "newOwner",
          type: "address",
        },
      ],
      name: "OwnershipTransferred",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "paymentTokenAddress",
          type: "address",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "amount",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "paymentTokenamount",
          type: "uint256",
        },
      ],
      name: "TokenPresold",
      type: "event",
    },
    {
      inputs: [],
      name: "owner",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      name: "presaleAmountByRoundMapping",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      name: "presaleDetailsMapping",
      outputs: [
        {
          internalType: "uint256",
          name: "startingTime",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "usdPrice",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "minimumUSDPurchase",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "maximumPresaleAmount",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "presaleReceiver",
      outputs: [
        {
          internalType: "address payable",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      name: "presaleTokenAvailabilityMapping",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "renounceOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "tokenAddress",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "totalPresaleRound",
      outputs: [
        {
          internalType: "uint256",
          name: "_value",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "newOwner",
          type: "address",
        },
      ],
      name: "transferOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "getTotalPresaleRound",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "_presaleRound",
          type: "uint256",
        },
      ],
      name: "getPresaleAmountByRound",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "getTotalPresaleAmount",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "getCurrentPresaleRound",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "getCurrentPresaleDetails",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "_paymentTokenAddress",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "_amount",
          type: "uint256",
        },
        {
          internalType: "address",
          name: "_aggregatorTokenAddress",
          type: "address",
        },
      ],
      name: "presaleTokens",
      outputs: [],
      stateMutability: "payable",
      type: "function",
      payable: true,
    },
    {
      inputs: [
        {
          internalType: "address payable",
          name: "_newPresaleReceiver",
          type: "address",
        },
      ],
      name: "setPresaleReceiver",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "_newTokenAddress",
          type: "address",
        },
      ],
      name: "setPresaleTokenAddress",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "_tokenAddress",
          type: "address",
        },
        {
          internalType: "bool",
          name: "_tokenAvailability",
          type: "bool",
        },
      ],
      name: "setTokenAvailability",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "_presaleRound",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "_startingTime",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "_usdPrice",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "_minimumUSDPurchase",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "_maximumPresaleAmount",
          type: "uint256",
        },
      ],
      name: "setPresaleRound",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
  ],
  metadata:
    '{"compiler":{"version":"0.8.11+commit.d7f03943"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"address payable","name":"_presaleReceiver","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"presaleAmountOverdemand","type":"error"},{"inputs":[],"name":"presaleMaximumPresaleAmountInvalid","type":"error"},{"inputs":[],"name":"presaleMimumumUSDPurchaseInvalid","type":"error"},{"inputs":[],"name":"presaleNativeTokenPaymentNotSufficient","type":"error"},{"inputs":[],"name":"presaleRoundClosed","type":"error"},{"inputs":[],"name":"presaleStartingTimeInvalid","type":"error"},{"inputs":[],"name":"presaleTokenAddressInvalid","type":"error"},{"inputs":[],"name":"presaleTokenNotAvailable","type":"error"},{"inputs":[],"name":"presaleUSDPriceInvalid","type":"error"},{"inputs":[],"name":"presaleUSDPurchaseNotSufficient","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"address","name":"paymentTokenAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paymentTokenamount","type":"uint256"}],"name":"TokenPresold","type":"event"},{"inputs":[],"name":"getCurrentPresaleDetails","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentPresaleRound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_presaleRound","type":"uint256"}],"name":"getPresaleAmountByRound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalPresaleAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalPresaleRound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"presaleAmountByRoundMapping","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"presaleDetailsMapping","outputs":[{"internalType":"uint256","name":"startingTime","type":"uint256"},{"internalType":"uint256","name":"usdPrice","type":"uint256"},{"internalType":"uint256","name":"minimumUSDPurchase","type":"uint256"},{"internalType":"uint256","name":"maximumPresaleAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"presaleReceiver","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"presaleTokenAvailabilityMapping","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_paymentTokenAddress","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_aggregatorTokenAddress","type":"address"}],"name":"presaleTokens","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"_newPresaleReceiver","type":"address"}],"name":"setPresaleReceiver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_presaleRound","type":"uint256"},{"internalType":"uint256","name":"_startingTime","type":"uint256"},{"internalType":"uint256","name":"_usdPrice","type":"uint256"},{"internalType":"uint256","name":"_minimumUSDPurchase","type":"uint256"},{"internalType":"uint256","name":"_maximumPresaleAmount","type":"uint256"}],"name":"setPresaleRound","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newTokenAddress","type":"address"}],"name":"setPresaleTokenAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"bool","name":"_tokenAvailability","type":"bool"}],"name":"setTokenAvailability","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalPresaleRound","outputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"getPresaleAmountByRound(uint256)":{"details":"_presaleRound - The presale round chosen"},"owner()":{"details":"Returns the address of the current owner."},"presaleTokens(address,uint256,address)":{"details":"_paymentTokenAddress - Address of the token use to pay (address 0 is for native token)_amount - Amount denominated in the `paymentTokenAddress` being paid_aggregatorTokenAddress - Use to convert price with Chainlink"},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setPresaleReceiver(address)":{"details":"_newPresaleReceiver - Address that\'ll receive the presale payment token"},"setPresaleRound(uint256,uint256,uint256,uint256,uint256)":{"details":"_presaleRound - The presale round chosen_startingTime - The starting Presale time_usdPrice - The USD Price of the Token in certain Presale Round_minimumUSDPurchase - The minimum USD amount to purchase the token_maximumPresaleAmount - The maximum amount of token available for a presale round"},"setPresaleTokenAddress(address)":{"details":"_newTokenAddress - Address of token that\'ll be presaled"},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{"getCurrentPresaleDetails()":{"notice":"Getting the Current Presale Details, including: - Starting Time - USD Price - Minimum USD Purchase - Maximum Presale Amount"},"getCurrentPresaleRound()":{"notice":"Get Current Presale Round"},"getPresaleAmountByRound(uint256)":{"notice":"Get presale total amount By presale round"},"getTotalPresaleAmount()":{"notice":"Get total amount of presale from all rounds"},"getTotalPresaleRound()":{"notice":"Get total amount of presale round"},"presaleTokens(address,uint256,address)":{"notice":"Execute the Presale of ALPS Token in exchange of other token"},"setPresaleReceiver(address)":{"notice":"Set new Presale Receiver Address"},"setPresaleRound(uint256,uint256,uint256,uint256,uint256)":{"notice":"Creating/Updating a presale round information"},"setPresaleTokenAddress(address)":{"notice":"Set new Presale Token Address"}},"version":1}},"settings":{"compilationTarget":{"project:/contracts/presale/Presale.sol":"Presale"},"evmVersion":"london","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"keccak256":"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5","license":"MIT","urls":["bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120","dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG"]},"@openzeppelin/contracts/access/Ownable.sol":{"keccak256":"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9","license":"MIT","urls":["bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981","dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"]},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"keccak256":"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935","license":"MIT","urls":["bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2","dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud"]},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2","license":"MIT","urls":["bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824","dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei"]},"@openzeppelin/contracts/utils/Context.sol":{"keccak256":"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7","license":"MIT","urls":["bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92","dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"]},"@openzeppelin/contracts/utils/Counters.sol":{"keccak256":"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1","license":"MIT","urls":["bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee","dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"]},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"keccak256":"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21","license":"MIT","urls":["bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2","dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y"]},"project:/contracts/libraries/PriceConverter.sol":{"keccak256":"0x1c7379e2f032a302a999b9f49bd5b0d79bc5d260aeae8d8e173dfdcae2bebbb8","license":"AGPL-3.0","urls":["bzz-raw://c8968f30c2b173c3fa28a669fe95d09721ffad661b7632d36de73a286e06d124","dweb:/ipfs/QmXCh1gfzimGC3WLPLyUSsdy7UWGNKt6Fsc7f45sRyYRJe"]},"project:/contracts/presale/Presale.sol":{"keccak256":"0x471a198805c482d2bf80d2b1f68bff079a0f877c8608ca1db1e7bf234f16ff02","license":"AGPL-3.0","urls":["bzz-raw://b9c533c3834a46f613935c5a46d0bac77107f9c45682028a0efa7d3f99a77745","dweb:/ipfs/QmaL81BG8nHbF9HFqCAPtH7V8rcAfBZUANcSoD7GkDPnxK"]},"project:/contracts/token/interfaces/IERC20Custom.sol":{"keccak256":"0x6f50952568dc5b577661f6d1730b39cfa7628a39390103c89190afdfc565d1f4","license":"AGPL-3.0","urls":["bzz-raw://480386fcd5b5e3456e80150bf5444f1b2b067746be0245f287b78fc03e81133a","dweb:/ipfs/QmWBfMsjQPEKj7jav96428j8Ss4AUVtkj69nsVsPZb8E1S"]}},"version":1}',
  bytecode:
    "",
  deployedBytecode:
    "0x6080604052600436106101145760003560e01c80637b4d3585116100a0578063c829d1db11610064578063c829d1db1461032d578063d958e0011461034d578063ec2b35231461037a578063f2fde38b1461038f578063feda925b146103af57600080fd5b80637b4d3585146102425780638da5cb5b146102a4578063962de5c0146102d65780639d76ea58146102ed578063c14364151461030d57600080fd5b8063392f911b116100e7578063392f911b146101b8578063398dcd26146101e55780633c0c134d146101fa5780636a107cd81461021a578063715018a61461022d57600080fd5b80630aca575a146101195780630c115a74146101415780631c63f0ed146101635780632c49eba814610178575b600080fd5b34801561012557600080fd5b5061012e6103cf565b6040519081526020015b60405180910390f35b34801561014d57600080fd5b5061016161015c366004610dbb565b610411565b005b34801561016f57600080fd5b5061012e61046f565b34801561018457600080fd5b506101a8610193366004610df4565b60076020526000908152604090205460ff1681565b6040519015158152602001610138565b3480156101c457600080fd5b5061012e6101d3366004610e11565b60066020526000908152604090205481565b3480156101f157600080fd5b5061012e6104c4565b34801561020657600080fd5b50610161610215366004610df4565b6104d4565b610161610228366004610e2a565b610549565b34801561023957600080fd5b50610161610a00565b34801561024e57600080fd5b5061028461025d366004610e11565b60056020526000908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610138565b3480156102b057600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610138565b3480156102e257600080fd5b5060025461012e9081565b3480156102f957600080fd5b506003546102be906001600160a01b031681565b34801561031957600080fd5b506004546102be906001600160a01b031681565b34801561033957600080fd5b50610161610348366004610e6c565b610a36565b34801561035957600080fd5b5061012e610368366004610e11565b60009081526006602052604090205490565b34801561038657600080fd5b50610284610b8e565b34801561039b57600080fd5b506101616103aa366004610df4565b610bcd565b3480156103bb57600080fd5b506101616103ca366004610df4565b610c68565b600080805b60025481101561040b576000818152600660205260409020546103f79083610ebd565b91508061040381610ed5565b9150506103d4565b50919050565b6000546001600160a01b031633146104445760405162461bcd60e51b815260040161043b90610ef0565b60405180910390fd5b6001600160a01b03919091166000908152600760205260409020805460ff1916911515919091179055565b600080600161047d60025490565b6104879190610f25565b90505b80156104bc5760008181526005602052604090205442106104aa57919050565b806104b481610f3c565b91505061048a565b506000905090565b60006104cf60025490565b905090565b6000546001600160a01b031633146104fe5760405162461bcd60e51b815260040161043b90610ef0565b806001600160a01b0381166105265760405163c4cc856760e01b815260040160405180910390fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055565b6002600154141561059c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161043b565b600260015560008080806105ae610b8e565b9350935093509350834210156105d7576040516304d61c6f60e41b815260040160405180910390fd5b6001600160a01b03871660009081526007602052604090205460ff16610610576040516303003c8560e21b815260040160405180910390fd5b60035460408051633fabe5a360e21b815290516001600160a01b039283169288926000929184169163feaf968c9160048082019260a0929091908290030181865afa158015610663573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106879190610f72565b505050915050600061076561075f83856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f89190610fc2565b876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075a9190610fc2565b610cb4565b8b610d27565b9050858110156107885760405163196d4a1d60e01b815260040160405180910390fd5b60006107a0610797838a610d3c565b60006012610cb4565b9050600660006107ae61046f565b815260200190815260200160002054866107c89190610f25565b8111156107e8576040516317b1337360e31b815260040160405180910390fd5b80600660006107f561046f565b815260200190815260200160002060008282546108129190610ebd565b90915550506001600160a01b038c166108b3578a3410156108465760405163854a356160e01b815260040160405180910390fd5b6004546040516001600160a01b03909116908c156108fc02908d906000818181858888f19350505050158015610880573d6000803e3d6000fd5b5060405133904780156108fc02916000818181858888f193505050501580156108ad573d6000803e3d6000fd5b50610938565b600480546040516323b872dd60e01b815233928101929092526001600160a01b039081166024830152604482018d90528d91908216906323b872dd906064016020604051808303816000875af1158015610911573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109359190610fe5565b50505b6040516340c10f1960e01b8152336004820152602481018290526001600160a01b038616906340c10f1990604401600060405180830381600087803b15801561098057600080fd5b505af1158015610994573d6000803e3d6000fd5b505050508b6001600160a01b0316336001600160a01b03167f69902df1d9bae4b2a08b9e9d689906299b4b15ac10fbbf560d019b5c73fd35d6838e6040516109e6929190918252602082015260400190565b60405180910390a350506001805550505050505050505050565b6000546001600160a01b03163314610a2a5760405162461bcd60e51b815260040161043b90610ef0565b610a346000610d48565b565b6000546001600160a01b03163314610a605760405162461bcd60e51b815260040161043b90610ef0565b60008581526005602052604090208054600182015460028301546003909301549192909183158015610a90575082155b8015610a9a575081155b8015610aa4575080155b15610ab757610ab7600280546001019055565b871580610aed57508815801590610aed575060056000610ad860018c610f25565b81526020019081526020016000206000015488105b15610b0b57604051633863ce1d60e01b815260040160405180910390fd5b86610b29576040516329198c7f60e11b815260040160405180910390fd5b85610b4757604051630746844f60e31b815260040160405180910390fd5b84610b6557604051639f2bfa4160e01b815260040160405180910390fd5b505050600095865250600560205260409094209283556001830191909155600282015560030155565b6000806000806000610b9e61046f565b600090815260056020526040902080546001820154600283015460039093015491989097509195509350915050565b6000546001600160a01b03163314610bf75760405162461bcd60e51b815260040161043b90610ef0565b6001600160a01b038116610c5c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161043b565b610c6581610d48565b50565b6000546001600160a01b03163314610c925760405162461bcd60e51b815260040161043b90610ef0565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60008160ff168360ff161015610ced57610cce8383611002565b610cdc9060ff16600a611109565b610ce69085611115565b9050610d20565b8160ff168360ff161115610d1d57610d058284611002565b610d139060ff16600a611109565b610ce690856111b0565b50825b9392505050565b6000610d3382846111de565b90505b92915050565b6000610d3382846111fd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114610c6557600080fd5b8015158114610c6557600080fd5b60008060408385031215610dce57600080fd5b8235610dd981610d98565b91506020830135610de981610dad565b809150509250929050565b600060208284031215610e0657600080fd5b8135610d2081610d98565b600060208284031215610e2357600080fd5b5035919050565b600080600060608486031215610e3f57600080fd5b8335610e4a81610d98565b9250602084013591506040840135610e6181610d98565b809150509250925092565b600080600080600060a08688031215610e8457600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610ed057610ed0610ea7565b500190565b6000600019821415610ee957610ee9610ea7565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015610f3757610f37610ea7565b500390565b600081610f4b57610f4b610ea7565b506000190190565b805169ffffffffffffffffffff81168114610f6d57600080fd5b919050565b600080600080600060a08688031215610f8a57600080fd5b610f9386610f53565b9450602086015193506040860151925060608601519150610fb660808701610f53565b90509295509295909350565b600060208284031215610fd457600080fd5b815160ff81168114610d2057600080fd5b600060208284031215610ff757600080fd5b8151610d2081610dad565b600060ff821660ff84168082101561101c5761101c610ea7565b90039392505050565b600181815b8085111561106057816000190482111561104657611046610ea7565b8085161561105357918102915b93841c939080029061102a565b509250929050565b60008261107757506001610d36565b8161108457506000610d36565b816001811461109a57600281146110a4576110c0565b6001915050610d36565b60ff8411156110b5576110b5610ea7565b50506001821b610d36565b5060208310610133831016604e8410600b84101617156110e3575081810a610d36565b6110ed8383611025565b806000190482111561110157611101610ea7565b029392505050565b6000610d338383611068565b60006001600160ff1b038184138284138082168684048611161561113b5761113b610ea7565b600160ff1b600087128281168783058912161561115a5761115a610ea7565b6000871292508782058712848416161561117657611176610ea7565b8785058712818416161561118c5761118c610ea7565b505050929093029392505050565b634e487b7160e01b600052601260045260246000fd5b6000826111bf576111bf61119a565b600160ff1b8214600019841416156111d9576111d9610ea7565b500590565b60008160001904831182151516156111f8576111f8610ea7565b500290565b60008261120c5761120c61119a565b50049056fea2646970667358221220e36f7fee1f07b67d72e466b35d5d9a33479c5e95c89f8ec80c1143794655874b64736f6c634300080b0033",
  immutableReferences: {},
  generatedSources: [
    {
      ast: {
        nodeType: "YulBlock",
        src: "0:545:55",
        statements: [
          {
            nodeType: "YulBlock",
            src: "6:3:55",
            statements: [],
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "59:86:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "123:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "132:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "135:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "125:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "125:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "125:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "82:5:55",
                          },
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "93:5:55",
                              },
                              {
                                arguments: [
                                  {
                                    arguments: [
                                      {
                                        kind: "number",
                                        nodeType: "YulLiteral",
                                        src: "108:3:55",
                                        type: "",
                                        value: "160",
                                      },
                                      {
                                        kind: "number",
                                        nodeType: "YulLiteral",
                                        src: "113:1:55",
                                        type: "",
                                        value: "1",
                                      },
                                    ],
                                    functionName: {
                                      name: "shl",
                                      nodeType: "YulIdentifier",
                                      src: "104:3:55",
                                    },
                                    nodeType: "YulFunctionCall",
                                    src: "104:11:55",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "117:1:55",
                                    type: "",
                                    value: "1",
                                  },
                                ],
                                functionName: {
                                  name: "sub",
                                  nodeType: "YulIdentifier",
                                  src: "100:3:55",
                                },
                                nodeType: "YulFunctionCall",
                                src: "100:19:55",
                              },
                            ],
                            functionName: {
                              name: "and",
                              nodeType: "YulIdentifier",
                              src: "89:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "89:31:55",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "79:2:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "79:42:55",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "72:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "72:50:55",
                  },
                  nodeType: "YulIf",
                  src: "69:70:55",
                },
              ],
            },
            name: "validator_revert_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "48:5:55",
                type: "",
              },
            ],
            src: "14:131:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "256:287:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "302:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "311:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "314:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "304:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "304:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "304:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "277:7:55",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "286:9:55",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "273:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "273:23:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "298:2:55",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "269:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "269:32:55",
                  },
                  nodeType: "YulIf",
                  src: "266:52:55",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "327:29:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "346:9:55",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "340:5:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "340:16:55",
                  },
                  variables: [
                    {
                      name: "value",
                      nodeType: "YulTypedName",
                      src: "331:5:55",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "390:5:55",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_address",
                      nodeType: "YulIdentifier",
                      src: "365:24:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "365:31:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "365:31:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "405:15:55",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "415:5:55",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "405:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "429:40:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "454:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "465:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "450:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "450:18:55",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "444:5:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "444:25:55",
                  },
                  variables: [
                    {
                      name: "value_1",
                      nodeType: "YulTypedName",
                      src: "433:7:55",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value_1",
                        nodeType: "YulIdentifier",
                        src: "503:7:55",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_address",
                      nodeType: "YulIdentifier",
                      src: "478:24:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "478:33:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "478:33:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "520:17:55",
                  value: {
                    name: "value_1",
                    nodeType: "YulIdentifier",
                    src: "530:7:55",
                  },
                  variableNames: [
                    {
                      name: "value1",
                      nodeType: "YulIdentifier",
                      src: "520:6:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_addresst_address_payable_fromMemory",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "214:9:55",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "225:7:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "237:6:55",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "245:6:55",
                type: "",
              },
            ],
            src: "150:393:55",
          },
        ],
      },
      contents:
        "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_payable_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n}",
      id: 55,
      language: "Yul",
      name: "#utility.yul",
    },
  ],
  deployedGeneratedSources: [
    {
      ast: {
        nodeType: "YulBlock",
        src: "0:10150:55",
        statements: [
          {
            nodeType: "YulBlock",
            src: "6:3:55",
            statements: [],
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "115:76:55",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "125:26:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "137:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "148:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "133:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "133:18:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "125:4:55",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "167:9:55",
                      },
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "178:6:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "160:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "160:25:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "160:25:55",
                },
              ],
            },
            name: "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "84:9:55",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "95:6:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "106:4:55",
                type: "",
              },
            ],
            src: "14:177:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "241:86:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "305:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "314:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "317:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "307:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "307:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "307:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "264:5:55",
                          },
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "275:5:55",
                              },
                              {
                                arguments: [
                                  {
                                    arguments: [
                                      {
                                        kind: "number",
                                        nodeType: "YulLiteral",
                                        src: "290:3:55",
                                        type: "",
                                        value: "160",
                                      },
                                      {
                                        kind: "number",
                                        nodeType: "YulLiteral",
                                        src: "295:1:55",
                                        type: "",
                                        value: "1",
                                      },
                                    ],
                                    functionName: {
                                      name: "shl",
                                      nodeType: "YulIdentifier",
                                      src: "286:3:55",
                                    },
                                    nodeType: "YulFunctionCall",
                                    src: "286:11:55",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "299:1:55",
                                    type: "",
                                    value: "1",
                                  },
                                ],
                                functionName: {
                                  name: "sub",
                                  nodeType: "YulIdentifier",
                                  src: "282:3:55",
                                },
                                nodeType: "YulFunctionCall",
                                src: "282:19:55",
                              },
                            ],
                            functionName: {
                              name: "and",
                              nodeType: "YulIdentifier",
                              src: "271:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "271:31:55",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "261:2:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "261:42:55",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "254:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "254:50:55",
                  },
                  nodeType: "YulIf",
                  src: "251:70:55",
                },
              ],
            },
            name: "validator_revert_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "230:5:55",
                type: "",
              },
            ],
            src: "196:131:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "374:76:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "428:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "437:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "440:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "430:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "430:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "430:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "397:5:55",
                          },
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    name: "value",
                                    nodeType: "YulIdentifier",
                                    src: "418:5:55",
                                  },
                                ],
                                functionName: {
                                  name: "iszero",
                                  nodeType: "YulIdentifier",
                                  src: "411:6:55",
                                },
                                nodeType: "YulFunctionCall",
                                src: "411:13:55",
                              },
                            ],
                            functionName: {
                              name: "iszero",
                              nodeType: "YulIdentifier",
                              src: "404:6:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "404:21:55",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "394:2:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "394:32:55",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "387:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "387:40:55",
                  },
                  nodeType: "YulIf",
                  src: "384:60:55",
                },
              ],
            },
            name: "validator_revert_bool",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "363:5:55",
                type: "",
              },
            ],
            src: "332:118:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "539:298:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "585:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "594:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "597:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "587:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "587:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "587:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "560:7:55",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "569:9:55",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "556:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "556:23:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "581:2:55",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "552:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "552:32:55",
                  },
                  nodeType: "YulIf",
                  src: "549:52:55",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "610:36:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "636:9:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "623:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "623:23:55",
                  },
                  variables: [
                    {
                      name: "value",
                      nodeType: "YulTypedName",
                      src: "614:5:55",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "680:5:55",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_address",
                      nodeType: "YulIdentifier",
                      src: "655:24:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "655:31:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "655:31:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "695:15:55",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "705:5:55",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "695:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "719:47:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "751:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "762:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "747:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "747:18:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "734:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "734:32:55",
                  },
                  variables: [
                    {
                      name: "value_1",
                      nodeType: "YulTypedName",
                      src: "723:7:55",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value_1",
                        nodeType: "YulIdentifier",
                        src: "797:7:55",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_bool",
                      nodeType: "YulIdentifier",
                      src: "775:21:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "775:30:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "775:30:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "814:17:55",
                  value: {
                    name: "value_1",
                    nodeType: "YulIdentifier",
                    src: "824:7:55",
                  },
                  variableNames: [
                    {
                      name: "value1",
                      nodeType: "YulIdentifier",
                      src: "814:6:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_addresst_bool",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "497:9:55",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "508:7:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "520:6:55",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "528:6:55",
                type: "",
              },
            ],
            src: "455:382:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "912:177:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "958:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "967:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "970:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "960:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "960:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "960:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "933:7:55",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "942:9:55",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "929:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "929:23:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "954:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "925:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "925:32:55",
                  },
                  nodeType: "YulIf",
                  src: "922:52:55",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "983:36:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "1009:9:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "996:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "996:23:55",
                  },
                  variables: [
                    {
                      name: "value",
                      nodeType: "YulTypedName",
                      src: "987:5:55",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "1053:5:55",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_address",
                      nodeType: "YulIdentifier",
                      src: "1028:24:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1028:31:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "1028:31:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "1068:15:55",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "1078:5:55",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "1068:6:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "878:9:55",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "889:7:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "901:6:55",
                type: "",
              },
            ],
            src: "842:247:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "1189:92:55",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "1199:26:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "1211:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1222:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "1207:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1207:18:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "1199:4:55",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "1241:9:55",
                      },
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "value0",
                                nodeType: "YulIdentifier",
                                src: "1266:6:55",
                              },
                            ],
                            functionName: {
                              name: "iszero",
                              nodeType: "YulIdentifier",
                              src: "1259:6:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "1259:14:55",
                          },
                        ],
                        functionName: {
                          name: "iszero",
                          nodeType: "YulIdentifier",
                          src: "1252:6:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1252:22:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "1234:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1234:41:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "1234:41:55",
                },
              ],
            },
            name: "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "1158:9:55",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "1169:6:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "1180:4:55",
                type: "",
              },
            ],
            src: "1094:187:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "1356:110:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "1402:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "1411:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "1414:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "1404:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1404:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "1404:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "1377:7:55",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1386:9:55",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "1373:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1373:23:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1398:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "1369:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1369:32:55",
                  },
                  nodeType: "YulIf",
                  src: "1366:52:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "1427:33:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "1450:9:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "1437:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1437:23:55",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "1427:6:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "1322:9:55",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "1333:7:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "1345:6:55",
                type: "",
              },
            ],
            src: "1286:180:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "1575:352:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "1621:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "1630:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "1633:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "1623:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1623:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "1623:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "1596:7:55",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1605:9:55",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "1592:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1592:23:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1617:2:55",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "1588:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1588:32:55",
                  },
                  nodeType: "YulIf",
                  src: "1585:52:55",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "1646:36:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "1672:9:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "1659:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1659:23:55",
                  },
                  variables: [
                    {
                      name: "value",
                      nodeType: "YulTypedName",
                      src: "1650:5:55",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "1716:5:55",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_address",
                      nodeType: "YulIdentifier",
                      src: "1691:24:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1691:31:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "1691:31:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "1731:15:55",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "1741:5:55",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "1731:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "1755:42:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1782:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "1793:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "1778:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1778:18:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "1765:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1765:32:55",
                  },
                  variableNames: [
                    {
                      name: "value1",
                      nodeType: "YulIdentifier",
                      src: "1755:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "1806:47:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1838:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "1849:2:55",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "1834:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1834:18:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "1821:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1821:32:55",
                  },
                  variables: [
                    {
                      name: "value_1",
                      nodeType: "YulTypedName",
                      src: "1810:7:55",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value_1",
                        nodeType: "YulIdentifier",
                        src: "1887:7:55",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_address",
                      nodeType: "YulIdentifier",
                      src: "1862:24:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1862:33:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "1862:33:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "1904:17:55",
                  value: {
                    name: "value_1",
                    nodeType: "YulIdentifier",
                    src: "1914:7:55",
                  },
                  variableNames: [
                    {
                      name: "value2",
                      nodeType: "YulIdentifier",
                      src: "1904:6:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_addresst_uint256t_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "1525:9:55",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "1536:7:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "1548:6:55",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "1556:6:55",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "1564:6:55",
                type: "",
              },
            ],
            src: "1471:456:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2117:206:55",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "2127:27:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "2139:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2150:3:55",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "2135:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2135:19:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "2127:4:55",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "2170:9:55",
                      },
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "2181:6:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "2163:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2163:25:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "2163:25:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "2208:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "2219:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "2204:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2204:18:55",
                      },
                      {
                        name: "value1",
                        nodeType: "YulIdentifier",
                        src: "2224:6:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "2197:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2197:34:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "2197:34:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "2251:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "2262:2:55",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "2247:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2247:18:55",
                      },
                      {
                        name: "value2",
                        nodeType: "YulIdentifier",
                        src: "2267:6:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "2240:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2240:34:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "2240:34:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "2294:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "2305:2:55",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "2290:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2290:18:55",
                      },
                      {
                        name: "value3",
                        nodeType: "YulIdentifier",
                        src: "2310:6:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "2283:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2283:34:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "2283:34:55",
                },
              ],
            },
            name: "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "2062:9:55",
                type: "",
              },
              {
                name: "value3",
                nodeType: "YulTypedName",
                src: "2073:6:55",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "2081:6:55",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "2089:6:55",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "2097:6:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "2108:4:55",
                type: "",
              },
            ],
            src: "1932:391:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2429:102:55",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "2439:26:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "2451:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2462:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "2447:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2447:18:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "2439:4:55",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "2481:9:55",
                      },
                      {
                        arguments: [
                          {
                            name: "value0",
                            nodeType: "YulIdentifier",
                            src: "2496:6:55",
                          },
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "2512:3:55",
                                    type: "",
                                    value: "160",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "2517:1:55",
                                    type: "",
                                    value: "1",
                                  },
                                ],
                                functionName: {
                                  name: "shl",
                                  nodeType: "YulIdentifier",
                                  src: "2508:3:55",
                                },
                                nodeType: "YulFunctionCall",
                                src: "2508:11:55",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "2521:1:55",
                                type: "",
                                value: "1",
                              },
                            ],
                            functionName: {
                              name: "sub",
                              nodeType: "YulIdentifier",
                              src: "2504:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "2504:19:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "2492:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2492:32:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "2474:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2474:51:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "2474:51:55",
                },
              ],
            },
            name: "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "2398:9:55",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "2409:6:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "2420:4:55",
                type: "",
              },
            ],
            src: "2328:203:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2653:102:55",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "2663:26:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "2675:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2686:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "2671:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2671:18:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "2663:4:55",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "2705:9:55",
                      },
                      {
                        arguments: [
                          {
                            name: "value0",
                            nodeType: "YulIdentifier",
                            src: "2720:6:55",
                          },
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "2736:3:55",
                                    type: "",
                                    value: "160",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "2741:1:55",
                                    type: "",
                                    value: "1",
                                  },
                                ],
                                functionName: {
                                  name: "shl",
                                  nodeType: "YulIdentifier",
                                  src: "2732:3:55",
                                },
                                nodeType: "YulFunctionCall",
                                src: "2732:11:55",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "2745:1:55",
                                type: "",
                                value: "1",
                              },
                            ],
                            functionName: {
                              name: "sub",
                              nodeType: "YulIdentifier",
                              src: "2728:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "2728:19:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "2716:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2716:32:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "2698:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2698:51:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "2698:51:55",
                },
              ],
            },
            name: "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "2622:9:55",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "2633:6:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "2644:4:55",
                type: "",
              },
            ],
            src: "2536:219:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2898:316:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "2945:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2954:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2957:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "2947:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2947:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "2947:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "2919:7:55",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "2928:9:55",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "2915:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2915:23:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2940:3:55",
                        type: "",
                        value: "160",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "2911:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2911:33:55",
                  },
                  nodeType: "YulIf",
                  src: "2908:53:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "2970:33:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "2993:9:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "2980:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2980:23:55",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "2970:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "3012:42:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "3039:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "3050:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "3035:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3035:18:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "3022:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3022:32:55",
                  },
                  variableNames: [
                    {
                      name: "value1",
                      nodeType: "YulIdentifier",
                      src: "3012:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "3063:42:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "3090:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "3101:2:55",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "3086:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3086:18:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "3073:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3073:32:55",
                  },
                  variableNames: [
                    {
                      name: "value2",
                      nodeType: "YulIdentifier",
                      src: "3063:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "3114:42:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "3141:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "3152:2:55",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "3137:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3137:18:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "3124:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3124:32:55",
                  },
                  variableNames: [
                    {
                      name: "value3",
                      nodeType: "YulIdentifier",
                      src: "3114:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "3165:43:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "3192:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "3203:3:55",
                            type: "",
                            value: "128",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "3188:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3188:19:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "3175:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3175:33:55",
                  },
                  variableNames: [
                    {
                      name: "value4",
                      nodeType: "YulIdentifier",
                      src: "3165:6:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "2832:9:55",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "2843:7:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "2855:6:55",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "2863:6:55",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "2871:6:55",
                type: "",
              },
              {
                name: "value3",
                nodeType: "YulTypedName",
                src: "2879:6:55",
                type: "",
              },
              {
                name: "value4",
                nodeType: "YulTypedName",
                src: "2887:6:55",
                type: "",
              },
            ],
            src: "2760:454:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3297:177:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "3343:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3352:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3355:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "3345:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3345:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "3345:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "3318:7:55",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "3327:9:55",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "3314:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3314:23:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3339:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "3310:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3310:32:55",
                  },
                  nodeType: "YulIf",
                  src: "3307:52:55",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "3368:36:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "3394:9:55",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "3381:12:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3381:23:55",
                  },
                  variables: [
                    {
                      name: "value",
                      nodeType: "YulTypedName",
                      src: "3372:5:55",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "3438:5:55",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_address",
                      nodeType: "YulIdentifier",
                      src: "3413:24:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3413:31:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3413:31:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "3453:15:55",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "3463:5:55",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "3453:6:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_address_payable",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "3263:9:55",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "3274:7:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "3286:6:55",
                type: "",
              },
            ],
            src: "3219:255:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3511:95:55",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3528:1:55",
                        type: "",
                        value: "0",
                      },
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "3535:3:55",
                            type: "",
                            value: "224",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "3540:10:55",
                            type: "",
                            value: "0x4e487b71",
                          },
                        ],
                        functionName: {
                          name: "shl",
                          nodeType: "YulIdentifier",
                          src: "3531:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3531:20:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "3521:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3521:31:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3521:31:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3568:1:55",
                        type: "",
                        value: "4",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3571:4:55",
                        type: "",
                        value: "0x11",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "3561:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3561:15:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3561:15:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3592:1:55",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3595:4:55",
                        type: "",
                        value: "0x24",
                      },
                    ],
                    functionName: {
                      name: "revert",
                      nodeType: "YulIdentifier",
                      src: "3585:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3585:15:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3585:15:55",
                },
              ],
            },
            name: "panic_error_0x11",
            nodeType: "YulFunctionDefinition",
            src: "3479:127:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3659:80:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "3686:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "3688:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3688:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "3688:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "3675:1:55",
                      },
                      {
                        arguments: [
                          {
                            name: "y",
                            nodeType: "YulIdentifier",
                            src: "3682:1:55",
                          },
                        ],
                        functionName: {
                          name: "not",
                          nodeType: "YulIdentifier",
                          src: "3678:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3678:6:55",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "3672:2:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3672:13:55",
                  },
                  nodeType: "YulIf",
                  src: "3669:39:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "3717:16:55",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "3728:1:55",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "3731:1:55",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "3724:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3724:9:55",
                  },
                  variableNames: [
                    {
                      name: "sum",
                      nodeType: "YulIdentifier",
                      src: "3717:3:55",
                    },
                  ],
                },
              ],
            },
            name: "checked_add_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "3642:1:55",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "3645:1:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "sum",
                nodeType: "YulTypedName",
                src: "3651:3:55",
                type: "",
              },
            ],
            src: "3611:128:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3791:88:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "3822:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "3824:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3824:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "3824:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "3807:5:55",
                      },
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "3818:1:55",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "not",
                          nodeType: "YulIdentifier",
                          src: "3814:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3814:6:55",
                      },
                    ],
                    functionName: {
                      name: "eq",
                      nodeType: "YulIdentifier",
                      src: "3804:2:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3804:17:55",
                  },
                  nodeType: "YulIf",
                  src: "3801:43:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "3853:20:55",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "3864:5:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3871:1:55",
                        type: "",
                        value: "1",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "3860:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3860:13:55",
                  },
                  variableNames: [
                    {
                      name: "ret",
                      nodeType: "YulIdentifier",
                      src: "3853:3:55",
                    },
                  ],
                },
              ],
            },
            name: "increment_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "3773:5:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "ret",
                nodeType: "YulTypedName",
                src: "3783:3:55",
                type: "",
              },
            ],
            src: "3744:135:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "4058:182:55",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "4075:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "4086:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "4068:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4068:21:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "4068:21:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "4109:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "4120:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "4105:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4105:18:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "4125:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "4098:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4098:30:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "4098:30:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "4148:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "4159:2:55",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "4144:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4144:18:55",
                      },
                      {
                        hexValue:
                          "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "4164:34:55",
                        type: "",
                        value: "Ownable: caller is not the owner",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "4137:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4137:62:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "4137:62:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "4208:26:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "4220:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "4231:2:55",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "4216:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4216:18:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "4208:4:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "4035:9:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "4049:4:55",
                type: "",
              },
            ],
            src: "3884:356:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "4294:76:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "4316:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "4318:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4318:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "4318:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "4310:1:55",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "4313:1:55",
                      },
                    ],
                    functionName: {
                      name: "lt",
                      nodeType: "YulIdentifier",
                      src: "4307:2:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4307:8:55",
                  },
                  nodeType: "YulIf",
                  src: "4304:34:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "4347:17:55",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "4359:1:55",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "4362:1:55",
                      },
                    ],
                    functionName: {
                      name: "sub",
                      nodeType: "YulIdentifier",
                      src: "4355:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4355:9:55",
                  },
                  variableNames: [
                    {
                      name: "diff",
                      nodeType: "YulIdentifier",
                      src: "4347:4:55",
                    },
                  ],
                },
              ],
            },
            name: "checked_sub_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "4276:1:55",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "4279:1:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "diff",
                nodeType: "YulTypedName",
                src: "4285:4:55",
                type: "",
              },
            ],
            src: "4245:125:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "4422:89:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "4449:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "4451:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4451:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "4451:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "4442:5:55",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "4435:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4435:13:55",
                  },
                  nodeType: "YulIf",
                  src: "4432:39:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "4480:25:55",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "4491:5:55",
                      },
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "4502:1:55",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "not",
                          nodeType: "YulIdentifier",
                          src: "4498:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4498:6:55",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "4487:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4487:18:55",
                  },
                  variableNames: [
                    {
                      name: "ret",
                      nodeType: "YulIdentifier",
                      src: "4480:3:55",
                    },
                  ],
                },
              ],
            },
            name: "decrement_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "4404:5:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "ret",
                nodeType: "YulTypedName",
                src: "4414:3:55",
                type: "",
              },
            ],
            src: "4375:136:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "4690:181:55",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "4707:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "4718:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "4700:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4700:21:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "4700:21:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "4741:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "4752:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "4737:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4737:18:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "4757:2:55",
                        type: "",
                        value: "31",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "4730:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4730:30:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "4730:30:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "4780:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "4791:2:55",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "4776:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4776:18:55",
                      },
                      {
                        hexValue:
                          "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "4796:33:55",
                        type: "",
                        value: "ReentrancyGuard: reentrant call",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "4769:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4769:61:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "4769:61:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "4839:26:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "4851:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "4862:2:55",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "4847:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4847:18:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "4839:4:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "4667:9:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "4681:4:55",
                type: "",
              },
            ],
            src: "4516:355:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "4935:120:55",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "4945:22:55",
                  value: {
                    arguments: [
                      {
                        name: "offset",
                        nodeType: "YulIdentifier",
                        src: "4960:6:55",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "4954:5:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4954:13:55",
                  },
                  variableNames: [
                    {
                      name: "value",
                      nodeType: "YulIdentifier",
                      src: "4945:5:55",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "5033:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "5042:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "5045:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "5035:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "5035:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "5035:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "4989:5:55",
                          },
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "5000:5:55",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "5007:22:55",
                                type: "",
                                value: "0xffffffffffffffffffff",
                              },
                            ],
                            functionName: {
                              name: "and",
                              nodeType: "YulIdentifier",
                              src: "4996:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "4996:34:55",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "4986:2:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4986:45:55",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "4979:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4979:53:55",
                  },
                  nodeType: "YulIf",
                  src: "4976:73:55",
                },
              ],
            },
            name: "abi_decode_uint80_fromMemory",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "offset",
                nodeType: "YulTypedName",
                src: "4914:6:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "4925:5:55",
                type: "",
              },
            ],
            src: "4876:179:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "5206:327:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "5253:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "5262:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "5265:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "5255:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "5255:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "5255:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "5227:7:55",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "5236:9:55",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "5223:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5223:23:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "5248:3:55",
                        type: "",
                        value: "160",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "5219:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5219:33:55",
                  },
                  nodeType: "YulIf",
                  src: "5216:53:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "5278:49:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "5317:9:55",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_uint80_fromMemory",
                      nodeType: "YulIdentifier",
                      src: "5288:28:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5288:39:55",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "5278:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "5336:35:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "5356:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "5367:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "5352:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5352:18:55",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "5346:5:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5346:25:55",
                  },
                  variableNames: [
                    {
                      name: "value1",
                      nodeType: "YulIdentifier",
                      src: "5336:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "5380:35:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "5400:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "5411:2:55",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "5396:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5396:18:55",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "5390:5:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5390:25:55",
                  },
                  variableNames: [
                    {
                      name: "value2",
                      nodeType: "YulIdentifier",
                      src: "5380:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "5424:35:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "5444:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "5455:2:55",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "5440:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5440:18:55",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "5434:5:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5434:25:55",
                  },
                  variableNames: [
                    {
                      name: "value3",
                      nodeType: "YulIdentifier",
                      src: "5424:6:55",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "5468:59:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "5511:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "5522:3:55",
                            type: "",
                            value: "128",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "5507:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5507:19:55",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_uint80_fromMemory",
                      nodeType: "YulIdentifier",
                      src: "5478:28:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5478:49:55",
                  },
                  variableNames: [
                    {
                      name: "value4",
                      nodeType: "YulIdentifier",
                      src: "5468:6:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "5140:9:55",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "5151:7:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "5163:6:55",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "5171:6:55",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "5179:6:55",
                type: "",
              },
              {
                name: "value3",
                nodeType: "YulTypedName",
                src: "5187:6:55",
                type: "",
              },
              {
                name: "value4",
                nodeType: "YulTypedName",
                src: "5195:6:55",
                type: "",
              },
            ],
            src: "5060:473:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "5617:194:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "5663:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "5672:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "5675:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "5665:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "5665:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "5665:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "5638:7:55",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "5647:9:55",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "5634:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5634:23:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "5659:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "5630:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5630:32:55",
                  },
                  nodeType: "YulIf",
                  src: "5627:52:55",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "5688:29:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "5707:9:55",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "5701:5:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5701:16:55",
                  },
                  variables: [
                    {
                      name: "value",
                      nodeType: "YulTypedName",
                      src: "5692:5:55",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "5765:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "5774:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "5777:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "5767:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "5767:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "5767:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "5739:5:55",
                          },
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "5750:5:55",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "5757:4:55",
                                type: "",
                                value: "0xff",
                              },
                            ],
                            functionName: {
                              name: "and",
                              nodeType: "YulIdentifier",
                              src: "5746:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "5746:16:55",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "5736:2:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5736:27:55",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "5729:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5729:35:55",
                  },
                  nodeType: "YulIf",
                  src: "5726:55:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "5790:15:55",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "5800:5:55",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "5790:6:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_uint8_fromMemory",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "5583:9:55",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "5594:7:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "5606:6:55",
                type: "",
              },
            ],
            src: "5538:273:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "5981:218:55",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "5991:26:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "6003:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6014:2:55",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "5999:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5999:18:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "5991:4:55",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "6026:29:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "6044:3:55",
                            type: "",
                            value: "160",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "6049:1:55",
                            type: "",
                            value: "1",
                          },
                        ],
                        functionName: {
                          name: "shl",
                          nodeType: "YulIdentifier",
                          src: "6040:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6040:11:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6053:1:55",
                        type: "",
                        value: "1",
                      },
                    ],
                    functionName: {
                      name: "sub",
                      nodeType: "YulIdentifier",
                      src: "6036:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6036:19:55",
                  },
                  variables: [
                    {
                      name: "_1",
                      nodeType: "YulTypedName",
                      src: "6030:2:55",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "6071:9:55",
                      },
                      {
                        arguments: [
                          {
                            name: "value0",
                            nodeType: "YulIdentifier",
                            src: "6086:6:55",
                          },
                          {
                            name: "_1",
                            nodeType: "YulIdentifier",
                            src: "6094:2:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "6082:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6082:15:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "6064:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6064:34:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6064:34:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "6118:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "6129:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "6114:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6114:18:55",
                      },
                      {
                        arguments: [
                          {
                            name: "value1",
                            nodeType: "YulIdentifier",
                            src: "6138:6:55",
                          },
                          {
                            name: "_1",
                            nodeType: "YulIdentifier",
                            src: "6146:2:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "6134:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6134:15:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "6107:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6107:43:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6107:43:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "6170:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "6181:2:55",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "6166:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6166:18:55",
                      },
                      {
                        name: "value2",
                        nodeType: "YulIdentifier",
                        src: "6186:6:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "6159:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6159:34:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6159:34:55",
                },
              ],
            },
            name: "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "5934:9:55",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "5945:6:55",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "5953:6:55",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "5961:6:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "5972:4:55",
                type: "",
              },
            ],
            src: "5816:383:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "6282:167:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "6328:16:55",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "6337:1:55",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "6340:1:55",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "6330:6:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "6330:12:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "6330:12:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "6303:7:55",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "6312:9:55",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "6299:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6299:23:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6324:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "6295:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6295:32:55",
                  },
                  nodeType: "YulIf",
                  src: "6292:52:55",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "6353:29:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "6372:9:55",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "6366:5:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6366:16:55",
                  },
                  variables: [
                    {
                      name: "value",
                      nodeType: "YulTypedName",
                      src: "6357:5:55",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "6413:5:55",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_bool",
                      nodeType: "YulIdentifier",
                      src: "6391:21:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6391:28:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6391:28:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "6428:15:55",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "6438:5:55",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "6428:6:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_bool_fromMemory",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "6248:9:55",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "6259:7:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "6271:6:55",
                type: "",
              },
            ],
            src: "6204:245:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "6583:145:55",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "6593:26:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "6605:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6616:2:55",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "6601:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6601:18:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "6593:4:55",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "6635:9:55",
                      },
                      {
                        arguments: [
                          {
                            name: "value0",
                            nodeType: "YulIdentifier",
                            src: "6650:6:55",
                          },
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "6666:3:55",
                                    type: "",
                                    value: "160",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "6671:1:55",
                                    type: "",
                                    value: "1",
                                  },
                                ],
                                functionName: {
                                  name: "shl",
                                  nodeType: "YulIdentifier",
                                  src: "6662:3:55",
                                },
                                nodeType: "YulFunctionCall",
                                src: "6662:11:55",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "6675:1:55",
                                type: "",
                                value: "1",
                              },
                            ],
                            functionName: {
                              name: "sub",
                              nodeType: "YulIdentifier",
                              src: "6658:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "6658:19:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "6646:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6646:32:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "6628:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6628:51:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6628:51:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "6699:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "6710:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "6695:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6695:18:55",
                      },
                      {
                        name: "value1",
                        nodeType: "YulIdentifier",
                        src: "6715:6:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "6688:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6688:34:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6688:34:55",
                },
              ],
            },
            name: "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "6544:9:55",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "6555:6:55",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "6563:6:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "6574:4:55",
                type: "",
              },
            ],
            src: "6454:274:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "6862:119:55",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "6872:26:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "6884:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6895:2:55",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "6880:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6880:18:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "6872:4:55",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "6914:9:55",
                      },
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "6925:6:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "6907:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6907:25:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6907:25:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "6952:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "6963:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "6948:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6948:18:55",
                      },
                      {
                        name: "value1",
                        nodeType: "YulIdentifier",
                        src: "6968:6:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "6941:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6941:34:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6941:34:55",
                },
              ],
            },
            name: "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "6823:9:55",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "6834:6:55",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "6842:6:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "6853:4:55",
                type: "",
              },
            ],
            src: "6733:248:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "7160:228:55",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "7177:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7188:2:55",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "7170:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7170:21:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "7170:21:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "7211:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "7222:2:55",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "7207:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "7207:18:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7227:2:55",
                        type: "",
                        value: "38",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "7200:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7200:30:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "7200:30:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "7250:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "7261:2:55",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "7246:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "7246:18:55",
                      },
                      {
                        hexValue:
                          "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "7266:34:55",
                        type: "",
                        value: "Ownable: new owner is the zero a",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "7239:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7239:62:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "7239:62:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "7321:9:55",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "7332:2:55",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "7317:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "7317:18:55",
                      },
                      {
                        hexValue: "646472657373",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "7337:8:55",
                        type: "",
                        value: "ddress",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "7310:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7310:36:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "7310:36:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "7355:27:55",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "7367:9:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7378:3:55",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "7363:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7363:19:55",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "7355:4:55",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "7137:9:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "7151:4:55",
                type: "",
              },
            ],
            src: "6986:402:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "7440:148:55",
              statements: [
                {
                  nodeType: "YulVariableDeclaration",
                  src: "7450:23:55",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "7465:1:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7468:4:55",
                        type: "",
                        value: "0xff",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "7461:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7461:12:55",
                  },
                  variables: [
                    {
                      name: "x_1",
                      nodeType: "YulTypedName",
                      src: "7454:3:55",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "7482:23:55",
                  value: {
                    arguments: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "7497:1:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7500:4:55",
                        type: "",
                        value: "0xff",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "7493:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7493:12:55",
                  },
                  variables: [
                    {
                      name: "y_1",
                      nodeType: "YulTypedName",
                      src: "7486:3:55",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "7530:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "7532:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "7532:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "7532:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "x_1",
                        nodeType: "YulIdentifier",
                        src: "7520:3:55",
                      },
                      {
                        name: "y_1",
                        nodeType: "YulIdentifier",
                        src: "7525:3:55",
                      },
                    ],
                    functionName: {
                      name: "lt",
                      nodeType: "YulIdentifier",
                      src: "7517:2:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7517:12:55",
                  },
                  nodeType: "YulIf",
                  src: "7514:38:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "7561:21:55",
                  value: {
                    arguments: [
                      {
                        name: "x_1",
                        nodeType: "YulIdentifier",
                        src: "7573:3:55",
                      },
                      {
                        name: "y_1",
                        nodeType: "YulIdentifier",
                        src: "7578:3:55",
                      },
                    ],
                    functionName: {
                      name: "sub",
                      nodeType: "YulIdentifier",
                      src: "7569:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7569:13:55",
                  },
                  variableNames: [
                    {
                      name: "diff",
                      nodeType: "YulIdentifier",
                      src: "7561:4:55",
                    },
                  ],
                },
              ],
            },
            name: "checked_sub_t_uint8",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "7422:1:55",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "7425:1:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "diff",
                nodeType: "YulTypedName",
                src: "7431:4:55",
                type: "",
              },
            ],
            src: "7393:195:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "7657:358:55",
              statements: [
                {
                  nodeType: "YulVariableDeclaration",
                  src: "7667:16:55",
                  value: {
                    kind: "number",
                    nodeType: "YulLiteral",
                    src: "7682:1:55",
                    type: "",
                    value: "1",
                  },
                  variables: [
                    {
                      name: "power_1",
                      nodeType: "YulTypedName",
                      src: "7671:7:55",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "7692:16:55",
                  value: {
                    name: "power_1",
                    nodeType: "YulIdentifier",
                    src: "7701:7:55",
                  },
                  variableNames: [
                    {
                      name: "power",
                      nodeType: "YulIdentifier",
                      src: "7692:5:55",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "7717:13:55",
                  value: {
                    name: "_base",
                    nodeType: "YulIdentifier",
                    src: "7725:5:55",
                  },
                  variableNames: [
                    {
                      name: "base",
                      nodeType: "YulIdentifier",
                      src: "7717:4:55",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "7781:228:55",
                    statements: [
                      {
                        body: {
                          nodeType: "YulBlock",
                          src: "7826:22:55",
                          statements: [
                            {
                              expression: {
                                arguments: [],
                                functionName: {
                                  name: "panic_error_0x11",
                                  nodeType: "YulIdentifier",
                                  src: "7828:16:55",
                                },
                                nodeType: "YulFunctionCall",
                                src: "7828:18:55",
                              },
                              nodeType: "YulExpressionStatement",
                              src: "7828:18:55",
                            },
                          ],
                        },
                        condition: {
                          arguments: [
                            {
                              name: "base",
                              nodeType: "YulIdentifier",
                              src: "7801:4:55",
                            },
                            {
                              arguments: [
                                {
                                  arguments: [
                                    {
                                      kind: "number",
                                      nodeType: "YulLiteral",
                                      src: "7815:1:55",
                                      type: "",
                                      value: "0",
                                    },
                                  ],
                                  functionName: {
                                    name: "not",
                                    nodeType: "YulIdentifier",
                                    src: "7811:3:55",
                                  },
                                  nodeType: "YulFunctionCall",
                                  src: "7811:6:55",
                                },
                                {
                                  name: "base",
                                  nodeType: "YulIdentifier",
                                  src: "7819:4:55",
                                },
                              ],
                              functionName: {
                                name: "div",
                                nodeType: "YulIdentifier",
                                src: "7807:3:55",
                              },
                              nodeType: "YulFunctionCall",
                              src: "7807:17:55",
                            },
                          ],
                          functionName: {
                            name: "gt",
                            nodeType: "YulIdentifier",
                            src: "7798:2:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "7798:27:55",
                        },
                        nodeType: "YulIf",
                        src: "7795:53:55",
                      },
                      {
                        body: {
                          nodeType: "YulBlock",
                          src: "7887:29:55",
                          statements: [
                            {
                              nodeType: "YulAssignment",
                              src: "7889:25:55",
                              value: {
                                arguments: [
                                  {
                                    name: "power",
                                    nodeType: "YulIdentifier",
                                    src: "7902:5:55",
                                  },
                                  {
                                    name: "base",
                                    nodeType: "YulIdentifier",
                                    src: "7909:4:55",
                                  },
                                ],
                                functionName: {
                                  name: "mul",
                                  nodeType: "YulIdentifier",
                                  src: "7898:3:55",
                                },
                                nodeType: "YulFunctionCall",
                                src: "7898:16:55",
                              },
                              variableNames: [
                                {
                                  name: "power",
                                  nodeType: "YulIdentifier",
                                  src: "7889:5:55",
                                },
                              ],
                            },
                          ],
                        },
                        condition: {
                          arguments: [
                            {
                              name: "exponent",
                              nodeType: "YulIdentifier",
                              src: "7868:8:55",
                            },
                            {
                              name: "power_1",
                              nodeType: "YulIdentifier",
                              src: "7878:7:55",
                            },
                          ],
                          functionName: {
                            name: "and",
                            nodeType: "YulIdentifier",
                            src: "7864:3:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "7864:22:55",
                        },
                        nodeType: "YulIf",
                        src: "7861:55:55",
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "7929:23:55",
                        value: {
                          arguments: [
                            {
                              name: "base",
                              nodeType: "YulIdentifier",
                              src: "7941:4:55",
                            },
                            {
                              name: "base",
                              nodeType: "YulIdentifier",
                              src: "7947:4:55",
                            },
                          ],
                          functionName: {
                            name: "mul",
                            nodeType: "YulIdentifier",
                            src: "7937:3:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "7937:15:55",
                        },
                        variableNames: [
                          {
                            name: "base",
                            nodeType: "YulIdentifier",
                            src: "7929:4:55",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "7965:34:55",
                        value: {
                          arguments: [
                            {
                              name: "power_1",
                              nodeType: "YulIdentifier",
                              src: "7981:7:55",
                            },
                            {
                              name: "exponent",
                              nodeType: "YulIdentifier",
                              src: "7990:8:55",
                            },
                          ],
                          functionName: {
                            name: "shr",
                            nodeType: "YulIdentifier",
                            src: "7977:3:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "7977:22:55",
                        },
                        variableNames: [
                          {
                            name: "exponent",
                            nodeType: "YulIdentifier",
                            src: "7965:8:55",
                          },
                        ],
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "exponent",
                        nodeType: "YulIdentifier",
                        src: "7750:8:55",
                      },
                      {
                        name: "power_1",
                        nodeType: "YulIdentifier",
                        src: "7760:7:55",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "7747:2:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7747:21:55",
                  },
                  nodeType: "YulForLoop",
                  post: {
                    nodeType: "YulBlock",
                    src: "7769:3:55",
                    statements: [],
                  },
                  pre: {
                    nodeType: "YulBlock",
                    src: "7743:3:55",
                    statements: [],
                  },
                  src: "7739:270:55",
                },
              ],
            },
            name: "checked_exp_helper",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "_base",
                nodeType: "YulTypedName",
                src: "7621:5:55",
                type: "",
              },
              {
                name: "exponent",
                nodeType: "YulTypedName",
                src: "7628:8:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "power",
                nodeType: "YulTypedName",
                src: "7641:5:55",
                type: "",
              },
              {
                name: "base",
                nodeType: "YulTypedName",
                src: "7648:4:55",
                type: "",
              },
            ],
            src: "7593:422:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "8079:747:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "8117:52:55",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "8131:10:55",
                        value: {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "8140:1:55",
                          type: "",
                          value: "1",
                        },
                        variableNames: [
                          {
                            name: "power",
                            nodeType: "YulIdentifier",
                            src: "8131:5:55",
                          },
                        ],
                      },
                      {
                        nodeType: "YulLeave",
                        src: "8154:5:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "exponent",
                        nodeType: "YulIdentifier",
                        src: "8099:8:55",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "8092:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8092:16:55",
                  },
                  nodeType: "YulIf",
                  src: "8089:80:55",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "8202:52:55",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "8216:10:55",
                        value: {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "8225:1:55",
                          type: "",
                          value: "0",
                        },
                        variableNames: [
                          {
                            name: "power",
                            nodeType: "YulIdentifier",
                            src: "8216:5:55",
                          },
                        ],
                      },
                      {
                        nodeType: "YulLeave",
                        src: "8239:5:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "base",
                        nodeType: "YulIdentifier",
                        src: "8188:4:55",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "8181:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8181:12:55",
                  },
                  nodeType: "YulIf",
                  src: "8178:76:55",
                },
                {
                  cases: [
                    {
                      body: {
                        nodeType: "YulBlock",
                        src: "8290:52:55",
                        statements: [
                          {
                            nodeType: "YulAssignment",
                            src: "8304:10:55",
                            value: {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "8313:1:55",
                              type: "",
                              value: "1",
                            },
                            variableNames: [
                              {
                                name: "power",
                                nodeType: "YulIdentifier",
                                src: "8304:5:55",
                              },
                            ],
                          },
                          {
                            nodeType: "YulLeave",
                            src: "8327:5:55",
                          },
                        ],
                      },
                      nodeType: "YulCase",
                      src: "8283:59:55",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8288:1:55",
                        type: "",
                        value: "1",
                      },
                    },
                    {
                      body: {
                        nodeType: "YulBlock",
                        src: "8358:123:55",
                        statements: [
                          {
                            body: {
                              nodeType: "YulBlock",
                              src: "8393:22:55",
                              statements: [
                                {
                                  expression: {
                                    arguments: [],
                                    functionName: {
                                      name: "panic_error_0x11",
                                      nodeType: "YulIdentifier",
                                      src: "8395:16:55",
                                    },
                                    nodeType: "YulFunctionCall",
                                    src: "8395:18:55",
                                  },
                                  nodeType: "YulExpressionStatement",
                                  src: "8395:18:55",
                                },
                              ],
                            },
                            condition: {
                              arguments: [
                                {
                                  name: "exponent",
                                  nodeType: "YulIdentifier",
                                  src: "8378:8:55",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "8388:3:55",
                                  type: "",
                                  value: "255",
                                },
                              ],
                              functionName: {
                                name: "gt",
                                nodeType: "YulIdentifier",
                                src: "8375:2:55",
                              },
                              nodeType: "YulFunctionCall",
                              src: "8375:17:55",
                            },
                            nodeType: "YulIf",
                            src: "8372:43:55",
                          },
                          {
                            nodeType: "YulAssignment",
                            src: "8428:25:55",
                            value: {
                              arguments: [
                                {
                                  name: "exponent",
                                  nodeType: "YulIdentifier",
                                  src: "8441:8:55",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "8451:1:55",
                                  type: "",
                                  value: "1",
                                },
                              ],
                              functionName: {
                                name: "shl",
                                nodeType: "YulIdentifier",
                                src: "8437:3:55",
                              },
                              nodeType: "YulFunctionCall",
                              src: "8437:16:55",
                            },
                            variableNames: [
                              {
                                name: "power",
                                nodeType: "YulIdentifier",
                                src: "8428:5:55",
                              },
                            ],
                          },
                          {
                            nodeType: "YulLeave",
                            src: "8466:5:55",
                          },
                        ],
                      },
                      nodeType: "YulCase",
                      src: "8351:130:55",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8356:1:55",
                        type: "",
                        value: "2",
                      },
                    },
                  ],
                  expression: {
                    name: "base",
                    nodeType: "YulIdentifier",
                    src: "8270:4:55",
                  },
                  nodeType: "YulSwitch",
                  src: "8263:218:55",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "8579:70:55",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "8593:28:55",
                        value: {
                          arguments: [
                            {
                              name: "base",
                              nodeType: "YulIdentifier",
                              src: "8606:4:55",
                            },
                            {
                              name: "exponent",
                              nodeType: "YulIdentifier",
                              src: "8612:8:55",
                            },
                          ],
                          functionName: {
                            name: "exp",
                            nodeType: "YulIdentifier",
                            src: "8602:3:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "8602:19:55",
                        },
                        variableNames: [
                          {
                            name: "power",
                            nodeType: "YulIdentifier",
                            src: "8593:5:55",
                          },
                        ],
                      },
                      {
                        nodeType: "YulLeave",
                        src: "8634:5:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "base",
                                nodeType: "YulIdentifier",
                                src: "8503:4:55",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "8509:2:55",
                                type: "",
                                value: "11",
                              },
                            ],
                            functionName: {
                              name: "lt",
                              nodeType: "YulIdentifier",
                              src: "8500:2:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "8500:12:55",
                          },
                          {
                            arguments: [
                              {
                                name: "exponent",
                                nodeType: "YulIdentifier",
                                src: "8517:8:55",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "8527:2:55",
                                type: "",
                                value: "78",
                              },
                            ],
                            functionName: {
                              name: "lt",
                              nodeType: "YulIdentifier",
                              src: "8514:2:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "8514:16:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "8496:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8496:35:55",
                      },
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "base",
                                nodeType: "YulIdentifier",
                                src: "8540:4:55",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "8546:3:55",
                                type: "",
                                value: "307",
                              },
                            ],
                            functionName: {
                              name: "lt",
                              nodeType: "YulIdentifier",
                              src: "8537:2:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "8537:13:55",
                          },
                          {
                            arguments: [
                              {
                                name: "exponent",
                                nodeType: "YulIdentifier",
                                src: "8555:8:55",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "8565:2:55",
                                type: "",
                                value: "32",
                              },
                            ],
                            functionName: {
                              name: "lt",
                              nodeType: "YulIdentifier",
                              src: "8552:2:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "8552:16:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "8533:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8533:36:55",
                      },
                    ],
                    functionName: {
                      name: "or",
                      nodeType: "YulIdentifier",
                      src: "8493:2:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8493:77:55",
                  },
                  nodeType: "YulIf",
                  src: "8490:159:55",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "8658:57:55",
                  value: {
                    arguments: [
                      {
                        name: "base",
                        nodeType: "YulIdentifier",
                        src: "8700:4:55",
                      },
                      {
                        name: "exponent",
                        nodeType: "YulIdentifier",
                        src: "8706:8:55",
                      },
                    ],
                    functionName: {
                      name: "checked_exp_helper",
                      nodeType: "YulIdentifier",
                      src: "8681:18:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8681:34:55",
                  },
                  variables: [
                    {
                      name: "power_1",
                      nodeType: "YulTypedName",
                      src: "8662:7:55",
                      type: "",
                    },
                    {
                      name: "base_1",
                      nodeType: "YulTypedName",
                      src: "8671:6:55",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "8760:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "8762:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "8762:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "8762:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "power_1",
                        nodeType: "YulIdentifier",
                        src: "8730:7:55",
                      },
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "8747:1:55",
                                type: "",
                                value: "0",
                              },
                            ],
                            functionName: {
                              name: "not",
                              nodeType: "YulIdentifier",
                              src: "8743:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "8743:6:55",
                          },
                          {
                            name: "base_1",
                            nodeType: "YulIdentifier",
                            src: "8751:6:55",
                          },
                        ],
                        functionName: {
                          name: "div",
                          nodeType: "YulIdentifier",
                          src: "8739:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8739:19:55",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "8727:2:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8727:32:55",
                  },
                  nodeType: "YulIf",
                  src: "8724:58:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "8791:29:55",
                  value: {
                    arguments: [
                      {
                        name: "power_1",
                        nodeType: "YulIdentifier",
                        src: "8804:7:55",
                      },
                      {
                        name: "base_1",
                        nodeType: "YulIdentifier",
                        src: "8813:6:55",
                      },
                    ],
                    functionName: {
                      name: "mul",
                      nodeType: "YulIdentifier",
                      src: "8800:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8800:20:55",
                  },
                  variableNames: [
                    {
                      name: "power",
                      nodeType: "YulIdentifier",
                      src: "8791:5:55",
                    },
                  ],
                },
              ],
            },
            name: "checked_exp_unsigned",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "base",
                nodeType: "YulTypedName",
                src: "8050:4:55",
                type: "",
              },
              {
                name: "exponent",
                nodeType: "YulTypedName",
                src: "8056:8:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "power",
                nodeType: "YulTypedName",
                src: "8069:5:55",
                type: "",
              },
            ],
            src: "8020:806:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "8901:61:55",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "8911:45:55",
                  value: {
                    arguments: [
                      {
                        name: "base",
                        nodeType: "YulIdentifier",
                        src: "8941:4:55",
                      },
                      {
                        name: "exponent",
                        nodeType: "YulIdentifier",
                        src: "8947:8:55",
                      },
                    ],
                    functionName: {
                      name: "checked_exp_unsigned",
                      nodeType: "YulIdentifier",
                      src: "8920:20:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8920:36:55",
                  },
                  variableNames: [
                    {
                      name: "power",
                      nodeType: "YulIdentifier",
                      src: "8911:5:55",
                    },
                  ],
                },
              ],
            },
            name: "checked_exp_t_uint256_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "base",
                nodeType: "YulTypedName",
                src: "8872:4:55",
                type: "",
              },
              {
                name: "exponent",
                nodeType: "YulTypedName",
                src: "8878:8:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "power",
                nodeType: "YulTypedName",
                src: "8891:5:55",
                type: "",
              },
            ],
            src: "8831:131:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "9018:502:55",
              statements: [
                {
                  nodeType: "YulVariableDeclaration",
                  src: "9028:29:55",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "9046:3:55",
                            type: "",
                            value: "255",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "9051:1:55",
                            type: "",
                            value: "1",
                          },
                        ],
                        functionName: {
                          name: "shl",
                          nodeType: "YulIdentifier",
                          src: "9042:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9042:11:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9055:1:55",
                        type: "",
                        value: "1",
                      },
                    ],
                    functionName: {
                      name: "sub",
                      nodeType: "YulIdentifier",
                      src: "9038:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9038:19:55",
                  },
                  variables: [
                    {
                      name: "_1",
                      nodeType: "YulTypedName",
                      src: "9032:2:55",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "9066:19:55",
                  value: {
                    arguments: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "9080:1:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9083:1:55",
                        type: "",
                        value: "0",
                      },
                    ],
                    functionName: {
                      name: "sgt",
                      nodeType: "YulIdentifier",
                      src: "9076:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9076:9:55",
                  },
                  variables: [
                    {
                      name: "_2",
                      nodeType: "YulTypedName",
                      src: "9070:2:55",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "9094:19:55",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "9108:1:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9111:1:55",
                        type: "",
                        value: "0",
                      },
                    ],
                    functionName: {
                      name: "sgt",
                      nodeType: "YulIdentifier",
                      src: "9104:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9104:9:55",
                  },
                  variables: [
                    {
                      name: "_3",
                      nodeType: "YulTypedName",
                      src: "9098:2:55",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "9161:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "9163:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "9163:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "9163:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "_3",
                            nodeType: "YulIdentifier",
                            src: "9133:2:55",
                          },
                          {
                            name: "_2",
                            nodeType: "YulIdentifier",
                            src: "9137:2:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "9129:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9129:11:55",
                      },
                      {
                        arguments: [
                          {
                            name: "x",
                            nodeType: "YulIdentifier",
                            src: "9145:1:55",
                          },
                          {
                            arguments: [
                              {
                                name: "_1",
                                nodeType: "YulIdentifier",
                                src: "9152:2:55",
                              },
                              {
                                name: "y",
                                nodeType: "YulIdentifier",
                                src: "9156:1:55",
                              },
                            ],
                            functionName: {
                              name: "div",
                              nodeType: "YulIdentifier",
                              src: "9148:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "9148:10:55",
                          },
                        ],
                        functionName: {
                          name: "gt",
                          nodeType: "YulIdentifier",
                          src: "9142:2:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9142:17:55",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "9125:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9125:35:55",
                  },
                  nodeType: "YulIf",
                  src: "9122:61:55",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "9192:21:55",
                  value: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9206:3:55",
                        type: "",
                        value: "255",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9211:1:55",
                        type: "",
                        value: "1",
                      },
                    ],
                    functionName: {
                      name: "shl",
                      nodeType: "YulIdentifier",
                      src: "9202:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9202:11:55",
                  },
                  variables: [
                    {
                      name: "_4",
                      nodeType: "YulTypedName",
                      src: "9196:2:55",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "9222:19:55",
                  value: {
                    arguments: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "9236:1:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9239:1:55",
                        type: "",
                        value: "0",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "9232:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9232:9:55",
                  },
                  variables: [
                    {
                      name: "_5",
                      nodeType: "YulTypedName",
                      src: "9226:2:55",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "9291:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "9293:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "9293:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "9293:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "_3",
                            nodeType: "YulIdentifier",
                            src: "9261:2:55",
                          },
                          {
                            name: "_5",
                            nodeType: "YulIdentifier",
                            src: "9265:2:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "9257:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9257:11:55",
                      },
                      {
                        arguments: [
                          {
                            name: "y",
                            nodeType: "YulIdentifier",
                            src: "9274:1:55",
                          },
                          {
                            arguments: [
                              {
                                name: "_4",
                                nodeType: "YulIdentifier",
                                src: "9282:2:55",
                              },
                              {
                                name: "x",
                                nodeType: "YulIdentifier",
                                src: "9286:1:55",
                              },
                            ],
                            functionName: {
                              name: "sdiv",
                              nodeType: "YulIdentifier",
                              src: "9277:4:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "9277:11:55",
                          },
                        ],
                        functionName: {
                          name: "slt",
                          nodeType: "YulIdentifier",
                          src: "9270:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9270:19:55",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "9253:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9253:37:55",
                  },
                  nodeType: "YulIf",
                  src: "9250:63:55",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "9322:19:55",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "9336:1:55",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9339:1:55",
                        type: "",
                        value: "0",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "9332:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9332:9:55",
                  },
                  variables: [
                    {
                      name: "_6",
                      nodeType: "YulTypedName",
                      src: "9326:2:55",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "9391:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "9393:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "9393:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "9393:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "_6",
                            nodeType: "YulIdentifier",
                            src: "9361:2:55",
                          },
                          {
                            name: "_2",
                            nodeType: "YulIdentifier",
                            src: "9365:2:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "9357:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9357:11:55",
                      },
                      {
                        arguments: [
                          {
                            name: "x",
                            nodeType: "YulIdentifier",
                            src: "9374:1:55",
                          },
                          {
                            arguments: [
                              {
                                name: "_4",
                                nodeType: "YulIdentifier",
                                src: "9382:2:55",
                              },
                              {
                                name: "y",
                                nodeType: "YulIdentifier",
                                src: "9386:1:55",
                              },
                            ],
                            functionName: {
                              name: "sdiv",
                              nodeType: "YulIdentifier",
                              src: "9377:4:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "9377:11:55",
                          },
                        ],
                        functionName: {
                          name: "slt",
                          nodeType: "YulIdentifier",
                          src: "9370:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9370:19:55",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "9353:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9353:37:55",
                  },
                  nodeType: "YulIf",
                  src: "9350:63:55",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "9463:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "9465:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "9465:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "9465:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "_6",
                            nodeType: "YulIdentifier",
                            src: "9433:2:55",
                          },
                          {
                            name: "_5",
                            nodeType: "YulIdentifier",
                            src: "9437:2:55",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "9429:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9429:11:55",
                      },
                      {
                        arguments: [
                          {
                            name: "x",
                            nodeType: "YulIdentifier",
                            src: "9446:1:55",
                          },
                          {
                            arguments: [
                              {
                                name: "_1",
                                nodeType: "YulIdentifier",
                                src: "9454:2:55",
                              },
                              {
                                name: "y",
                                nodeType: "YulIdentifier",
                                src: "9458:1:55",
                              },
                            ],
                            functionName: {
                              name: "sdiv",
                              nodeType: "YulIdentifier",
                              src: "9449:4:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "9449:11:55",
                          },
                        ],
                        functionName: {
                          name: "slt",
                          nodeType: "YulIdentifier",
                          src: "9442:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9442:19:55",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "9425:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9425:37:55",
                  },
                  nodeType: "YulIf",
                  src: "9422:63:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "9494:20:55",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "9509:1:55",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "9512:1:55",
                      },
                    ],
                    functionName: {
                      name: "mul",
                      nodeType: "YulIdentifier",
                      src: "9505:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9505:9:55",
                  },
                  variableNames: [
                    {
                      name: "product",
                      nodeType: "YulIdentifier",
                      src: "9494:7:55",
                    },
                  ],
                },
              ],
            },
            name: "checked_mul_t_int256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "8997:1:55",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "9000:1:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "product",
                nodeType: "YulTypedName",
                src: "9006:7:55",
                type: "",
              },
            ],
            src: "8967:553:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "9557:95:55",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9574:1:55",
                        type: "",
                        value: "0",
                      },
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "9581:3:55",
                            type: "",
                            value: "224",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "9586:10:55",
                            type: "",
                            value: "0x4e487b71",
                          },
                        ],
                        functionName: {
                          name: "shl",
                          nodeType: "YulIdentifier",
                          src: "9577:3:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9577:20:55",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "9567:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9567:31:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "9567:31:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9614:1:55",
                        type: "",
                        value: "4",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9617:4:55",
                        type: "",
                        value: "0x12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "9607:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9607:15:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "9607:15:55",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9638:1:55",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9641:4:55",
                        type: "",
                        value: "0x24",
                      },
                    ],
                    functionName: {
                      name: "revert",
                      nodeType: "YulIdentifier",
                      src: "9631:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9631:15:55",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "9631:15:55",
                },
              ],
            },
            name: "panic_error_0x12",
            nodeType: "YulFunctionDefinition",
            src: "9525:127:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "9702:148:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "9725:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x12",
                            nodeType: "YulIdentifier",
                            src: "9727:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "9727:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "9727:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "9722:1:55",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "9715:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9715:9:55",
                  },
                  nodeType: "YulIf",
                  src: "9712:35:55",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "9798:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "9800:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "9800:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "9800:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "x",
                            nodeType: "YulIdentifier",
                            src: "9766:1:55",
                          },
                          {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "9773:3:55",
                                type: "",
                                value: "255",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "9778:1:55",
                                type: "",
                                value: "1",
                              },
                            ],
                            functionName: {
                              name: "shl",
                              nodeType: "YulIdentifier",
                              src: "9769:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "9769:11:55",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "9763:2:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9763:18:55",
                      },
                      {
                        arguments: [
                          {
                            name: "y",
                            nodeType: "YulIdentifier",
                            src: "9786:1:55",
                          },
                          {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "9793:1:55",
                                type: "",
                                value: "0",
                              },
                            ],
                            functionName: {
                              name: "not",
                              nodeType: "YulIdentifier",
                              src: "9789:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "9789:6:55",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "9783:2:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9783:13:55",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "9759:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9759:38:55",
                  },
                  nodeType: "YulIf",
                  src: "9756:64:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "9829:15:55",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "9839:1:55",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "9842:1:55",
                      },
                    ],
                    functionName: {
                      name: "sdiv",
                      nodeType: "YulIdentifier",
                      src: "9834:4:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9834:10:55",
                  },
                  variableNames: [
                    {
                      name: "r",
                      nodeType: "YulIdentifier",
                      src: "9829:1:55",
                    },
                  ],
                },
              ],
            },
            name: "checked_div_t_int256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "9687:1:55",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "9690:1:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "r",
                nodeType: "YulTypedName",
                src: "9696:1:55",
                type: "",
              },
            ],
            src: "9657:193:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "9907:116:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "9966:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "9968:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "9968:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "9968:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "x",
                                nodeType: "YulIdentifier",
                                src: "9938:1:55",
                              },
                            ],
                            functionName: {
                              name: "iszero",
                              nodeType: "YulIdentifier",
                              src: "9931:6:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "9931:9:55",
                          },
                        ],
                        functionName: {
                          name: "iszero",
                          nodeType: "YulIdentifier",
                          src: "9924:6:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9924:17:55",
                      },
                      {
                        arguments: [
                          {
                            name: "y",
                            nodeType: "YulIdentifier",
                            src: "9946:1:55",
                          },
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "9957:1:55",
                                    type: "",
                                    value: "0",
                                  },
                                ],
                                functionName: {
                                  name: "not",
                                  nodeType: "YulIdentifier",
                                  src: "9953:3:55",
                                },
                                nodeType: "YulFunctionCall",
                                src: "9953:6:55",
                              },
                              {
                                name: "x",
                                nodeType: "YulIdentifier",
                                src: "9961:1:55",
                              },
                            ],
                            functionName: {
                              name: "div",
                              nodeType: "YulIdentifier",
                              src: "9949:3:55",
                            },
                            nodeType: "YulFunctionCall",
                            src: "9949:14:55",
                          },
                        ],
                        functionName: {
                          name: "gt",
                          nodeType: "YulIdentifier",
                          src: "9943:2:55",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9943:21:55",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "9920:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9920:45:55",
                  },
                  nodeType: "YulIf",
                  src: "9917:71:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "9997:20:55",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "10012:1:55",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "10015:1:55",
                      },
                    ],
                    functionName: {
                      name: "mul",
                      nodeType: "YulIdentifier",
                      src: "10008:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10008:9:55",
                  },
                  variableNames: [
                    {
                      name: "product",
                      nodeType: "YulIdentifier",
                      src: "9997:7:55",
                    },
                  ],
                },
              ],
            },
            name: "checked_mul_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "9886:1:55",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "9889:1:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "product",
                nodeType: "YulTypedName",
                src: "9895:7:55",
                type: "",
              },
            ],
            src: "9855:168:55",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "10074:74:55",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "10097:22:55",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x12",
                            nodeType: "YulIdentifier",
                            src: "10099:16:55",
                          },
                          nodeType: "YulFunctionCall",
                          src: "10099:18:55",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "10099:18:55",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "10094:1:55",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "10087:6:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10087:9:55",
                  },
                  nodeType: "YulIf",
                  src: "10084:35:55",
                },
                {
                  nodeType: "YulAssignment",
                  src: "10128:14:55",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "10137:1:55",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "10140:1:55",
                      },
                    ],
                    functionName: {
                      name: "div",
                      nodeType: "YulIdentifier",
                      src: "10133:3:55",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10133:9:55",
                  },
                  variableNames: [
                    {
                      name: "r",
                      nodeType: "YulIdentifier",
                      src: "10128:1:55",
                    },
                  ],
                },
              ],
            },
            name: "checked_div_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "10059:1:55",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "10062:1:55",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "r",
                nodeType: "YulTypedName",
                src: "10068:1:55",
                type: "",
              },
            ],
            src: "10028:120:55",
          },
        ],
      },
      contents:
        '{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_bool(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), "Ownable: caller is not the owner")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), "ReentrancyGuard: reentrant call")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), "Ownable: new owner is the zero a")\n        mstore(add(headStart, 96), "ddress")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_mul_t_int256(x, y) -> product\n    {\n        let _1 := sub(shl(255, 1), 1)\n        let _2 := sgt(y, 0)\n        let _3 := sgt(x, 0)\n        if and(and(_3, _2), gt(x, div(_1, y))) { panic_error_0x11() }\n        let _4 := shl(255, 1)\n        let _5 := slt(y, 0)\n        if and(and(_3, _5), slt(y, sdiv(_4, x))) { panic_error_0x11() }\n        let _6 := slt(x, 0)\n        if and(and(_6, _2), slt(x, sdiv(_4, y))) { panic_error_0x11() }\n        if and(and(_6, _5), slt(x, sdiv(_1, y))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_int256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        if and(eq(x, shl(255, 1)), eq(y, not(0))) { panic_error_0x11() }\n        r := sdiv(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n}',
      id: 55,
      language: "Yul",
      name: "#utility.yul",
    },
  ],
  sourceMap:
    "515:10129:46:-:0;;;1910:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:3;719:10:27;921:18:3;:32::i;:::-;1701:1:6;1806:22;;1989:12:46;:28;;-1:-1:-1;;;;;1989:28:46;;;-1:-1:-1;;;;;;1989:28:46;;;;;;;2027:15;:34;;;;;;;;;;;515:10129;;2270:187:3;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:3;;;-1:-1:-1;;;;;;2378:17:3;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:131:55:-;-1:-1:-1;;;;;89:31:55;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:393::-;237:6;245;298:2;286:9;277:7;273:23;269:32;266:52;;;314:1;311;304:12;266:52;346:9;340:16;365:31;390:5;365:31;:::i;:::-;465:2;450:18;;444:25;415:5;;-1:-1:-1;478:33:55;444:25;478:33;:::i;:::-;530:7;520:17;;;150:393;;;;;:::o;:::-;515:10129:46;;;;;;",
  deployedSourceMap:
    "515:10129:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2628:362;;;;;;;;;;;;;:::i;:::-;;;160:25:55;;;148:2;133:18;2628:362:46;;;;;;;;8069:201;;;;;;;;;;-1:-1:-1;8069:201:46;;;;;:::i;:::-;;:::i;:::-;;3045:435;;;;;;;;;;;;;:::i;1275:63::-;;;;;;;;;;-1:-1:-1;1275:63:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1259:14:55;;1252:22;1234:41;;1222:2;1207:18;1275:63:46;1094:187:55;1207:62:46;;;;;;;;;;-1:-1:-1;1207:62:46;;;;;:::i;:::-;;;;;;;;;;;;;;2131:113;;;;;;;;;;;;;:::i;7878:185::-;;;;;;;;;;-1:-1:-1;7878:185:46;;;;;:::i;:::-;;:::i;4575:2860::-;;;;;;:::i;:::-;;:::i;1668:101:3:-;;;;;;;;;;;;;:::i;1141:60:46:-;;;;;;;;;;-1:-1:-1;1141:60:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2163:25:55;;;2219:2;2204:18;;2197:34;;;;2247:18;;;2240:34;2305:2;2290:18;;2283:34;2150:3;2135:19;1141:60:46;1932:391:55;1036:85:3;;;;;;;;;;-1:-1:-1;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;1036:85;;;-1:-1:-1;;;;;2492:32:55;;;2474:51;;2462:2;2447:18;1036:85:3;2328:203:55;966:41:46;;;;;;;;;;-1:-1:-1;966:41:46;;;;;;1013:27;;;;;;;;;;-1:-1:-1;1013:27:46;;;;-1:-1:-1;;;;;1013:27:46;;;1046:38;;;;;;;;;;-1:-1:-1;1046:38:46;;;;-1:-1:-1;;;;;1046:38:46;;;8708:1934;;;;;;;;;;-1:-1:-1;8708:1934:46;;;;;:::i;:::-;;:::i;2375:180::-;;;;;;;;;;-1:-1:-1;2375:180:46;;;;;:::i;:::-;2476:7;2506:42;;;:27;:42;;;;;;;2375:180;3661:563;;;;;;;;;;;;;:::i;1918:198:3:-;;;;;;;;;;-1:-1:-1;1918:198:3;;;;;:::i;:::-;;:::i;7588:156:46:-;;;;;;;;;;-1:-1:-1;7588:156:46;;;;;:::i;:::-;;:::i;2628:362::-;2682:7;;;2735:219;2806:17;918:14:28;2791:12:46;:42;2735:219;;;2902:41;;;;:27;:41;;;;;;2886:57;;;;:::i;:::-;;-1:-1:-1;2847:14:46;;;;:::i;:::-;;;;2735:219;;;-1:-1:-1;2971:12:46;2628:362;-1:-1:-1;2628:362:46:o;8069:201::-;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;8196:46:46;;;::::1;;::::0;;;:31:::1;:46;::::0;;;;:67;;-1:-1:-1;;8196:67:46::1;::::0;::::1;;::::0;;;::::1;::::0;;8069:201::o;3045:435::-;3100:7;3137:20;3190:1;3160:27;:17;918:14:28;;827:112;3160:27:46;:31;;;;:::i;:::-;3137:54;;3119:336;3205:16;;3119:336;;3295:35;;;;:21;:35;;;;;:48;3363:15;-1:-1:-1;3274:171:46;;3418:12;3045:435;-1:-1:-1;3045:435:46:o;3274:171::-;3235:14;;;;:::i;:::-;;;;3119:336;;;;3472:1;3465:8;;3045:435;:::o;2131:113::-;2184:7;2210:27;:17;918:14:28;;827:112;2210:27:46;2203:34;;2131:113;:::o;7878:185::-;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;7993:16:46;-1:-1:-1;;;;;1822:27:46;::::1;1818:68;;1858:28;;-1:-1:-1::0;;;1858:28:46::1;;;;;;;;;;;1818:68;-1:-1:-1::0;8025:12:46::2;:31:::0;;-1:-1:-1;;;;;;8025:31:46::2;-1:-1:-1::0;;;;;8025:31:46;;;::::2;::::0;;;::::2;::::0;;7878:185::o;4575:2860::-;1744:1:6;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:6;;4718:2:55;2317:63:6;;;4700:21:55;4757:2;4737:18;;;4730:30;4796:33;4776:18;;;4769:61;4847:18;;2317:63:6;4516:355:55;2317:63:6;1744:1;2455:7;:18;4760:34:46::1;::::0;;;4958:26:::1;:24;:26::i;:::-;4746:238;;;;;;;;5074:26;5056:15;:44;5052:89;;;5121:20;;-1:-1:-1::0;;;5121:20:46::1;;;;;;;;;;;5052:89;-1:-1:-1::0;;;;;5197:53:46;::::1;;::::0;;;:31:::1;:53;::::0;;;;;::::1;;5192:105;;5271:26;;-1:-1:-1::0;;;5271:26:46::1;;;;;;;;;;;5192:105;5397:12;::::0;5557:27:::1;::::0;;-1:-1:-1;;;5557:27:46;;;;-1:-1:-1;;;;;5397:12:46;;::::1;::::0;5489:23;;5363:18:::1;::::0;5557:25;;::::1;::::0;::::1;::::0;:27:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:25;:27:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5532:52;;;;;;5594:24;5621:246;5672:150;5719:5;5746:9;-1:-1:-1::0;;;;;5746:18:46::1;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5788:5;-1:-1:-1::0;;;;;5788:14:46::1;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5672:25;:150::i;:::-;5850:7;5621:12;:246::i;:::-;5594:273;;5901:32;5882:16;:51;5878:109;;;5954:33;;-1:-1:-1::0;;;5954:33:46::1;;;;;;;;;;;5878:109;5998:21;6043:155;6093:51;6106:16;6124:19;6093:12;:51::i;:::-;6163:1;6182:2;6043:25;:155::i;:::-;5998:210;;6317:27;:53;6345:24;:22;:24::i;:::-;6317:53;;;;;;;;;;;;6264:34;:106;;;;:::i;:::-;6236:13;:134;6219:194;;;6388:25;;-1:-1:-1::0;;;6388:25:46::1;;;;;;;;;;;6219:194;6481:13;6424:27;:53;6452:24;:22;:24::i;:::-;6424:53;;;;;;;;;;;;:70;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;6581:34:46;::::1;6577:618;;6647:7;6635:9;:19;6631:396;;;6681:40;;-1:-1:-1::0;;;6681:40:46::1;;;;;;;;;;;6631:396;6760:15;::::0;:33:::1;::::0;-1:-1:-1;;;;;6760:15:46;;::::1;::::0;:33;::::1;;;::::0;6785:7;;6760:15:::1;:33:::0;:15;:33;6785:7;6760:15;:33;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;6961:51:46::1;::::0;6969:10:::1;::::0;6990:21:::1;6961:51:::0;::::1;;;::::0;::::1;::::0;;;6990:21;6969:10;6961:51;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;6577:618;;;7159:15;::::0;;7121:63:::1;::::0;-1:-1:-1;;;7121:63:46;;7147:10:::1;7121:63:::0;;::::1;6064:34:55::0;;;;-1:-1:-1;;;;;7159:15:46;;::::1;6114:18:55::0;;;6107:43;6166:18;;;6159:34;;;7086:20:46;;7121:25;;::::1;::::0;::::1;::::0;5999:18:55;;7121:63:46::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7043:152;6577:618;7248:37;::::0;-1:-1:-1;;;7248:37:46;;7259:10:::1;7248:37;::::0;::::1;6628:51:55::0;6695:18;;;6688:34;;;-1:-1:-1;;;;;7248:10:46;::::1;::::0;::::1;::::0;6601:18:55;;7248:37:46::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7350:20;-1:-1:-1::0;;;;;7300:128:46::1;7326:10;-1:-1:-1::0;;;;;7300:128:46::1;;7384:13;7411:7;7300:128;;;;;;6907:25:55::0;;;6963:2;6948:18;;6941:34;6895:2;6880:18;;6733:248;7300:128:46::1;;;;;;;;-1:-1:-1::0;;1701:1:6;2628:22;;-1:-1:-1;;;;;;;;;;4575:2860:46:o;1668:101:3:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;8708:1934:46:-;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;8931:27:46::1;8961:36:::0;;;:21:::1;:36;::::0;;;;:62;;9059:45:::1;::::0;::::1;::::0;9150:68:::1;::::0;::::1;::::0;9266:79:::1;::::0;;::::1;::::0;8961:62;;9059:45;;9446:24;;:60;::::1;;;-1:-1:-1::0;9486:20:46;;9446:60:::1;:106;;;;-1:-1:-1::0;9522:30:46;;9446:106:::1;:154;;;;-1:-1:-1::0;9568:32:46;;9446:154:::1;9429:211;;;9611:29;:17;1032:19:28::0;;1050:1;1032:19;;;945:123;9611:29:46::1;9788:18:::0;;;:159:::1;;-1:-1:-1::0;9823:18:46;;;::::1;::::0;:123:::1;;-1:-1:-1::0;9893:21:46::1;:40;9915:17;9931:1;9915:13:::0;:17:::1;:::i;:::-;9893:40;;;;;;;;;;;:53;;;9861:13;:85;9823:123;9771:222;;;9965:28;;-1:-1:-1::0;;;9965:28:46::1;;;;;;;;;;;9771:222;10063:14:::0;10059:51:::1;;10086:24;;-1:-1:-1::0;;;10086:24:46::1;;;;;;;;;;;10059:51;10124:24:::0;10120:71:::1;;10157:34;;-1:-1:-1::0;;;10157:34:46::1;;;;;;;;;;;10120:71;10205:26:::0;10201:87:::1;;10252:36;;-1:-1:-1::0;;;10252:36:46::1;;;;;;;;;;;10201:87;-1:-1:-1::0;;;10299:36:46::1;::::0;;;-1:-1:-1;10299:21:46::1;:36;::::0;;;;;:65;;;10374:45:::1;::::0;::::1;:57:::0;;;;10441:68:::1;::::0;::::1;:90:::0;10541:70:::1;;:94:::0;8708:1934::o;3661:563::-;3755:7;3776;3797;3818;3850:27;3880:24;:22;:24::i;:::-;3935:42;;;;:21;:42;;;;;:55;;4004:51;;;;4069:61;;;;4144:63;;;;;3935:55;;4004:51;;-1:-1:-1;4069:61:46;;-1:-1:-1;4144:63:46;-1:-1:-1;3661:563:46;-1:-1:-1;;3661:563:46:o;1918:198:3:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:3;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:3;;7188:2:55;1998:73:3::1;::::0;::::1;7170:21:55::0;7227:2;7207:18;;;7200:30;7266:34;7246:18;;;7239:62;-1:-1:-1;;;7317:18:55;;;7310:36;7363:19;;1998:73:3::1;6986:402:55::0;1998:73:3::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;7588:156:46:-;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;7700:15:46::1;:37:::0;;-1:-1:-1;;;;;;7700:37:46::1;-1:-1:-1::0;;;;;7700:37:46;;;::::1;::::0;;;::::1;::::0;;7588:156::o;1027:420:45:-;1154:6;1193:9;1176:26;;:14;:26;;;1172:246;;;1253:26;1265:14;1253:9;:26;:::i;:::-;1241:39;;1245:35;;1241:2;:39;:::i;:::-;1225:56;;:6;:56;:::i;:::-;1218:63;;;;1172:246;1319:9;1302:26;;:14;:26;;;1298:120;;;1379:26;1396:9;1379:14;:26;:::i;:::-;1367:39;;1371:35;;1367:2;:39;:::i;:::-;1351:56;;:6;:56;:::i;1298:120::-;-1:-1:-1;1434:6:45;1027:420;;;;;;:::o;3451:96:37:-;3509:7;3535:5;3539:1;3535;:5;:::i;:::-;3528:12;;3451:96;;;;;:::o;3836:::-;3894:7;3920:5;3924:1;3920;:5;:::i;2270:187:3:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:3;;;-1:-1:-1;;;;;;2378:17:3;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;196:131:55:-;-1:-1:-1;;;;;271:31:55;;261:42;;251:70;;317:1;314;307:12;332:118;418:5;411:13;404:21;397:5;394:32;384:60;;440:1;437;430:12;455:382;520:6;528;581:2;569:9;560:7;556:23;552:32;549:52;;;597:1;594;587:12;549:52;636:9;623:23;655:31;680:5;655:31;:::i;:::-;705:5;-1:-1:-1;762:2:55;747:18;;734:32;775:30;734:32;775:30;:::i;:::-;824:7;814:17;;;455:382;;;;;:::o;842:247::-;901:6;954:2;942:9;933:7;929:23;925:32;922:52;;;970:1;967;960:12;922:52;1009:9;996:23;1028:31;1053:5;1028:31;:::i;1286:180::-;1345:6;1398:2;1386:9;1377:7;1373:23;1369:32;1366:52;;;1414:1;1411;1404:12;1366:52;-1:-1:-1;1437:23:55;;1286:180;-1:-1:-1;1286:180:55:o;1471:456::-;1548:6;1556;1564;1617:2;1605:9;1596:7;1592:23;1588:32;1585:52;;;1633:1;1630;1623:12;1585:52;1672:9;1659:23;1691:31;1716:5;1691:31;:::i;:::-;1741:5;-1:-1:-1;1793:2:55;1778:18;;1765:32;;-1:-1:-1;1849:2:55;1834:18;;1821:32;1862:33;1821:32;1862:33;:::i;:::-;1914:7;1904:17;;;1471:456;;;;;:::o;2760:454::-;2855:6;2863;2871;2879;2887;2940:3;2928:9;2919:7;2915:23;2911:33;2908:53;;;2957:1;2954;2947:12;2908:53;-1:-1:-1;;2980:23:55;;;3050:2;3035:18;;3022:32;;-1:-1:-1;3101:2:55;3086:18;;3073:32;;3152:2;3137:18;;3124:32;;-1:-1:-1;3203:3:55;3188:19;3175:33;;-1:-1:-1;2760:454:55;-1:-1:-1;2760:454:55:o;3479:127::-;3540:10;3535:3;3531:20;3528:1;3521:31;3571:4;3568:1;3561:15;3595:4;3592:1;3585:15;3611:128;3651:3;3682:1;3678:6;3675:1;3672:13;3669:39;;;3688:18;;:::i;:::-;-1:-1:-1;3724:9:55;;3611:128::o;3744:135::-;3783:3;-1:-1:-1;;3804:17:55;;3801:43;;;3824:18;;:::i;:::-;-1:-1:-1;3871:1:55;3860:13;;3744:135::o;3884:356::-;4086:2;4068:21;;;4105:18;;;4098:30;4164:34;4159:2;4144:18;;4137:62;4231:2;4216:18;;3884:356::o;4245:125::-;4285:4;4313:1;4310;4307:8;4304:34;;;4318:18;;:::i;:::-;-1:-1:-1;4355:9:55;;4245:125::o;4375:136::-;4414:3;4442:5;4432:39;;4451:18;;:::i;:::-;-1:-1:-1;;;4487:18:55;;4375:136::o;4876:179::-;4954:13;;5007:22;4996:34;;4986:45;;4976:73;;5045:1;5042;5035:12;4976:73;4876:179;;;:::o;5060:473::-;5163:6;5171;5179;5187;5195;5248:3;5236:9;5227:7;5223:23;5219:33;5216:53;;;5265:1;5262;5255:12;5216:53;5288:39;5317:9;5288:39;:::i;:::-;5278:49;;5367:2;5356:9;5352:18;5346:25;5336:35;;5411:2;5400:9;5396:18;5390:25;5380:35;;5455:2;5444:9;5440:18;5434:25;5424:35;;5478:49;5522:3;5511:9;5507:19;5478:49;:::i;:::-;5468:59;;5060:473;;;;;;;;:::o;5538:273::-;5606:6;5659:2;5647:9;5638:7;5634:23;5630:32;5627:52;;;5675:1;5672;5665:12;5627:52;5707:9;5701:16;5757:4;5750:5;5746:16;5739:5;5736:27;5726:55;;5777:1;5774;5767:12;6204:245;6271:6;6324:2;6312:9;6303:7;6299:23;6295:32;6292:52;;;6340:1;6337;6330:12;6292:52;6372:9;6366:16;6391:28;6413:5;6391:28;:::i;7393:195::-;7431:4;7468;7465:1;7461:12;7500:4;7497:1;7493:12;7525:3;7520;7517:12;7514:38;;;7532:18;;:::i;:::-;7569:13;;;7393:195;-1:-1:-1;;;7393:195:55:o;7593:422::-;7682:1;7725:5;7682:1;7739:270;7760:7;7750:8;7747:21;7739:270;;;7819:4;7815:1;7811:6;7807:17;7801:4;7798:27;7795:53;;;7828:18;;:::i;:::-;7878:7;7868:8;7864:22;7861:55;;;7898:16;;;;7861:55;7977:22;;;;7937:15;;;;7739:270;;;7743:3;7593:422;;;;;:::o;8020:806::-;8069:5;8099:8;8089:80;;-1:-1:-1;8140:1:55;8154:5;;8089:80;8188:4;8178:76;;-1:-1:-1;8225:1:55;8239:5;;8178:76;8270:4;8288:1;8283:59;;;;8356:1;8351:130;;;;8263:218;;8283:59;8313:1;8304:10;;8327:5;;;8351:130;8388:3;8378:8;8375:17;8372:43;;;8395:18;;:::i;:::-;-1:-1:-1;;8451:1:55;8437:16;;8466:5;;8263:218;;8565:2;8555:8;8552:16;8546:3;8540:4;8537:13;8533:36;8527:2;8517:8;8514:16;8509:2;8503:4;8500:12;8496:35;8493:77;8490:159;;;-1:-1:-1;8602:19:55;;;8634:5;;8490:159;8681:34;8706:8;8700:4;8681:34;:::i;:::-;8751:6;8747:1;8743:6;8739:19;8730:7;8727:32;8724:58;;;8762:18;;:::i;:::-;8800:20;;8020:806;-1:-1:-1;;;8020:806:55:o;8831:131::-;8891:5;8920:36;8947:8;8941:4;8920:36;:::i;8967:553::-;9006:7;-1:-1:-1;;;;;9076:9:55;;;9104;;;9129:11;;;9148:10;;;9142:17;;9125:35;9122:61;;;9163:18;;:::i;:::-;-1:-1:-1;;;9239:1:55;9232:9;;9257:11;;;9277;;;9270:19;;9253:37;9250:63;;;9293:18;;:::i;:::-;9339:1;9336;9332:9;9322:19;;9386:1;9382:2;9377:11;9374:1;9370:19;9365:2;9361;9357:11;9353:37;9350:63;;;9393:18;;:::i;:::-;9458:1;9454:2;9449:11;9446:1;9442:19;9437:2;9433;9429:11;9425:37;9422:63;;;9465:18;;:::i;:::-;-1:-1:-1;;;9505:9:55;;;;;8967:553;-1:-1:-1;;;8967:553:55:o;9525:127::-;9586:10;9581:3;9577:20;9574:1;9567:31;9617:4;9614:1;9607:15;9641:4;9638:1;9631:15;9657:193;9696:1;9722;9712:35;;9727:18;;:::i;:::-;-1:-1:-1;;;9763:18:55;;-1:-1:-1;;9783:13:55;;9759:38;9756:64;;;9800:18;;:::i;:::-;-1:-1:-1;9834:10:55;;9657:193::o;9855:168::-;9895:7;9961:1;9957;9953:6;9949:14;9946:1;9943:21;9938:1;9931:9;9924:17;9920:45;9917:71;;;9968:18;;:::i;:::-;-1:-1:-1;10008:9:55;;9855:168::o;10028:120::-;10068:1;10094;10084:35;;10099:18;;:::i;:::-;-1:-1:-1;10133:9:55;;10028:120::o",
  source:
    '// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity ^0.8.11;\n\nimport "@openzeppelin/contracts/access/Ownable.sol";\nimport "@openzeppelin/contracts/token/ERC20/IERC20.sol";\nimport "@openzeppelin/contracts/utils/Counters.sol";\nimport "@openzeppelin/contracts/utils/math/SafeMath.sol";\nimport "@openzeppelin/contracts/security/ReentrancyGuard.sol";\nimport "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol";\nimport "../libraries/PriceConverter.sol";\nimport "../token/interfaces/IERC20Custom.sol";\n\ncontract Presale is Ownable, ReentrancyGuard {\n    using Counters for Counters.Counter;\n    using SafeMath for uint256;\n\n    struct PresaleData {\n        uint256 startingTime;\n        uint256 usdPrice;\n        uint256 minimumUSDPurchase;\n        uint256 maximumPresaleAmount;\n    }\n\n    event TokenPresold(\n        address indexed to,\n        address indexed paymentTokenAddress,\n        uint256 amount,\n        uint256 paymentTokenamount\n    );\n\n    Counters.Counter public totalPresaleRound;\n    address public tokenAddress;\n    address payable public presaleReceiver;\n\n    // Mapping `presaleRound` to its data details\n    mapping(uint256 => PresaleData) public presaleDetailsMapping;\n    mapping(uint256 => uint256) public presaleAmountByRoundMapping;\n    mapping(address => bool) public presaleTokenAvailabilityMapping;\n\n    error presaleRoundClosed();\n    error presaleTokenNotAvailable();\n    error presaleNativeTokenPaymentNotSufficient();\n    error presaleStartingTimeInvalid();\n    error presaleUSDPriceInvalid();\n    error presaleMimumumUSDPurchaseInvalid();\n    error presaleMaximumPresaleAmountInvalid();\n    error presaleUSDPurchaseNotSufficient();\n    error presaleAmountOverdemand();\n    error presaleTokenAddressInvalid();\n\n    modifier onlyValidTokens(address _tokenAddress) {\n        if (_tokenAddress == address(0)) revert presaleTokenAddressInvalid();\n        _;\n    }\n\n    constructor(address _tokenAddress, address payable _presaleReceiver) {\n        tokenAddress = _tokenAddress;\n        presaleReceiver = _presaleReceiver;\n    }\n\n    /**\n     * Get total amount of presale round\n     */\n    function getTotalPresaleRound() public view returns (uint256) {\n        return totalPresaleRound.current();\n    }\n\n    /**\n     * Get presale total amount By presale round\n     *\n     * @dev _presaleRound - The presale round chosen\n     */\n    function getPresaleAmountByRound(uint256 _presaleRound)\n        public\n        view\n        returns (uint256)\n    {\n        return presaleAmountByRoundMapping[_presaleRound];\n    }\n\n    /**\n     * Get total amount of presale from all rounds\n     */\n    function getTotalPresaleAmount() public view returns (uint256) {\n        uint256 totalPresale = 0;\n        for (\n            uint256 presaleRound = 0;\n            presaleRound < totalPresaleRound.current();\n            presaleRound++\n        ) {\n            totalPresale += presaleAmountByRoundMapping[presaleRound];\n        }\n\n        return totalPresale;\n    }\n\n    /**\n     * Get Current Presale Round\n     */\n    function getCurrentPresaleRound() public view returns (uint256) {\n        for (\n            uint256 presaleRound = totalPresaleRound.current() - 1;\n            presaleRound > 0;\n            presaleRound--\n        ) {\n            if (\n                presaleDetailsMapping[presaleRound].startingTime <=\n                block.timestamp\n            ) {\n                return presaleRound;\n            }\n        }\n\n        return 0;\n    }\n\n    /**\n     * Getting the Current Presale Details, including:\n     * - Starting Time\n     * - USD Price\n     * - Minimum USD Purchase\n     * - Maximum Presale Amount\n     */\n    function getCurrentPresaleDetails()\n        public\n        view\n        returns (\n            uint256,\n            uint256,\n            uint256,\n            uint256\n        )\n    {\n        uint256 currentPresaleRound = getCurrentPresaleRound();\n        return (\n            presaleDetailsMapping[currentPresaleRound].startingTime,\n            presaleDetailsMapping[currentPresaleRound].usdPrice,\n            presaleDetailsMapping[currentPresaleRound].minimumUSDPurchase,\n            presaleDetailsMapping[currentPresaleRound].maximumPresaleAmount\n        );\n    }\n\n    /**\n     * Execute the Presale of ALPS Token in exchange of other token\n     *\n     * @dev _paymentTokenAddress - Address of the token use to pay (address 0 is for native token)\n     * @dev _amount - Amount denominated in the `paymentTokenAddress` being paid\n     * @dev _aggregatorTokenAddress - Use to convert price with Chainlink\n     */\n    function presaleTokens(\n        address _paymentTokenAddress,\n        uint256 _amount,\n        address _aggregatorTokenAddress\n    ) public payable nonReentrant {\n        (\n            uint256 currentPresaleStartingTime,\n            uint256 currentPresalePrice,\n            uint256 currentPresaleMinimumUSDPurchase,\n            uint256 currentPresaleMaximumPresaleAmount\n        ) = getCurrentPresaleDetails();\n\n        // Check whether the presale round is still open\n        if (block.timestamp < currentPresaleStartingTime)\n            revert presaleRoundClosed();\n\n        // Check whether token is valid\n        if (!presaleTokenAvailabilityMapping[_paymentTokenAddress])\n            revert presaleTokenNotAvailable();\n\n        // Convert the token with Chainlink Price Feed\n        IERC20Custom token = IERC20Custom(tokenAddress);\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\n            _aggregatorTokenAddress\n        );\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        uint256 presaleUSDAmount = SafeMath.mul(\n            uint256(\n                PriceConverter.scalePrice(\n                    price,\n                    priceFeed.decimals(),\n                    token.decimals()\n                )\n            ),\n            _amount\n        );\n\n        if (presaleUSDAmount < currentPresaleMinimumUSDPurchase)\n            revert presaleUSDPurchaseNotSufficient();\n\n        uint256 presaleAmount = uint256(\n            PriceConverter.scalePrice(\n                int256(SafeMath.div(presaleUSDAmount, currentPresalePrice)),\n                0,\n                18\n            )\n        );\n\n        if (\n            presaleAmount >\n            currentPresaleMaximumPresaleAmount -\n                presaleAmountByRoundMapping[getCurrentPresaleRound()]\n        ) revert presaleAmountOverdemand();\n\n        presaleAmountByRoundMapping[getCurrentPresaleRound()] += presaleAmount;\n\n        // Receive the payment token and transfer it to another address\n        if (_paymentTokenAddress == address(0)) {\n            if (msg.value < _amount) {\n                revert presaleNativeTokenPaymentNotSufficient();\n            } else {\n                presaleReceiver.transfer(_amount);\n\n                // in case you deployed the contract with more ether than required,\n                // transfer the remaining ether back to yourself\n                payable(msg.sender).transfer(address(this).balance);\n            }\n        } else {\n            IERC20 paymentToken = IERC20(_paymentTokenAddress);\n            paymentToken.transferFrom(msg.sender, presaleReceiver, _amount);\n        }\n\n        // Send ALPS token to `msg.sender`\n        token.mint(msg.sender, presaleAmount);\n        emit TokenPresold(\n            msg.sender,\n            _paymentTokenAddress,\n            presaleAmount,\n            _amount\n        );\n    }\n\n    /**\n     * Set new Presale Receiver Address\n     *\n     * @dev _newPresaleReceiver - Address that\'ll receive the presale payment token\n     */\n    function setPresaleReceiver(address payable _newPresaleReceiver)\n        public\n        onlyOwner\n    {\n        presaleReceiver = _newPresaleReceiver;\n    }\n\n    /**\n     * Set new Presale Token Address\n     *\n     * @dev _newTokenAddress - Address of token that\'ll be presaled\n     */\n    function setPresaleTokenAddress(address _newTokenAddress)\n        public\n        onlyOwner\n        onlyValidTokens(_newTokenAddress)\n    {\n        tokenAddress = _newTokenAddress;\n    }\n\n    function setTokenAvailability(\n        address _tokenAddress,\n        bool _tokenAvailability\n    ) public onlyOwner {\n        presaleTokenAvailabilityMapping[_tokenAddress] = _tokenAvailability;\n    }\n\n    /**\n     * Creating/Updating a presale round information\n     *\n     * @dev _presaleRound - The presale round chosen\n     * @dev _startingTime - The starting Presale time\n     * @dev _usdPrice - The USD Price of the Token in certain Presale Round\n     * @dev _minimumUSDPurchase - The minimum USD amount to purchase the token\n     * @dev _maximumPresaleAmount - The maximum amount of token available for a presale round\n     */\n    function setPresaleRound(\n        uint256 _presaleRound,\n        uint256 _startingTime,\n        uint256 _usdPrice,\n        uint256 _minimumUSDPurchase,\n        uint256 _maximumPresaleAmount\n    ) public onlyOwner {\n        uint256 presaleStartingTime = presaleDetailsMapping[_presaleRound]\n            .startingTime;\n        uint256 presaleUSDPrice = presaleDetailsMapping[_presaleRound].usdPrice;\n        uint256 presaleMinimumUSDPurchase = presaleDetailsMapping[_presaleRound]\n            .minimumUSDPurchase;\n        uint256 presaleMaximumPresaleAmount = presaleDetailsMapping[\n            _presaleRound\n        ].maximumPresaleAmount;\n\n        // Increment the total round counter when new presale is created\n        if (\n            presaleStartingTime == 0 &&\n            presaleUSDPrice == 0 &&\n            presaleMinimumUSDPurchase == 0 &&\n            presaleMaximumPresaleAmount == 0\n        ) totalPresaleRound.increment();\n\n        // Starting time has to be:\n        // - larger than zero\n        // - larger than previous round starting time\n        if (\n            _startingTime == 0 ||\n            (_presaleRound != 0 &&\n                _startingTime <\n                presaleDetailsMapping[_presaleRound - 1].startingTime)\n        ) revert presaleStartingTimeInvalid();\n\n        // These values given must be larger than zero\n        if (_usdPrice == 0) revert presaleUSDPriceInvalid();\n        if (_minimumUSDPurchase == 0) revert presaleMimumumUSDPurchaseInvalid();\n        if (_maximumPresaleAmount == 0)\n            revert presaleMaximumPresaleAmountInvalid();\n\n        presaleDetailsMapping[_presaleRound].startingTime = _startingTime;\n        presaleDetailsMapping[_presaleRound].usdPrice = _usdPrice;\n        presaleDetailsMapping[_presaleRound]\n            .minimumUSDPurchase = _minimumUSDPurchase;\n        presaleDetailsMapping[_presaleRound]\n            .maximumPresaleAmount = _maximumPresaleAmount;\n    }\n}\n',
  sourcePath:
    "/Users/yosephks/Documents/GitHub/alpsfinance-smart-contracts/contracts/presale/Presale.sol",
  ast: {
    absolutePath: "project:/contracts/presale/Presale.sol",
    exportedSymbols: {
      AggregatorV3Interface: [45],
      Context: [5297],
      Counters: [5371],
      IERC20: [2884],
      IERC20Custom: [9421],
      Ownable: [532],
      Presale: [8249],
      PriceConverter: [7631],
      ReentrancyGuard: [742],
      SafeMath: [7057],
    },
    id: 8250,
    license: "AGPL-3.0",
    nodeType: "SourceUnit",
    nodes: [
      {
        id: 7633,
        literals: ["solidity", "^", "0.8", ".11"],
        nodeType: "PragmaDirective",
        src: "38:24:46",
      },
      {
        absolutePath: "@openzeppelin/contracts/access/Ownable.sol",
        file: "@openzeppelin/contracts/access/Ownable.sol",
        id: 7634,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8250,
        sourceUnit: 533,
        src: "64:52:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        file: "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        id: 7635,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8250,
        sourceUnit: 2885,
        src: "117:56:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/utils/Counters.sol",
        file: "@openzeppelin/contracts/utils/Counters.sol",
        id: 7636,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8250,
        sourceUnit: 5372,
        src: "174:52:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/utils/math/SafeMath.sol",
        file: "@openzeppelin/contracts/utils/math/SafeMath.sol",
        id: 7637,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8250,
        sourceUnit: 7058,
        src: "227:57:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        file: "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        id: 7638,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8250,
        sourceUnit: 743,
        src: "285:62:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath:
          "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        file: "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        id: 7639,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8250,
        sourceUnit: 46,
        src: "348:76:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "project:/contracts/libraries/PriceConverter.sol",
        file: "../libraries/PriceConverter.sol",
        id: 7640,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8250,
        sourceUnit: 7632,
        src: "425:41:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "project:/contracts/token/interfaces/IERC20Custom.sol",
        file: "../token/interfaces/IERC20Custom.sol",
        id: 7641,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8250,
        sourceUnit: 9422,
        src: "467:46:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 7642,
              name: "Ownable",
              nodeType: "IdentifierPath",
              referencedDeclaration: 532,
              src: "535:7:46",
            },
            id: 7643,
            nodeType: "InheritanceSpecifier",
            src: "535:7:46",
          },
          {
            baseName: {
              id: 7644,
              name: "ReentrancyGuard",
              nodeType: "IdentifierPath",
              referencedDeclaration: 742,
              src: "544:15:46",
            },
            id: 7645,
            nodeType: "InheritanceSpecifier",
            src: "544:15:46",
          },
        ],
        canonicalName: "Presale",
        contractDependencies: [],
        contractKind: "contract",
        fullyImplemented: true,
        id: 8249,
        linearizedBaseContracts: [8249, 742, 532, 5297],
        name: "Presale",
        nameLocation: "524:7:46",
        nodeType: "ContractDefinition",
        nodes: [
          {
            id: 7649,
            libraryName: {
              id: 7646,
              name: "Counters",
              nodeType: "IdentifierPath",
              referencedDeclaration: 5371,
              src: "572:8:46",
            },
            nodeType: "UsingForDirective",
            src: "566:36:46",
            typeName: {
              id: 7648,
              nodeType: "UserDefinedTypeName",
              pathNode: {
                id: 7647,
                name: "Counters.Counter",
                nodeType: "IdentifierPath",
                referencedDeclaration: 5303,
                src: "585:16:46",
              },
              referencedDeclaration: 5303,
              src: "585:16:46",
              typeDescriptions: {
                typeIdentifier: "t_struct$_Counter_$5303_storage_ptr",
                typeString: "struct Counters.Counter",
              },
            },
          },
          {
            id: 7652,
            libraryName: {
              id: 7650,
              name: "SafeMath",
              nodeType: "IdentifierPath",
              referencedDeclaration: 7057,
              src: "613:8:46",
            },
            nodeType: "UsingForDirective",
            src: "607:27:46",
            typeName: {
              id: 7651,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "626:7:46",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
          },
          {
            canonicalName: "Presale.PresaleData",
            id: 7661,
            members: [
              {
                constant: false,
                id: 7654,
                mutability: "mutable",
                name: "startingTime",
                nameLocation: "677:12:46",
                nodeType: "VariableDeclaration",
                scope: 7661,
                src: "669:20:46",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 7653,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "669:7:46",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 7656,
                mutability: "mutable",
                name: "usdPrice",
                nameLocation: "707:8:46",
                nodeType: "VariableDeclaration",
                scope: 7661,
                src: "699:16:46",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 7655,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "699:7:46",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 7658,
                mutability: "mutable",
                name: "minimumUSDPurchase",
                nameLocation: "733:18:46",
                nodeType: "VariableDeclaration",
                scope: 7661,
                src: "725:26:46",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 7657,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "725:7:46",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 7660,
                mutability: "mutable",
                name: "maximumPresaleAmount",
                nameLocation: "769:20:46",
                nodeType: "VariableDeclaration",
                scope: 7661,
                src: "761:28:46",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 7659,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "761:7:46",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
            ],
            name: "PresaleData",
            nameLocation: "647:11:46",
            nodeType: "StructDefinition",
            scope: 8249,
            src: "640:156:46",
            visibility: "public",
          },
          {
            anonymous: false,
            id: 7671,
            name: "TokenPresold",
            nameLocation: "808:12:46",
            nodeType: "EventDefinition",
            parameters: {
              id: 7670,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7663,
                  indexed: true,
                  mutability: "mutable",
                  name: "to",
                  nameLocation: "846:2:46",
                  nodeType: "VariableDeclaration",
                  scope: 7671,
                  src: "830:18:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7662,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "830:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7665,
                  indexed: true,
                  mutability: "mutable",
                  name: "paymentTokenAddress",
                  nameLocation: "874:19:46",
                  nodeType: "VariableDeclaration",
                  scope: 7671,
                  src: "858:35:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7664,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "858:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7667,
                  indexed: false,
                  mutability: "mutable",
                  name: "amount",
                  nameLocation: "911:6:46",
                  nodeType: "VariableDeclaration",
                  scope: 7671,
                  src: "903:14:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7666,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "903:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7669,
                  indexed: false,
                  mutability: "mutable",
                  name: "paymentTokenamount",
                  nameLocation: "935:18:46",
                  nodeType: "VariableDeclaration",
                  scope: 7671,
                  src: "927:26:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7668,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "927:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "820:139:46",
            },
            src: "802:158:46",
          },
          {
            constant: false,
            functionSelector: "962de5c0",
            id: 7674,
            mutability: "mutable",
            name: "totalPresaleRound",
            nameLocation: "990:17:46",
            nodeType: "VariableDeclaration",
            scope: 8249,
            src: "966:41:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_struct$_Counter_$5303_storage",
              typeString: "struct Counters.Counter",
            },
            typeName: {
              id: 7673,
              nodeType: "UserDefinedTypeName",
              pathNode: {
                id: 7672,
                name: "Counters.Counter",
                nodeType: "IdentifierPath",
                referencedDeclaration: 5303,
                src: "966:16:46",
              },
              referencedDeclaration: 5303,
              src: "966:16:46",
              typeDescriptions: {
                typeIdentifier: "t_struct$_Counter_$5303_storage_ptr",
                typeString: "struct Counters.Counter",
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "9d76ea58",
            id: 7676,
            mutability: "mutable",
            name: "tokenAddress",
            nameLocation: "1028:12:46",
            nodeType: "VariableDeclaration",
            scope: 8249,
            src: "1013:27:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_address",
              typeString: "address",
            },
            typeName: {
              id: 7675,
              name: "address",
              nodeType: "ElementaryTypeName",
              src: "1013:7:46",
              stateMutability: "nonpayable",
              typeDescriptions: {
                typeIdentifier: "t_address",
                typeString: "address",
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "c1436415",
            id: 7678,
            mutability: "mutable",
            name: "presaleReceiver",
            nameLocation: "1069:15:46",
            nodeType: "VariableDeclaration",
            scope: 8249,
            src: "1046:38:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_address_payable",
              typeString: "address payable",
            },
            typeName: {
              id: 7677,
              name: "address",
              nodeType: "ElementaryTypeName",
              src: "1046:15:46",
              stateMutability: "payable",
              typeDescriptions: {
                typeIdentifier: "t_address_payable",
                typeString: "address payable",
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "7b4d3585",
            id: 7683,
            mutability: "mutable",
            name: "presaleDetailsMapping",
            nameLocation: "1180:21:46",
            nodeType: "VariableDeclaration",
            scope: 8249,
            src: "1141:60:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier:
                "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
              typeString: "mapping(uint256 => struct Presale.PresaleData)",
            },
            typeName: {
              id: 7682,
              keyType: {
                id: 7679,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "1149:7:46",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "1141:31:46",
              typeDescriptions: {
                typeIdentifier:
                  "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                typeString: "mapping(uint256 => struct Presale.PresaleData)",
              },
              valueType: {
                id: 7681,
                nodeType: "UserDefinedTypeName",
                pathNode: {
                  id: 7680,
                  name: "PresaleData",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 7661,
                  src: "1160:11:46",
                },
                referencedDeclaration: 7661,
                src: "1160:11:46",
                typeDescriptions: {
                  typeIdentifier: "t_struct$_PresaleData_$7661_storage_ptr",
                  typeString: "struct Presale.PresaleData",
                },
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "392f911b",
            id: 7687,
            mutability: "mutable",
            name: "presaleAmountByRoundMapping",
            nameLocation: "1242:27:46",
            nodeType: "VariableDeclaration",
            scope: 8249,
            src: "1207:62:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
              typeString: "mapping(uint256 => uint256)",
            },
            typeName: {
              id: 7686,
              keyType: {
                id: 7684,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "1215:7:46",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "1207:27:46",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                typeString: "mapping(uint256 => uint256)",
              },
              valueType: {
                id: 7685,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "1226:7:46",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "2c49eba8",
            id: 7691,
            mutability: "mutable",
            name: "presaleTokenAvailabilityMapping",
            nameLocation: "1307:31:46",
            nodeType: "VariableDeclaration",
            scope: 8249,
            src: "1275:63:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_address_$_t_bool_$",
              typeString: "mapping(address => bool)",
            },
            typeName: {
              id: 7690,
              keyType: {
                id: 7688,
                name: "address",
                nodeType: "ElementaryTypeName",
                src: "1283:7:46",
                typeDescriptions: {
                  typeIdentifier: "t_address",
                  typeString: "address",
                },
              },
              nodeType: "Mapping",
              src: "1275:24:46",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_address_$_t_bool_$",
                typeString: "mapping(address => bool)",
              },
              valueType: {
                id: 7689,
                name: "bool",
                nodeType: "ElementaryTypeName",
                src: "1294:4:46",
                typeDescriptions: {
                  typeIdentifier: "t_bool",
                  typeString: "bool",
                },
              },
            },
            visibility: "public",
          },
          {
            id: 7693,
            name: "presaleRoundClosed",
            nameLocation: "1351:18:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7692,
              nodeType: "ParameterList",
              parameters: [],
              src: "1369:2:46",
            },
            src: "1345:27:46",
          },
          {
            id: 7695,
            name: "presaleTokenNotAvailable",
            nameLocation: "1383:24:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7694,
              nodeType: "ParameterList",
              parameters: [],
              src: "1407:2:46",
            },
            src: "1377:33:46",
          },
          {
            id: 7697,
            name: "presaleNativeTokenPaymentNotSufficient",
            nameLocation: "1421:38:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7696,
              nodeType: "ParameterList",
              parameters: [],
              src: "1459:2:46",
            },
            src: "1415:47:46",
          },
          {
            id: 7699,
            name: "presaleStartingTimeInvalid",
            nameLocation: "1473:26:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7698,
              nodeType: "ParameterList",
              parameters: [],
              src: "1499:2:46",
            },
            src: "1467:35:46",
          },
          {
            id: 7701,
            name: "presaleUSDPriceInvalid",
            nameLocation: "1513:22:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7700,
              nodeType: "ParameterList",
              parameters: [],
              src: "1535:2:46",
            },
            src: "1507:31:46",
          },
          {
            id: 7703,
            name: "presaleMimumumUSDPurchaseInvalid",
            nameLocation: "1549:32:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7702,
              nodeType: "ParameterList",
              parameters: [],
              src: "1581:2:46",
            },
            src: "1543:41:46",
          },
          {
            id: 7705,
            name: "presaleMaximumPresaleAmountInvalid",
            nameLocation: "1595:34:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7704,
              nodeType: "ParameterList",
              parameters: [],
              src: "1629:2:46",
            },
            src: "1589:43:46",
          },
          {
            id: 7707,
            name: "presaleUSDPurchaseNotSufficient",
            nameLocation: "1643:31:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7706,
              nodeType: "ParameterList",
              parameters: [],
              src: "1674:2:46",
            },
            src: "1637:40:46",
          },
          {
            id: 7709,
            name: "presaleAmountOverdemand",
            nameLocation: "1688:23:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7708,
              nodeType: "ParameterList",
              parameters: [],
              src: "1711:2:46",
            },
            src: "1682:32:46",
          },
          {
            id: 7711,
            name: "presaleTokenAddressInvalid",
            nameLocation: "1725:26:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7710,
              nodeType: "ParameterList",
              parameters: [],
              src: "1751:2:46",
            },
            src: "1719:35:46",
          },
          {
            body: {
              id: 7726,
              nodeType: "Block",
              src: "1808:96:46",
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    id: 7720,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 7715,
                      name: "_tokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7713,
                      src: "1822:13:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      arguments: [
                        {
                          hexValue: "30",
                          id: 7718,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "1847:1:46",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                          value: "0",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                        ],
                        id: 7717,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        nodeType: "ElementaryTypeNameExpression",
                        src: "1839:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_type$_t_address_$",
                          typeString: "type(address)",
                        },
                        typeName: {
                          id: 7716,
                          name: "address",
                          nodeType: "ElementaryTypeName",
                          src: "1839:7:46",
                          typeDescriptions: {},
                        },
                      },
                      id: 7719,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "typeConversion",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "1839:10:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "1822:27:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 7724,
                  nodeType: "IfStatement",
                  src: "1818:68:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 7721,
                        name: "presaleTokenAddressInvalid",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7711,
                        src: "1858:26:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 7722,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "1858:28:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 7723,
                    nodeType: "RevertStatement",
                    src: "1851:35:46",
                  },
                },
                {
                  id: 7725,
                  nodeType: "PlaceholderStatement",
                  src: "1896:1:46",
                },
              ],
            },
            id: 7727,
            name: "onlyValidTokens",
            nameLocation: "1769:15:46",
            nodeType: "ModifierDefinition",
            parameters: {
              id: 7714,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7713,
                  mutability: "mutable",
                  name: "_tokenAddress",
                  nameLocation: "1793:13:46",
                  nodeType: "VariableDeclaration",
                  scope: 7727,
                  src: "1785:21:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7712,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1785:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1784:23:46",
            },
            src: "1760:144:46",
            virtual: false,
            visibility: "internal",
          },
          {
            body: {
              id: 7742,
              nodeType: "Block",
              src: "1979:89:46",
              statements: [
                {
                  expression: {
                    id: 7736,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 7734,
                      name: "tokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7676,
                      src: "1989:12:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 7735,
                      name: "_tokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7729,
                      src: "2004:13:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "1989:28:46",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 7737,
                  nodeType: "ExpressionStatement",
                  src: "1989:28:46",
                },
                {
                  expression: {
                    id: 7740,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 7738,
                      name: "presaleReceiver",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7678,
                      src: "2027:15:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 7739,
                      name: "_presaleReceiver",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7731,
                      src: "2045:16:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    src: "2027:34:46",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  id: 7741,
                  nodeType: "ExpressionStatement",
                  src: "2027:34:46",
                },
              ],
            },
            id: 7743,
            implemented: true,
            kind: "constructor",
            modifiers: [],
            name: "",
            nameLocation: "-1:-1:-1",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7732,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7729,
                  mutability: "mutable",
                  name: "_tokenAddress",
                  nameLocation: "1930:13:46",
                  nodeType: "VariableDeclaration",
                  scope: 7743,
                  src: "1922:21:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7728,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1922:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7731,
                  mutability: "mutable",
                  name: "_presaleReceiver",
                  nameLocation: "1961:16:46",
                  nodeType: "VariableDeclaration",
                  scope: 7743,
                  src: "1945:32:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address_payable",
                    typeString: "address payable",
                  },
                  typeName: {
                    id: 7730,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1945:15:46",
                    stateMutability: "payable",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1921:57:46",
            },
            returnParameters: {
              id: 7733,
              nodeType: "ParameterList",
              parameters: [],
              src: "1979:0:46",
            },
            scope: 8249,
            src: "1910:158:46",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 7753,
              nodeType: "Block",
              src: "2193:51:46",
              statements: [
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 7749,
                        name: "totalPresaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7674,
                        src: "2210:17:46",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Counter_$5303_storage",
                          typeString: "struct Counters.Counter storage ref",
                        },
                      },
                      id: 7750,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "current",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 5315,
                      src: "2210:25:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$_t_struct$_Counter_$5303_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5303_storage_ptr_$",
                        typeString:
                          "function (struct Counters.Counter storage pointer) view returns (uint256)",
                      },
                    },
                    id: 7751,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2210:27:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 7748,
                  id: 7752,
                  nodeType: "Return",
                  src: "2203:34:46",
                },
              ],
            },
            documentation: {
              id: 7744,
              nodeType: "StructuredDocumentation",
              src: "2074:52:46",
              text: " Get total amount of presale round",
            },
            functionSelector: "398dcd26",
            id: 7754,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "getTotalPresaleRound",
            nameLocation: "2140:20:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7745,
              nodeType: "ParameterList",
              parameters: [],
              src: "2160:2:46",
            },
            returnParameters: {
              id: 7748,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7747,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7754,
                  src: "2184:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7746,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2184:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2183:9:46",
            },
            scope: 8249,
            src: "2131:113:46",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 7766,
              nodeType: "Block",
              src: "2489:66:46",
              statements: [
                {
                  expression: {
                    baseExpression: {
                      id: 7762,
                      name: "presaleAmountByRoundMapping",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7687,
                      src: "2506:27:46",
                      typeDescriptions: {
                        typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                        typeString: "mapping(uint256 => uint256)",
                      },
                    },
                    id: 7764,
                    indexExpression: {
                      id: 7763,
                      name: "_presaleRound",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7757,
                      src: "2534:13:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "2506:42:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 7761,
                  id: 7765,
                  nodeType: "Return",
                  src: "2499:49:46",
                },
              ],
            },
            documentation: {
              id: 7755,
              nodeType: "StructuredDocumentation",
              src: "2250:120:46",
              text: " Get presale total amount By presale round\n @dev _presaleRound - The presale round chosen",
            },
            functionSelector: "d958e001",
            id: 7767,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "getPresaleAmountByRound",
            nameLocation: "2384:23:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7758,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7757,
                  mutability: "mutable",
                  name: "_presaleRound",
                  nameLocation: "2416:13:46",
                  nodeType: "VariableDeclaration",
                  scope: 7767,
                  src: "2408:21:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7756,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2408:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2407:23:46",
            },
            returnParameters: {
              id: 7761,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7760,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7767,
                  src: "2476:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7759,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2476:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2475:9:46",
            },
            scope: 8249,
            src: "2375:180:46",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 7799,
              nodeType: "Block",
              src: "2691:299:46",
              statements: [
                {
                  assignments: [7774],
                  declarations: [
                    {
                      constant: false,
                      id: 7774,
                      mutability: "mutable",
                      name: "totalPresale",
                      nameLocation: "2709:12:46",
                      nodeType: "VariableDeclaration",
                      scope: 7799,
                      src: "2701:20:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7773,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "2701:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7776,
                  initialValue: {
                    hexValue: "30",
                    id: 7775,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "number",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "2724:1:46",
                    typeDescriptions: {
                      typeIdentifier: "t_rational_0_by_1",
                      typeString: "int_const 0",
                    },
                    value: "0",
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "2701:24:46",
                },
                {
                  body: {
                    id: 7795,
                    nodeType: "Block",
                    src: "2872:82:46",
                    statements: [
                      {
                        expression: {
                          id: 7793,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            id: 7789,
                            name: "totalPresale",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7774,
                            src: "2886:12:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "Assignment",
                          operator: "+=",
                          rightHandSide: {
                            baseExpression: {
                              id: 7790,
                              name: "presaleAmountByRoundMapping",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7687,
                              src: "2902:27:46",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_uint256_$_t_uint256_$",
                                typeString: "mapping(uint256 => uint256)",
                              },
                            },
                            id: 7792,
                            indexExpression: {
                              id: 7791,
                              name: "presaleRound",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7778,
                              src: "2930:12:46",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "2902:41:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "2886:57:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 7794,
                        nodeType: "ExpressionStatement",
                        src: "2886:57:46",
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 7785,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 7781,
                      name: "presaleRound",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7778,
                      src: "2791:12:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        expression: {
                          id: 7782,
                          name: "totalPresaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7674,
                          src: "2806:17:46",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Counter_$5303_storage",
                            typeString: "struct Counters.Counter storage ref",
                          },
                        },
                        id: 7783,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "current",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 5315,
                        src: "2806:25:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_view$_t_struct$_Counter_$5303_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5303_storage_ptr_$",
                          typeString:
                            "function (struct Counters.Counter storage pointer) view returns (uint256)",
                        },
                      },
                      id: 7784,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "2806:27:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "2791:42:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 7796,
                  initializationExpression: {
                    assignments: [7778],
                    declarations: [
                      {
                        constant: false,
                        id: 7778,
                        mutability: "mutable",
                        name: "presaleRound",
                        nameLocation: "2761:12:46",
                        nodeType: "VariableDeclaration",
                        scope: 7796,
                        src: "2753:20:46",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 7777,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "2753:7:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 7780,
                    initialValue: {
                      hexValue: "30",
                      id: 7779,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "2776:1:46",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "2753:24:46",
                  },
                  loopExpression: {
                    expression: {
                      id: 7787,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "++",
                      prefix: false,
                      src: "2847:14:46",
                      subExpression: {
                        id: 7786,
                        name: "presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7778,
                        src: "2847:12:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 7788,
                    nodeType: "ExpressionStatement",
                    src: "2847:14:46",
                  },
                  nodeType: "ForStatement",
                  src: "2735:219:46",
                },
                {
                  expression: {
                    id: 7797,
                    name: "totalPresale",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 7774,
                    src: "2971:12:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 7772,
                  id: 7798,
                  nodeType: "Return",
                  src: "2964:19:46",
                },
              ],
            },
            documentation: {
              id: 7768,
              nodeType: "StructuredDocumentation",
              src: "2561:62:46",
              text: " Get total amount of presale from all rounds",
            },
            functionSelector: "0aca575a",
            id: 7800,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "getTotalPresaleAmount",
            nameLocation: "2637:21:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7769,
              nodeType: "ParameterList",
              parameters: [],
              src: "2658:2:46",
            },
            returnParameters: {
              id: 7772,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7771,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7800,
                  src: "2682:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7770,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2682:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2681:9:46",
            },
            scope: 8249,
            src: "2628:362:46",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 7835,
              nodeType: "Block",
              src: "3109:371:46",
              statements: [
                {
                  body: {
                    id: 7831,
                    nodeType: "Block",
                    src: "3260:195:46",
                    statements: [
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 7826,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              baseExpression: {
                                id: 7820,
                                name: "presaleDetailsMapping",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 7683,
                                src: "3295:21:46",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                                  typeString:
                                    "mapping(uint256 => struct Presale.PresaleData storage ref)",
                                },
                              },
                              id: 7822,
                              indexExpression: {
                                id: 7821,
                                name: "presaleRound",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 7807,
                                src: "3317:12:46",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "3295:35:46",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_PresaleData_$7661_storage",
                                typeString:
                                  "struct Presale.PresaleData storage ref",
                              },
                            },
                            id: 7823,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "startingTime",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 7654,
                            src: "3295:48:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "<=",
                          rightExpression: {
                            expression: {
                              id: 7824,
                              name: "block",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967292,
                              src: "3363:5:46",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_block",
                                typeString: "block",
                              },
                            },
                            id: 7825,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "timestamp",
                            nodeType: "MemberAccess",
                            src: "3363:15:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "3295:83:46",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 7830,
                        nodeType: "IfStatement",
                        src: "3274:171:46",
                        trueBody: {
                          id: 7829,
                          nodeType: "Block",
                          src: "3393:52:46",
                          statements: [
                            {
                              expression: {
                                id: 7827,
                                name: "presaleRound",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 7807,
                                src: "3418:12:46",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              functionReturnParameters: 7805,
                              id: 7828,
                              nodeType: "Return",
                              src: "3411:19:46",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 7816,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 7814,
                      name: "presaleRound",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7807,
                      src: "3205:12:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: ">",
                    rightExpression: {
                      hexValue: "30",
                      id: 7815,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "3220:1:46",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "3205:16:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 7832,
                  initializationExpression: {
                    assignments: [7807],
                    declarations: [
                      {
                        constant: false,
                        id: 7807,
                        mutability: "mutable",
                        name: "presaleRound",
                        nameLocation: "3145:12:46",
                        nodeType: "VariableDeclaration",
                        scope: 7832,
                        src: "3137:20:46",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 7806,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "3137:7:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 7813,
                    initialValue: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 7812,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        arguments: [],
                        expression: {
                          argumentTypes: [],
                          expression: {
                            id: 7808,
                            name: "totalPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7674,
                            src: "3160:17:46",
                            typeDescriptions: {
                              typeIdentifier: "t_struct$_Counter_$5303_storage",
                              typeString: "struct Counters.Counter storage ref",
                            },
                          },
                          id: 7809,
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "current",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 5315,
                          src: "3160:25:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_view$_t_struct$_Counter_$5303_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5303_storage_ptr_$",
                            typeString:
                              "function (struct Counters.Counter storage pointer) view returns (uint256)",
                          },
                        },
                        id: 7810,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "3160:27:46",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "-",
                      rightExpression: {
                        hexValue: "31",
                        id: 7811,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "3190:1:46",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_1_by_1",
                          typeString: "int_const 1",
                        },
                        value: "1",
                      },
                      src: "3160:31:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "3137:54:46",
                  },
                  loopExpression: {
                    expression: {
                      id: 7818,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "--",
                      prefix: false,
                      src: "3235:14:46",
                      subExpression: {
                        id: 7817,
                        name: "presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7807,
                        src: "3235:12:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 7819,
                    nodeType: "ExpressionStatement",
                    src: "3235:14:46",
                  },
                  nodeType: "ForStatement",
                  src: "3119:336:46",
                },
                {
                  expression: {
                    hexValue: "30",
                    id: 7833,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "number",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "3472:1:46",
                    typeDescriptions: {
                      typeIdentifier: "t_rational_0_by_1",
                      typeString: "int_const 0",
                    },
                    value: "0",
                  },
                  functionReturnParameters: 7805,
                  id: 7834,
                  nodeType: "Return",
                  src: "3465:8:46",
                },
              ],
            },
            documentation: {
              id: 7801,
              nodeType: "StructuredDocumentation",
              src: "2996:44:46",
              text: " Get Current Presale Round",
            },
            functionSelector: "1c63f0ed",
            id: 7836,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "getCurrentPresaleRound",
            nameLocation: "3054:22:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7802,
              nodeType: "ParameterList",
              parameters: [],
              src: "3076:2:46",
            },
            returnParameters: {
              id: 7805,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7804,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7836,
                  src: "3100:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7803,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3100:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3099:9:46",
            },
            scope: 8249,
            src: "3045:435:46",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 7871,
              nodeType: "Block",
              src: "3840:384:46",
              statements: [
                {
                  assignments: [7849],
                  declarations: [
                    {
                      constant: false,
                      id: 7849,
                      mutability: "mutable",
                      name: "currentPresaleRound",
                      nameLocation: "3858:19:46",
                      nodeType: "VariableDeclaration",
                      scope: 7871,
                      src: "3850:27:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7848,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "3850:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7852,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 7850,
                      name: "getCurrentPresaleRound",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7836,
                      src: "3880:22:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$__$returns$_t_uint256_$",
                        typeString: "function () view returns (uint256)",
                      },
                    },
                    id: 7851,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3880:24:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "3850:54:46",
                },
                {
                  expression: {
                    components: [
                      {
                        expression: {
                          baseExpression: {
                            id: 7853,
                            name: "presaleDetailsMapping",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7683,
                            src: "3935:21:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                              typeString:
                                "mapping(uint256 => struct Presale.PresaleData storage ref)",
                            },
                          },
                          id: 7855,
                          indexExpression: {
                            id: 7854,
                            name: "currentPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7849,
                            src: "3957:19:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "3935:42:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_PresaleData_$7661_storage",
                            typeString:
                              "struct Presale.PresaleData storage ref",
                          },
                        },
                        id: 7856,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "startingTime",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 7654,
                        src: "3935:55:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          baseExpression: {
                            id: 7857,
                            name: "presaleDetailsMapping",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7683,
                            src: "4004:21:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                              typeString:
                                "mapping(uint256 => struct Presale.PresaleData storage ref)",
                            },
                          },
                          id: 7859,
                          indexExpression: {
                            id: 7858,
                            name: "currentPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7849,
                            src: "4026:19:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "4004:42:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_PresaleData_$7661_storage",
                            typeString:
                              "struct Presale.PresaleData storage ref",
                          },
                        },
                        id: 7860,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "usdPrice",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 7656,
                        src: "4004:51:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          baseExpression: {
                            id: 7861,
                            name: "presaleDetailsMapping",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7683,
                            src: "4069:21:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                              typeString:
                                "mapping(uint256 => struct Presale.PresaleData storage ref)",
                            },
                          },
                          id: 7863,
                          indexExpression: {
                            id: 7862,
                            name: "currentPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7849,
                            src: "4091:19:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "4069:42:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_PresaleData_$7661_storage",
                            typeString:
                              "struct Presale.PresaleData storage ref",
                          },
                        },
                        id: 7864,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "minimumUSDPurchase",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 7658,
                        src: "4069:61:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          baseExpression: {
                            id: 7865,
                            name: "presaleDetailsMapping",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7683,
                            src: "4144:21:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                              typeString:
                                "mapping(uint256 => struct Presale.PresaleData storage ref)",
                            },
                          },
                          id: 7867,
                          indexExpression: {
                            id: 7866,
                            name: "currentPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7849,
                            src: "4166:19:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "4144:42:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_PresaleData_$7661_storage",
                            typeString:
                              "struct Presale.PresaleData storage ref",
                          },
                        },
                        id: 7868,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "maximumPresaleAmount",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 7660,
                        src: "4144:63:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    id: 7869,
                    isConstant: false,
                    isInlineArray: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "TupleExpression",
                    src: "3921:296:46",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      typeString: "tuple(uint256,uint256,uint256,uint256)",
                    },
                  },
                  functionReturnParameters: 7847,
                  id: 7870,
                  nodeType: "Return",
                  src: "3914:303:46",
                },
              ],
            },
            documentation: {
              id: 7837,
              nodeType: "StructuredDocumentation",
              src: "3486:170:46",
              text: " Getting the Current Presale Details, including:\n - Starting Time\n - USD Price\n - Minimum USD Purchase\n - Maximum Presale Amount",
            },
            functionSelector: "ec2b3523",
            id: 7872,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "getCurrentPresaleDetails",
            nameLocation: "3670:24:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7838,
              nodeType: "ParameterList",
              parameters: [],
              src: "3694:2:46",
            },
            returnParameters: {
              id: 7847,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7840,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7872,
                  src: "3755:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7839,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3755:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7842,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7872,
                  src: "3776:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7841,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3776:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7844,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7872,
                  src: "3797:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7843,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3797:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7846,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7872,
                  src: "3818:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7845,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3818:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3741:94:46",
            },
            scope: 8249,
            src: "3661:563:46",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 8066,
              nodeType: "Block",
              src: "4736:2699:46",
              statements: [
                {
                  assignments: [7885, 7887, 7889, 7891],
                  declarations: [
                    {
                      constant: false,
                      id: 7885,
                      mutability: "mutable",
                      name: "currentPresaleStartingTime",
                      nameLocation: "4768:26:46",
                      nodeType: "VariableDeclaration",
                      scope: 8066,
                      src: "4760:34:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7884,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "4760:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                    {
                      constant: false,
                      id: 7887,
                      mutability: "mutable",
                      name: "currentPresalePrice",
                      nameLocation: "4816:19:46",
                      nodeType: "VariableDeclaration",
                      scope: 8066,
                      src: "4808:27:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7886,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "4808:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                    {
                      constant: false,
                      id: 7889,
                      mutability: "mutable",
                      name: "currentPresaleMinimumUSDPurchase",
                      nameLocation: "4857:32:46",
                      nodeType: "VariableDeclaration",
                      scope: 8066,
                      src: "4849:40:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7888,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "4849:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                    {
                      constant: false,
                      id: 7891,
                      mutability: "mutable",
                      name: "currentPresaleMaximumPresaleAmount",
                      nameLocation: "4911:34:46",
                      nodeType: "VariableDeclaration",
                      scope: 8066,
                      src: "4903:42:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7890,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "4903:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7894,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 7892,
                      name: "getCurrentPresaleDetails",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7872,
                      src: "4958:24:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        typeString:
                          "function () view returns (uint256,uint256,uint256,uint256)",
                      },
                    },
                    id: 7893,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4958:26:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier:
                        "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      typeString: "tuple(uint256,uint256,uint256,uint256)",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4746:238:46",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 7898,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 7895,
                        name: "block",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 4294967292,
                        src: "5056:5:46",
                        typeDescriptions: {
                          typeIdentifier: "t_magic_block",
                          typeString: "block",
                        },
                      },
                      id: 7896,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "timestamp",
                      nodeType: "MemberAccess",
                      src: "5056:15:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      id: 7897,
                      name: "currentPresaleStartingTime",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7885,
                      src: "5074:26:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "5056:44:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 7902,
                  nodeType: "IfStatement",
                  src: "5052:89:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 7899,
                        name: "presaleRoundClosed",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7693,
                        src: "5121:18:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 7900,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "5121:20:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 7901,
                    nodeType: "RevertStatement",
                    src: "5114:27:46",
                  },
                },
                {
                  condition: {
                    id: 7906,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "UnaryOperation",
                    operator: "!",
                    prefix: true,
                    src: "5196:54:46",
                    subExpression: {
                      baseExpression: {
                        id: 7903,
                        name: "presaleTokenAvailabilityMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7691,
                        src: "5197:31:46",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_address_$_t_bool_$",
                          typeString: "mapping(address => bool)",
                        },
                      },
                      id: 7905,
                      indexExpression: {
                        id: 7904,
                        name: "_paymentTokenAddress",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7875,
                        src: "5229:20:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "5197:53:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 7910,
                  nodeType: "IfStatement",
                  src: "5192:105:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 7907,
                        name: "presaleTokenNotAvailable",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7695,
                        src: "5271:24:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 7908,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "5271:26:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 7909,
                    nodeType: "RevertStatement",
                    src: "5264:33:46",
                  },
                },
                {
                  assignments: [7913],
                  declarations: [
                    {
                      constant: false,
                      id: 7913,
                      mutability: "mutable",
                      name: "token",
                      nameLocation: "5376:5:46",
                      nodeType: "VariableDeclaration",
                      scope: 8066,
                      src: "5363:18:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_IERC20Custom_$9421",
                        typeString: "contract IERC20Custom",
                      },
                      typeName: {
                        id: 7912,
                        nodeType: "UserDefinedTypeName",
                        pathNode: {
                          id: 7911,
                          name: "IERC20Custom",
                          nodeType: "IdentifierPath",
                          referencedDeclaration: 9421,
                          src: "5363:12:46",
                        },
                        referencedDeclaration: 9421,
                        src: "5363:12:46",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_IERC20Custom_$9421",
                          typeString: "contract IERC20Custom",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7917,
                  initialValue: {
                    arguments: [
                      {
                        id: 7915,
                        name: "tokenAddress",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7676,
                        src: "5397:12:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      id: 7914,
                      name: "IERC20Custom",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 9421,
                      src: "5384:12:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_type$_t_contract$_IERC20Custom_$9421_$",
                        typeString: "type(contract IERC20Custom)",
                      },
                    },
                    id: 7916,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "typeConversion",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5384:26:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_contract$_IERC20Custom_$9421",
                      typeString: "contract IERC20Custom",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "5363:47:46",
                },
                {
                  assignments: [7920],
                  declarations: [
                    {
                      constant: false,
                      id: 7920,
                      mutability: "mutable",
                      name: "priceFeed",
                      nameLocation: "5442:9:46",
                      nodeType: "VariableDeclaration",
                      scope: 8066,
                      src: "5420:31:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_AggregatorV3Interface_$45",
                        typeString: "contract AggregatorV3Interface",
                      },
                      typeName: {
                        id: 7919,
                        nodeType: "UserDefinedTypeName",
                        pathNode: {
                          id: 7918,
                          name: "AggregatorV3Interface",
                          nodeType: "IdentifierPath",
                          referencedDeclaration: 45,
                          src: "5420:21:46",
                        },
                        referencedDeclaration: 45,
                        src: "5420:21:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_contract$_AggregatorV3Interface_$45",
                          typeString: "contract AggregatorV3Interface",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7924,
                  initialValue: {
                    arguments: [
                      {
                        id: 7922,
                        name: "_aggregatorTokenAddress",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7879,
                        src: "5489:23:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      id: 7921,
                      name: "AggregatorV3Interface",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 45,
                      src: "5454:21:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                        typeString: "type(contract AggregatorV3Interface)",
                      },
                    },
                    id: 7923,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "typeConversion",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5454:68:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_contract$_AggregatorV3Interface_$45",
                      typeString: "contract AggregatorV3Interface",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "5420:102:46",
                },
                {
                  assignments: [null, 7926, null, null, null],
                  declarations: [
                    null,
                    {
                      constant: false,
                      id: 7926,
                      mutability: "mutable",
                      name: "price",
                      nameLocation: "5542:5:46",
                      nodeType: "VariableDeclaration",
                      scope: 8066,
                      src: "5535:12:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_int256",
                        typeString: "int256",
                      },
                      typeName: {
                        id: 7925,
                        name: "int256",
                        nodeType: "ElementaryTypeName",
                        src: "5535:6:46",
                        typeDescriptions: {
                          typeIdentifier: "t_int256",
                          typeString: "int256",
                        },
                      },
                      visibility: "internal",
                    },
                    null,
                    null,
                    null,
                  ],
                  id: 7930,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 7927,
                        name: "priceFeed",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7920,
                        src: "5557:9:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_contract$_AggregatorV3Interface_$45",
                          typeString: "contract AggregatorV3Interface",
                        },
                      },
                      id: 7928,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "latestRoundData",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 44,
                      src: "5557:25:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        typeString:
                          "function () view external returns (uint80,int256,uint256,uint256,uint80)",
                      },
                    },
                    id: 7929,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5557:27:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier:
                        "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      typeString: "tuple(uint80,int256,uint256,uint256,uint80)",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "5532:52:46",
                },
                {
                  assignments: [7932],
                  declarations: [
                    {
                      constant: false,
                      id: 7932,
                      mutability: "mutable",
                      name: "presaleUSDAmount",
                      nameLocation: "5602:16:46",
                      nodeType: "VariableDeclaration",
                      scope: 8066,
                      src: "5594:24:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7931,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "5594:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7950,
                  initialValue: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                id: 7939,
                                name: "price",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 7926,
                                src: "5719:5:46",
                                typeDescriptions: {
                                  typeIdentifier: "t_int256",
                                  typeString: "int256",
                                },
                              },
                              {
                                arguments: [],
                                expression: {
                                  argumentTypes: [],
                                  expression: {
                                    id: 7940,
                                    name: "priceFeed",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7920,
                                    src: "5746:9:46",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_contract$_AggregatorV3Interface_$45",
                                      typeString:
                                        "contract AggregatorV3Interface",
                                    },
                                  },
                                  id: 7941,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "decimals",
                                  nodeType: "MemberAccess",
                                  referencedDeclaration: 6,
                                  src: "5746:18:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_external_view$__$returns$_t_uint8_$",
                                    typeString:
                                      "function () view external returns (uint8)",
                                  },
                                },
                                id: 7942,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "5746:20:46",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_uint8",
                                  typeString: "uint8",
                                },
                              },
                              {
                                arguments: [],
                                expression: {
                                  argumentTypes: [],
                                  expression: {
                                    id: 7943,
                                    name: "token",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7913,
                                    src: "5788:5:46",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_contract$_IERC20Custom_$9421",
                                      typeString: "contract IERC20Custom",
                                    },
                                  },
                                  id: 7944,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "decimals",
                                  nodeType: "MemberAccess",
                                  referencedDeclaration: 9375,
                                  src: "5788:14:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_external_view$__$returns$_t_uint8_$",
                                    typeString:
                                      "function () view external returns (uint8)",
                                  },
                                },
                                id: 7945,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "5788:16:46",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_uint8",
                                  typeString: "uint8",
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_int256",
                                  typeString: "int256",
                                },
                                {
                                  typeIdentifier: "t_uint8",
                                  typeString: "uint8",
                                },
                                {
                                  typeIdentifier: "t_uint8",
                                  typeString: "uint8",
                                },
                              ],
                              expression: {
                                id: 7937,
                                name: "PriceConverter",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 7631,
                                src: "5672:14:46",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_type$_t_contract$_PriceConverter_$7631_$",
                                  typeString: "type(library PriceConverter)",
                                },
                              },
                              id: 7938,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "scalePrice",
                              nodeType: "MemberAccess",
                              referencedDeclaration: 7630,
                              src: "5672:25:46",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_function_internal_pure$_t_int256_$_t_uint8_$_t_uint8_$returns$_t_int256_$",
                                typeString:
                                  "function (int256,uint8,uint8) pure returns (int256)",
                              },
                            },
                            id: 7946,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "functionCall",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "5672:150:46",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_int256",
                              typeString: "int256",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_int256",
                              typeString: "int256",
                            },
                          ],
                          id: 7936,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "5647:7:46",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_uint256_$",
                            typeString: "type(uint256)",
                          },
                          typeName: {
                            id: 7935,
                            name: "uint256",
                            nodeType: "ElementaryTypeName",
                            src: "5647:7:46",
                            typeDescriptions: {},
                          },
                        },
                        id: 7947,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "5647:189:46",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        id: 7948,
                        name: "_amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7877,
                        src: "5850:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 7933,
                        name: "SafeMath",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7057,
                        src: "5621:8:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_SafeMath_$7057_$",
                          typeString: "type(library SafeMath)",
                        },
                      },
                      id: 7934,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "mul",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 6951,
                      src: "5621:12:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        typeString:
                          "function (uint256,uint256) pure returns (uint256)",
                      },
                    },
                    id: 7949,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5621:246:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "5594:273:46",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 7953,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 7951,
                      name: "presaleUSDAmount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7932,
                      src: "5882:16:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      id: 7952,
                      name: "currentPresaleMinimumUSDPurchase",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7889,
                      src: "5901:32:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "5882:51:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 7957,
                  nodeType: "IfStatement",
                  src: "5878:109:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 7954,
                        name: "presaleUSDPurchaseNotSufficient",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7707,
                        src: "5954:31:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 7955,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "5954:33:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 7956,
                    nodeType: "RevertStatement",
                    src: "5947:40:46",
                  },
                },
                {
                  assignments: [7959],
                  declarations: [
                    {
                      constant: false,
                      id: 7959,
                      mutability: "mutable",
                      name: "presaleAmount",
                      nameLocation: "6006:13:46",
                      nodeType: "VariableDeclaration",
                      scope: 8066,
                      src: "5998:21:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7958,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "5998:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7976,
                  initialValue: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    id: 7968,
                                    name: "presaleUSDAmount",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7932,
                                    src: "6106:16:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  {
                                    id: 7969,
                                    name: "currentPresalePrice",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7887,
                                    src: "6124:19:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                    {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  ],
                                  expression: {
                                    id: 7966,
                                    name: "SafeMath",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7057,
                                    src: "6093:8:46",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_type$_t_contract$_SafeMath_$7057_$",
                                      typeString: "type(library SafeMath)",
                                    },
                                  },
                                  id: 7967,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "div",
                                  nodeType: "MemberAccess",
                                  referencedDeclaration: 6966,
                                  src: "6093:12:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    typeString:
                                      "function (uint256,uint256) pure returns (uint256)",
                                  },
                                },
                                id: 7970,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "6093:51:46",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              ],
                              id: 7965,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "6086:6:46",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_int256_$",
                                typeString: "type(int256)",
                              },
                              typeName: {
                                id: 7964,
                                name: "int256",
                                nodeType: "ElementaryTypeName",
                                src: "6086:6:46",
                                typeDescriptions: {},
                              },
                            },
                            id: 7971,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "6086:59:46",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_int256",
                              typeString: "int256",
                            },
                          },
                          {
                            hexValue: "30",
                            id: 7972,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "6163:1:46",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_0_by_1",
                              typeString: "int_const 0",
                            },
                            value: "0",
                          },
                          {
                            hexValue: "3138",
                            id: 7973,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "6182:2:46",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_18_by_1",
                              typeString: "int_const 18",
                            },
                            value: "18",
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_int256",
                              typeString: "int256",
                            },
                            {
                              typeIdentifier: "t_rational_0_by_1",
                              typeString: "int_const 0",
                            },
                            {
                              typeIdentifier: "t_rational_18_by_1",
                              typeString: "int_const 18",
                            },
                          ],
                          expression: {
                            id: 7962,
                            name: "PriceConverter",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7631,
                            src: "6043:14:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_type$_t_contract$_PriceConverter_$7631_$",
                              typeString: "type(library PriceConverter)",
                            },
                          },
                          id: 7963,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "scalePrice",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 7630,
                          src: "6043:25:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_pure$_t_int256_$_t_uint8_$_t_uint8_$returns$_t_int256_$",
                            typeString:
                              "function (int256,uint8,uint8) pure returns (int256)",
                          },
                        },
                        id: 7974,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "6043:155:46",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_int256",
                          typeString: "int256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_int256",
                          typeString: "int256",
                        },
                      ],
                      id: 7961,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      nodeType: "ElementaryTypeNameExpression",
                      src: "6022:7:46",
                      typeDescriptions: {
                        typeIdentifier: "t_type$_t_uint256_$",
                        typeString: "type(uint256)",
                      },
                      typeName: {
                        id: 7960,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6022:7:46",
                        typeDescriptions: {},
                      },
                    },
                    id: 7975,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "typeConversion",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "6022:186:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "5998:210:46",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 7984,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 7977,
                      name: "presaleAmount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7959,
                      src: "6236:13:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: ">",
                    rightExpression: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 7983,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 7978,
                        name: "currentPresaleMaximumPresaleAmount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7891,
                        src: "6264:34:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "-",
                      rightExpression: {
                        baseExpression: {
                          id: 7979,
                          name: "presaleAmountByRoundMapping",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7687,
                          src: "6317:27:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_uint256_$",
                            typeString: "mapping(uint256 => uint256)",
                          },
                        },
                        id: 7982,
                        indexExpression: {
                          arguments: [],
                          expression: {
                            argumentTypes: [],
                            id: 7980,
                            name: "getCurrentPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7836,
                            src: "6345:22:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_internal_view$__$returns$_t_uint256_$",
                              typeString: "function () view returns (uint256)",
                            },
                          },
                          id: 7981,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "6345:24:46",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "6317:53:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "6264:106:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "6236:134:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 7988,
                  nodeType: "IfStatement",
                  src: "6219:194:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 7985,
                        name: "presaleAmountOverdemand",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7709,
                        src: "6388:23:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 7986,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "6388:25:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 7987,
                    nodeType: "RevertStatement",
                    src: "6381:32:46",
                  },
                },
                {
                  expression: {
                    id: 7994,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 7989,
                        name: "presaleAmountByRoundMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7687,
                        src: "6424:27:46",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                          typeString: "mapping(uint256 => uint256)",
                        },
                      },
                      id: 7992,
                      indexExpression: {
                        arguments: [],
                        expression: {
                          argumentTypes: [],
                          id: 7990,
                          name: "getCurrentPresaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7836,
                          src: "6452:22:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_view$__$returns$_t_uint256_$",
                            typeString: "function () view returns (uint256)",
                          },
                        },
                        id: 7991,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "6452:24:46",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "6424:53:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "+=",
                    rightHandSide: {
                      id: 7993,
                      name: "presaleAmount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7959,
                      src: "6481:13:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "6424:70:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 7995,
                  nodeType: "ExpressionStatement",
                  src: "6424:70:46",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    id: 8001,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 7996,
                      name: "_paymentTokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7875,
                      src: "6581:20:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      arguments: [
                        {
                          hexValue: "30",
                          id: 7999,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "6613:1:46",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                          value: "0",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                        ],
                        id: 7998,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        nodeType: "ElementaryTypeNameExpression",
                        src: "6605:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_type$_t_address_$",
                          typeString: "type(address)",
                        },
                        typeName: {
                          id: 7997,
                          name: "address",
                          nodeType: "ElementaryTypeName",
                          src: "6605:7:46",
                          typeDescriptions: {},
                        },
                      },
                      id: 8000,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "typeConversion",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "6605:10:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "6581:34:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  falseBody: {
                    id: 8048,
                    nodeType: "Block",
                    src: "7043:152:46",
                    statements: [
                      {
                        assignments: [8034],
                        declarations: [
                          {
                            constant: false,
                            id: 8034,
                            mutability: "mutable",
                            name: "paymentToken",
                            nameLocation: "7064:12:46",
                            nodeType: "VariableDeclaration",
                            scope: 8048,
                            src: "7057:19:46",
                            stateVariable: false,
                            storageLocation: "default",
                            typeDescriptions: {
                              typeIdentifier: "t_contract$_IERC20_$2884",
                              typeString: "contract IERC20",
                            },
                            typeName: {
                              id: 8033,
                              nodeType: "UserDefinedTypeName",
                              pathNode: {
                                id: 8032,
                                name: "IERC20",
                                nodeType: "IdentifierPath",
                                referencedDeclaration: 2884,
                                src: "7057:6:46",
                              },
                              referencedDeclaration: 2884,
                              src: "7057:6:46",
                              typeDescriptions: {
                                typeIdentifier: "t_contract$_IERC20_$2884",
                                typeString: "contract IERC20",
                              },
                            },
                            visibility: "internal",
                          },
                        ],
                        id: 8038,
                        initialValue: {
                          arguments: [
                            {
                              id: 8036,
                              name: "_paymentTokenAddress",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7875,
                              src: "7086:20:46",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            ],
                            id: 8035,
                            name: "IERC20",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2884,
                            src: "7079:6:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_type$_t_contract$_IERC20_$2884_$",
                              typeString: "type(contract IERC20)",
                            },
                          },
                          id: 8037,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "7079:28:46",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_contract$_IERC20_$2884",
                            typeString: "contract IERC20",
                          },
                        },
                        nodeType: "VariableDeclarationStatement",
                        src: "7057:50:46",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              expression: {
                                id: 8042,
                                name: "msg",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 4294967281,
                                src: "7147:3:46",
                                typeDescriptions: {
                                  typeIdentifier: "t_magic_message",
                                  typeString: "msg",
                                },
                              },
                              id: 8043,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "sender",
                              nodeType: "MemberAccess",
                              src: "7147:10:46",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            {
                              id: 8044,
                              name: "presaleReceiver",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7678,
                              src: "7159:15:46",
                              typeDescriptions: {
                                typeIdentifier: "t_address_payable",
                                typeString: "address payable",
                              },
                            },
                            {
                              id: 8045,
                              name: "_amount",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7877,
                              src: "7176:7:46",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                              {
                                typeIdentifier: "t_address_payable",
                                typeString: "address payable",
                              },
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            ],
                            expression: {
                              id: 8039,
                              name: "paymentToken",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 8034,
                              src: "7121:12:46",
                              typeDescriptions: {
                                typeIdentifier: "t_contract$_IERC20_$2884",
                                typeString: "contract IERC20",
                              },
                            },
                            id: 8041,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "transferFrom",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 2865,
                            src: "7121:25:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              typeString:
                                "function (address,address,uint256) external returns (bool)",
                            },
                          },
                          id: 8046,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "7121:63:46",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 8047,
                        nodeType: "ExpressionStatement",
                        src: "7121:63:46",
                      },
                    ],
                  },
                  id: 8049,
                  nodeType: "IfStatement",
                  src: "6577:618:46",
                  trueBody: {
                    id: 8031,
                    nodeType: "Block",
                    src: "6617:420:46",
                    statements: [
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 8005,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              id: 8002,
                              name: "msg",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967281,
                              src: "6635:3:46",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_message",
                                typeString: "msg",
                              },
                            },
                            id: 8003,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "value",
                            nodeType: "MemberAccess",
                            src: "6635:9:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "<",
                          rightExpression: {
                            id: 8004,
                            name: "_amount",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7877,
                            src: "6647:7:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "6635:19:46",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        falseBody: {
                          id: 8029,
                          nodeType: "Block",
                          src: "6742:285:46",
                          statements: [
                            {
                              expression: {
                                arguments: [
                                  {
                                    id: 8013,
                                    name: "_amount",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7877,
                                    src: "6785:7:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  ],
                                  expression: {
                                    id: 8010,
                                    name: "presaleReceiver",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7678,
                                    src: "6760:15:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_address_payable",
                                      typeString: "address payable",
                                    },
                                  },
                                  id: 8012,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "transfer",
                                  nodeType: "MemberAccess",
                                  src: "6760:24:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    typeString: "function (uint256)",
                                  },
                                },
                                id: 8014,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "6760:33:46",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_tuple$__$",
                                  typeString: "tuple()",
                                },
                              },
                              id: 8015,
                              nodeType: "ExpressionStatement",
                              src: "6760:33:46",
                            },
                            {
                              expression: {
                                arguments: [
                                  {
                                    expression: {
                                      arguments: [
                                        {
                                          id: 8024,
                                          name: "this",
                                          nodeType: "Identifier",
                                          overloadedDeclarations: [],
                                          referencedDeclaration: 4294967268,
                                          src: "6998:4:46",
                                          typeDescriptions: {
                                            typeIdentifier:
                                              "t_contract$_Presale_$8249",
                                            typeString: "contract Presale",
                                          },
                                        },
                                      ],
                                      expression: {
                                        argumentTypes: [
                                          {
                                            typeIdentifier:
                                              "t_contract$_Presale_$8249",
                                            typeString: "contract Presale",
                                          },
                                        ],
                                        id: 8023,
                                        isConstant: false,
                                        isLValue: false,
                                        isPure: true,
                                        lValueRequested: false,
                                        nodeType:
                                          "ElementaryTypeNameExpression",
                                        src: "6990:7:46",
                                        typeDescriptions: {
                                          typeIdentifier: "t_type$_t_address_$",
                                          typeString: "type(address)",
                                        },
                                        typeName: {
                                          id: 8022,
                                          name: "address",
                                          nodeType: "ElementaryTypeName",
                                          src: "6990:7:46",
                                          typeDescriptions: {},
                                        },
                                      },
                                      id: 8025,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: false,
                                      kind: "typeConversion",
                                      lValueRequested: false,
                                      names: [],
                                      nodeType: "FunctionCall",
                                      src: "6990:13:46",
                                      tryCall: false,
                                      typeDescriptions: {
                                        typeIdentifier: "t_address",
                                        typeString: "address",
                                      },
                                    },
                                    id: 8026,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    lValueRequested: false,
                                    memberName: "balance",
                                    nodeType: "MemberAccess",
                                    src: "6990:21:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  ],
                                  expression: {
                                    arguments: [
                                      {
                                        expression: {
                                          id: 8018,
                                          name: "msg",
                                          nodeType: "Identifier",
                                          overloadedDeclarations: [],
                                          referencedDeclaration: 4294967281,
                                          src: "6969:3:46",
                                          typeDescriptions: {
                                            typeIdentifier: "t_magic_message",
                                            typeString: "msg",
                                          },
                                        },
                                        id: 8019,
                                        isConstant: false,
                                        isLValue: false,
                                        isPure: false,
                                        lValueRequested: false,
                                        memberName: "sender",
                                        nodeType: "MemberAccess",
                                        src: "6969:10:46",
                                        typeDescriptions: {
                                          typeIdentifier: "t_address",
                                          typeString: "address",
                                        },
                                      },
                                    ],
                                    expression: {
                                      argumentTypes: [
                                        {
                                          typeIdentifier: "t_address",
                                          typeString: "address",
                                        },
                                      ],
                                      id: 8017,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: true,
                                      lValueRequested: false,
                                      nodeType: "ElementaryTypeNameExpression",
                                      src: "6961:8:46",
                                      typeDescriptions: {
                                        typeIdentifier:
                                          "t_type$_t_address_payable_$",
                                        typeString: "type(address payable)",
                                      },
                                      typeName: {
                                        id: 8016,
                                        name: "address",
                                        nodeType: "ElementaryTypeName",
                                        src: "6961:8:46",
                                        stateMutability: "payable",
                                        typeDescriptions: {},
                                      },
                                    },
                                    id: 8020,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    kind: "typeConversion",
                                    lValueRequested: false,
                                    names: [],
                                    nodeType: "FunctionCall",
                                    src: "6961:19:46",
                                    tryCall: false,
                                    typeDescriptions: {
                                      typeIdentifier: "t_address_payable",
                                      typeString: "address payable",
                                    },
                                  },
                                  id: 8021,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "transfer",
                                  nodeType: "MemberAccess",
                                  src: "6961:28:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    typeString: "function (uint256)",
                                  },
                                },
                                id: 8027,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "6961:51:46",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_tuple$__$",
                                  typeString: "tuple()",
                                },
                              },
                              id: 8028,
                              nodeType: "ExpressionStatement",
                              src: "6961:51:46",
                            },
                          ],
                        },
                        id: 8030,
                        nodeType: "IfStatement",
                        src: "6631:396:46",
                        trueBody: {
                          id: 8009,
                          nodeType: "Block",
                          src: "6656:80:46",
                          statements: [
                            {
                              errorCall: {
                                arguments: [],
                                expression: {
                                  argumentTypes: [],
                                  id: 8006,
                                  name: "presaleNativeTokenPaymentNotSufficient",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 7697,
                                  src: "6681:38:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_error_pure$__$returns$__$",
                                    typeString: "function () pure",
                                  },
                                },
                                id: 8007,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "6681:40:46",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_tuple$__$",
                                  typeString: "tuple()",
                                },
                              },
                              id: 8008,
                              nodeType: "RevertStatement",
                              src: "6674:47:46",
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
                {
                  expression: {
                    arguments: [
                      {
                        expression: {
                          id: 8053,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 4294967281,
                          src: "7259:3:46",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 8054,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        src: "7259:10:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 8055,
                        name: "presaleAmount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7959,
                        src: "7271:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 8050,
                        name: "token",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7913,
                        src: "7248:5:46",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_IERC20Custom_$9421",
                          typeString: "contract IERC20Custom",
                        },
                      },
                      id: 8052,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "mint",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 9408,
                      src: "7248:10:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,uint256) external",
                      },
                    },
                    id: 8056,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "7248:37:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 8057,
                  nodeType: "ExpressionStatement",
                  src: "7248:37:46",
                },
                {
                  eventCall: {
                    arguments: [
                      {
                        expression: {
                          id: 8059,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 4294967281,
                          src: "7326:3:46",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 8060,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        src: "7326:10:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 8061,
                        name: "_paymentTokenAddress",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7875,
                        src: "7350:20:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 8062,
                        name: "presaleAmount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7959,
                        src: "7384:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        id: 8063,
                        name: "_amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7877,
                        src: "7411:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 8058,
                      name: "TokenPresold",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7671,
                      src: "7300:12:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        typeString:
                          "function (address,address,uint256,uint256)",
                      },
                    },
                    id: 8064,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "7300:128:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 8065,
                  nodeType: "EmitStatement",
                  src: "7295:133:46",
                },
              ],
            },
            documentation: {
              id: 7873,
              nodeType: "StructuredDocumentation",
              src: "4230:340:46",
              text: " Execute the Presale of ALPS Token in exchange of other token\n @dev _paymentTokenAddress - Address of the token use to pay (address 0 is for native token)\n @dev _amount - Amount denominated in the `paymentTokenAddress` being paid\n @dev _aggregatorTokenAddress - Use to convert price with Chainlink",
            },
            functionSelector: "6a107cd8",
            id: 8067,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 7882,
                kind: "modifierInvocation",
                modifierName: {
                  id: 7881,
                  name: "nonReentrant",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 741,
                  src: "4723:12:46",
                },
                nodeType: "ModifierInvocation",
                src: "4723:12:46",
              },
            ],
            name: "presaleTokens",
            nameLocation: "4584:13:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7880,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7875,
                  mutability: "mutable",
                  name: "_paymentTokenAddress",
                  nameLocation: "4615:20:46",
                  nodeType: "VariableDeclaration",
                  scope: 8067,
                  src: "4607:28:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7874,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "4607:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7877,
                  mutability: "mutable",
                  name: "_amount",
                  nameLocation: "4653:7:46",
                  nodeType: "VariableDeclaration",
                  scope: 8067,
                  src: "4645:15:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7876,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "4645:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7879,
                  mutability: "mutable",
                  name: "_aggregatorTokenAddress",
                  nameLocation: "4678:23:46",
                  nodeType: "VariableDeclaration",
                  scope: 8067,
                  src: "4670:31:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7878,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "4670:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "4597:110:46",
            },
            returnParameters: {
              id: 7883,
              nodeType: "ParameterList",
              parameters: [],
              src: "4736:0:46",
            },
            scope: 8249,
            src: "4575:2860:46",
            stateMutability: "payable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 8079,
              nodeType: "Block",
              src: "7690:54:46",
              statements: [
                {
                  expression: {
                    id: 8077,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 8075,
                      name: "presaleReceiver",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7678,
                      src: "7700:15:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8076,
                      name: "_newPresaleReceiver",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 8070,
                      src: "7718:19:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    src: "7700:37:46",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  id: 8078,
                  nodeType: "ExpressionStatement",
                  src: "7700:37:46",
                },
              ],
            },
            documentation: {
              id: 8068,
              nodeType: "StructuredDocumentation",
              src: "7441:142:46",
              text: " Set new Presale Receiver Address\n @dev _newPresaleReceiver - Address that'll receive the presale payment token",
            },
            functionSelector: "feda925b",
            id: 8080,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 8073,
                kind: "modifierInvocation",
                modifierName: {
                  id: 8072,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 474,
                  src: "7676:9:46",
                },
                nodeType: "ModifierInvocation",
                src: "7676:9:46",
              },
            ],
            name: "setPresaleReceiver",
            nameLocation: "7597:18:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 8071,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 8070,
                  mutability: "mutable",
                  name: "_newPresaleReceiver",
                  nameLocation: "7632:19:46",
                  nodeType: "VariableDeclaration",
                  scope: 8080,
                  src: "7616:35:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address_payable",
                    typeString: "address payable",
                  },
                  typeName: {
                    id: 8069,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "7616:15:46",
                    stateMutability: "payable",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "7615:37:46",
            },
            returnParameters: {
              id: 8074,
              nodeType: "ParameterList",
              parameters: [],
              src: "7690:0:46",
            },
            scope: 8249,
            src: "7588:156:46",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 8095,
              nodeType: "Block",
              src: "8015:48:46",
              statements: [
                {
                  expression: {
                    id: 8093,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 8091,
                      name: "tokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7676,
                      src: "8025:12:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8092,
                      name: "_newTokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 8083,
                      src: "8040:16:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "8025:31:46",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 8094,
                  nodeType: "ExpressionStatement",
                  src: "8025:31:46",
                },
              ],
            },
            documentation: {
              id: 8081,
              nodeType: "StructuredDocumentation",
              src: "7750:123:46",
              text: " Set new Presale Token Address\n @dev _newTokenAddress - Address of token that'll be presaled",
            },
            functionSelector: "3c0c134d",
            id: 8096,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 8086,
                kind: "modifierInvocation",
                modifierName: {
                  id: 8085,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 474,
                  src: "7959:9:46",
                },
                nodeType: "ModifierInvocation",
                src: "7959:9:46",
              },
              {
                arguments: [
                  {
                    id: 8088,
                    name: "_newTokenAddress",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 8083,
                    src: "7993:16:46",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                ],
                id: 8089,
                kind: "modifierInvocation",
                modifierName: {
                  id: 8087,
                  name: "onlyValidTokens",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 7727,
                  src: "7977:15:46",
                },
                nodeType: "ModifierInvocation",
                src: "7977:33:46",
              },
            ],
            name: "setPresaleTokenAddress",
            nameLocation: "7887:22:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 8084,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 8083,
                  mutability: "mutable",
                  name: "_newTokenAddress",
                  nameLocation: "7918:16:46",
                  nodeType: "VariableDeclaration",
                  scope: 8096,
                  src: "7910:24:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 8082,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "7910:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "7909:26:46",
            },
            returnParameters: {
              id: 8090,
              nodeType: "ParameterList",
              parameters: [],
              src: "8015:0:46",
            },
            scope: 8249,
            src: "7878:185:46",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 8111,
              nodeType: "Block",
              src: "8186:84:46",
              statements: [
                {
                  expression: {
                    id: 8109,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 8105,
                        name: "presaleTokenAvailabilityMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7691,
                        src: "8196:31:46",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_address_$_t_bool_$",
                          typeString: "mapping(address => bool)",
                        },
                      },
                      id: 8107,
                      indexExpression: {
                        id: 8106,
                        name: "_tokenAddress",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 8098,
                        src: "8228:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "8196:46:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8108,
                      name: "_tokenAvailability",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 8100,
                      src: "8245:18:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    src: "8196:67:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8110,
                  nodeType: "ExpressionStatement",
                  src: "8196:67:46",
                },
              ],
            },
            functionSelector: "0c115a74",
            id: 8112,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 8103,
                kind: "modifierInvocation",
                modifierName: {
                  id: 8102,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 474,
                  src: "8176:9:46",
                },
                nodeType: "ModifierInvocation",
                src: "8176:9:46",
              },
            ],
            name: "setTokenAvailability",
            nameLocation: "8078:20:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 8101,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 8098,
                  mutability: "mutable",
                  name: "_tokenAddress",
                  nameLocation: "8116:13:46",
                  nodeType: "VariableDeclaration",
                  scope: 8112,
                  src: "8108:21:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 8097,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "8108:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 8100,
                  mutability: "mutable",
                  name: "_tokenAvailability",
                  nameLocation: "8144:18:46",
                  nodeType: "VariableDeclaration",
                  scope: 8112,
                  src: "8139:23:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_bool",
                    typeString: "bool",
                  },
                  typeName: {
                    id: 8099,
                    name: "bool",
                    nodeType: "ElementaryTypeName",
                    src: "8139:4:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "8098:70:46",
            },
            returnParameters: {
              id: 8104,
              nodeType: "ParameterList",
              parameters: [],
              src: "8186:0:46",
            },
            scope: 8249,
            src: "8069:201:46",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 8247,
              nodeType: "Block",
              src: "8921:1721:46",
              statements: [
                {
                  assignments: [8129],
                  declarations: [
                    {
                      constant: false,
                      id: 8129,
                      mutability: "mutable",
                      name: "presaleStartingTime",
                      nameLocation: "8939:19:46",
                      nodeType: "VariableDeclaration",
                      scope: 8247,
                      src: "8931:27:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 8128,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "8931:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 8134,
                  initialValue: {
                    expression: {
                      baseExpression: {
                        id: 8130,
                        name: "presaleDetailsMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7683,
                        src: "8961:21:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                          typeString:
                            "mapping(uint256 => struct Presale.PresaleData storage ref)",
                        },
                      },
                      id: 8132,
                      indexExpression: {
                        id: 8131,
                        name: "_presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 8115,
                        src: "8983:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "8961:36:46",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                        typeString: "struct Presale.PresaleData storage ref",
                      },
                    },
                    id: 8133,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberName: "startingTime",
                    nodeType: "MemberAccess",
                    referencedDeclaration: 7654,
                    src: "8961:62:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "8931:92:46",
                },
                {
                  assignments: [8136],
                  declarations: [
                    {
                      constant: false,
                      id: 8136,
                      mutability: "mutable",
                      name: "presaleUSDPrice",
                      nameLocation: "9041:15:46",
                      nodeType: "VariableDeclaration",
                      scope: 8247,
                      src: "9033:23:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 8135,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "9033:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 8141,
                  initialValue: {
                    expression: {
                      baseExpression: {
                        id: 8137,
                        name: "presaleDetailsMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7683,
                        src: "9059:21:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                          typeString:
                            "mapping(uint256 => struct Presale.PresaleData storage ref)",
                        },
                      },
                      id: 8139,
                      indexExpression: {
                        id: 8138,
                        name: "_presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 8115,
                        src: "9081:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "9059:36:46",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                        typeString: "struct Presale.PresaleData storage ref",
                      },
                    },
                    id: 8140,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberName: "usdPrice",
                    nodeType: "MemberAccess",
                    referencedDeclaration: 7656,
                    src: "9059:45:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "9033:71:46",
                },
                {
                  assignments: [8143],
                  declarations: [
                    {
                      constant: false,
                      id: 8143,
                      mutability: "mutable",
                      name: "presaleMinimumUSDPurchase",
                      nameLocation: "9122:25:46",
                      nodeType: "VariableDeclaration",
                      scope: 8247,
                      src: "9114:33:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 8142,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "9114:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 8148,
                  initialValue: {
                    expression: {
                      baseExpression: {
                        id: 8144,
                        name: "presaleDetailsMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7683,
                        src: "9150:21:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                          typeString:
                            "mapping(uint256 => struct Presale.PresaleData storage ref)",
                        },
                      },
                      id: 8146,
                      indexExpression: {
                        id: 8145,
                        name: "_presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 8115,
                        src: "9172:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "9150:36:46",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                        typeString: "struct Presale.PresaleData storage ref",
                      },
                    },
                    id: 8147,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberName: "minimumUSDPurchase",
                    nodeType: "MemberAccess",
                    referencedDeclaration: 7658,
                    src: "9150:68:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "9114:104:46",
                },
                {
                  assignments: [8150],
                  declarations: [
                    {
                      constant: false,
                      id: 8150,
                      mutability: "mutable",
                      name: "presaleMaximumPresaleAmount",
                      nameLocation: "9236:27:46",
                      nodeType: "VariableDeclaration",
                      scope: 8247,
                      src: "9228:35:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 8149,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "9228:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 8155,
                  initialValue: {
                    expression: {
                      baseExpression: {
                        id: 8151,
                        name: "presaleDetailsMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7683,
                        src: "9266:21:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                          typeString:
                            "mapping(uint256 => struct Presale.PresaleData storage ref)",
                        },
                      },
                      id: 8153,
                      indexExpression: {
                        id: 8152,
                        name: "_presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 8115,
                        src: "9301:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "9266:58:46",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                        typeString: "struct Presale.PresaleData storage ref",
                      },
                    },
                    id: 8154,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberName: "maximumPresaleAmount",
                    nodeType: "MemberAccess",
                    referencedDeclaration: 7660,
                    src: "9266:79:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "9228:117:46",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    id: 8170,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      id: 8166,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        commonType: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        id: 8162,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 8158,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 8156,
                            name: "presaleStartingTime",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 8129,
                            src: "9446:19:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "==",
                          rightExpression: {
                            hexValue: "30",
                            id: 8157,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "9469:1:46",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_0_by_1",
                              typeString: "int_const 0",
                            },
                            value: "0",
                          },
                          src: "9446:24:46",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "&&",
                        rightExpression: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 8161,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 8159,
                            name: "presaleUSDPrice",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 8136,
                            src: "9486:15:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "==",
                          rightExpression: {
                            hexValue: "30",
                            id: 8160,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "9505:1:46",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_0_by_1",
                              typeString: "int_const 0",
                            },
                            value: "0",
                          },
                          src: "9486:20:46",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        src: "9446:60:46",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "&&",
                      rightExpression: {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 8165,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 8163,
                          name: "presaleMinimumUSDPurchase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 8143,
                          src: "9522:25:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "==",
                        rightExpression: {
                          hexValue: "30",
                          id: 8164,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "9551:1:46",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                          value: "0",
                        },
                        src: "9522:30:46",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      src: "9446:106:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "&&",
                    rightExpression: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 8169,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 8167,
                        name: "presaleMaximumPresaleAmount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 8150,
                        src: "9568:27:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "==",
                      rightExpression: {
                        hexValue: "30",
                        id: 8168,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "9599:1:46",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_0_by_1",
                          typeString: "int_const 0",
                        },
                        value: "0",
                      },
                      src: "9568:32:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    src: "9446:154:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8176,
                  nodeType: "IfStatement",
                  src: "9429:211:46",
                  trueBody: {
                    expression: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        expression: {
                          id: 8171,
                          name: "totalPresaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7674,
                          src: "9611:17:46",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Counter_$5303_storage",
                            typeString: "struct Counters.Counter storage ref",
                          },
                        },
                        id: 8173,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "increment",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 5329,
                        src: "9611:27:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_struct$_Counter_$5303_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$5303_storage_ptr_$",
                          typeString:
                            "function (struct Counters.Counter storage pointer)",
                        },
                      },
                      id: 8174,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "9611:29:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 8175,
                    nodeType: "ExpressionStatement",
                    src: "9611:29:46",
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    id: 8193,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 8179,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 8177,
                        name: "_startingTime",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 8117,
                        src: "9788:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "==",
                      rightExpression: {
                        hexValue: "30",
                        id: 8178,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "9805:1:46",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_0_by_1",
                          typeString: "int_const 0",
                        },
                        value: "0",
                      },
                      src: "9788:18:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "||",
                    rightExpression: {
                      components: [
                        {
                          commonType: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          id: 8191,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            commonType: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            id: 8182,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              id: 8180,
                              name: "_presaleRound",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 8115,
                              src: "9823:13:46",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            nodeType: "BinaryOperation",
                            operator: "!=",
                            rightExpression: {
                              hexValue: "30",
                              id: 8181,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "9840:1:46",
                              typeDescriptions: {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                              value: "0",
                            },
                            src: "9823:18:46",
                            typeDescriptions: {
                              typeIdentifier: "t_bool",
                              typeString: "bool",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "&&",
                          rightExpression: {
                            commonType: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            id: 8190,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              id: 8183,
                              name: "_startingTime",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 8117,
                              src: "9861:13:46",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            nodeType: "BinaryOperation",
                            operator: "<",
                            rightExpression: {
                              expression: {
                                baseExpression: {
                                  id: 8184,
                                  name: "presaleDetailsMapping",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 7683,
                                  src: "9893:21:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                                    typeString:
                                      "mapping(uint256 => struct Presale.PresaleData storage ref)",
                                  },
                                },
                                id: 8188,
                                indexExpression: {
                                  commonType: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                  id: 8187,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  leftExpression: {
                                    id: 8185,
                                    name: "_presaleRound",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 8115,
                                    src: "9915:13:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  nodeType: "BinaryOperation",
                                  operator: "-",
                                  rightExpression: {
                                    hexValue: "31",
                                    id: 8186,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: true,
                                    kind: "number",
                                    lValueRequested: false,
                                    nodeType: "Literal",
                                    src: "9931:1:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_rational_1_by_1",
                                      typeString: "int_const 1",
                                    },
                                    value: "1",
                                  },
                                  src: "9915:17:46",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: "IndexAccess",
                                src: "9893:40:46",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_PresaleData_$7661_storage",
                                  typeString:
                                    "struct Presale.PresaleData storage ref",
                                },
                              },
                              id: 8189,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "startingTime",
                              nodeType: "MemberAccess",
                              referencedDeclaration: 7654,
                              src: "9893:53:46",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            src: "9861:85:46",
                            typeDescriptions: {
                              typeIdentifier: "t_bool",
                              typeString: "bool",
                            },
                          },
                          src: "9823:123:46",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                      ],
                      id: 8192,
                      isConstant: false,
                      isInlineArray: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "TupleExpression",
                      src: "9822:125:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    src: "9788:159:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8197,
                  nodeType: "IfStatement",
                  src: "9771:222:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 8194,
                        name: "presaleStartingTimeInvalid",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7699,
                        src: "9965:26:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 8195,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "9965:28:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 8196,
                    nodeType: "RevertStatement",
                    src: "9958:35:46",
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 8200,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 8198,
                      name: "_usdPrice",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 8119,
                      src: "10063:9:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      hexValue: "30",
                      id: 8199,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "10076:1:46",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "10063:14:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8204,
                  nodeType: "IfStatement",
                  src: "10059:51:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 8201,
                        name: "presaleUSDPriceInvalid",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7701,
                        src: "10086:22:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 8202,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "10086:24:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 8203,
                    nodeType: "RevertStatement",
                    src: "10079:31:46",
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 8207,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 8205,
                      name: "_minimumUSDPurchase",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 8121,
                      src: "10124:19:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      hexValue: "30",
                      id: 8206,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "10147:1:46",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "10124:24:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8211,
                  nodeType: "IfStatement",
                  src: "10120:71:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 8208,
                        name: "presaleMimumumUSDPurchaseInvalid",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7703,
                        src: "10157:32:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 8209,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "10157:34:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 8210,
                    nodeType: "RevertStatement",
                    src: "10150:41:46",
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 8214,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 8212,
                      name: "_maximumPresaleAmount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 8123,
                      src: "10205:21:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      hexValue: "30",
                      id: 8213,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "10230:1:46",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "10205:26:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8218,
                  nodeType: "IfStatement",
                  src: "10201:87:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 8215,
                        name: "presaleMaximumPresaleAmountInvalid",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7705,
                        src: "10252:34:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 8216,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "10252:36:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 8217,
                    nodeType: "RevertStatement",
                    src: "10245:43:46",
                  },
                },
                {
                  expression: {
                    id: 8224,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 8219,
                          name: "presaleDetailsMapping",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7683,
                          src: "10299:21:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                            typeString:
                              "mapping(uint256 => struct Presale.PresaleData storage ref)",
                          },
                        },
                        id: 8221,
                        indexExpression: {
                          id: 8220,
                          name: "_presaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 8115,
                          src: "10321:13:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "10299:36:46",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                          typeString: "struct Presale.PresaleData storage ref",
                        },
                      },
                      id: 8222,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "startingTime",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 7654,
                      src: "10299:49:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8223,
                      name: "_startingTime",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 8117,
                      src: "10351:13:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "10299:65:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 8225,
                  nodeType: "ExpressionStatement",
                  src: "10299:65:46",
                },
                {
                  expression: {
                    id: 8231,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 8226,
                          name: "presaleDetailsMapping",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7683,
                          src: "10374:21:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                            typeString:
                              "mapping(uint256 => struct Presale.PresaleData storage ref)",
                          },
                        },
                        id: 8228,
                        indexExpression: {
                          id: 8227,
                          name: "_presaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 8115,
                          src: "10396:13:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "10374:36:46",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                          typeString: "struct Presale.PresaleData storage ref",
                        },
                      },
                      id: 8229,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "usdPrice",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 7656,
                      src: "10374:45:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8230,
                      name: "_usdPrice",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 8119,
                      src: "10422:9:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "10374:57:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 8232,
                  nodeType: "ExpressionStatement",
                  src: "10374:57:46",
                },
                {
                  expression: {
                    id: 8238,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 8233,
                          name: "presaleDetailsMapping",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7683,
                          src: "10441:21:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                            typeString:
                              "mapping(uint256 => struct Presale.PresaleData storage ref)",
                          },
                        },
                        id: 8235,
                        indexExpression: {
                          id: 8234,
                          name: "_presaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 8115,
                          src: "10463:13:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "10441:36:46",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                          typeString: "struct Presale.PresaleData storage ref",
                        },
                      },
                      id: 8236,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "minimumUSDPurchase",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 7658,
                      src: "10441:68:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8237,
                      name: "_minimumUSDPurchase",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 8121,
                      src: "10512:19:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "10441:90:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 8239,
                  nodeType: "ExpressionStatement",
                  src: "10441:90:46",
                },
                {
                  expression: {
                    id: 8245,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 8240,
                          name: "presaleDetailsMapping",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7683,
                          src: "10541:21:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                            typeString:
                              "mapping(uint256 => struct Presale.PresaleData storage ref)",
                          },
                        },
                        id: 8242,
                        indexExpression: {
                          id: 8241,
                          name: "_presaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 8115,
                          src: "10563:13:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "10541:36:46",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                          typeString: "struct Presale.PresaleData storage ref",
                        },
                      },
                      id: 8243,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "maximumPresaleAmount",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 7660,
                      src: "10541:70:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8244,
                      name: "_maximumPresaleAmount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 8123,
                      src: "10614:21:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "10541:94:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 8246,
                  nodeType: "ExpressionStatement",
                  src: "10541:94:46",
                },
              ],
            },
            documentation: {
              id: 8113,
              nodeType: "StructuredDocumentation",
              src: "8276:427:46",
              text: " Creating/Updating a presale round information\n @dev _presaleRound - The presale round chosen\n @dev _startingTime - The starting Presale time\n @dev _usdPrice - The USD Price of the Token in certain Presale Round\n @dev _minimumUSDPurchase - The minimum USD amount to purchase the token\n @dev _maximumPresaleAmount - The maximum amount of token available for a presale round",
            },
            functionSelector: "c829d1db",
            id: 8248,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 8126,
                kind: "modifierInvocation",
                modifierName: {
                  id: 8125,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 474,
                  src: "8911:9:46",
                },
                nodeType: "ModifierInvocation",
                src: "8911:9:46",
              },
            ],
            name: "setPresaleRound",
            nameLocation: "8717:15:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 8124,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 8115,
                  mutability: "mutable",
                  name: "_presaleRound",
                  nameLocation: "8750:13:46",
                  nodeType: "VariableDeclaration",
                  scope: 8248,
                  src: "8742:21:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 8114,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "8742:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 8117,
                  mutability: "mutable",
                  name: "_startingTime",
                  nameLocation: "8781:13:46",
                  nodeType: "VariableDeclaration",
                  scope: 8248,
                  src: "8773:21:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 8116,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "8773:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 8119,
                  mutability: "mutable",
                  name: "_usdPrice",
                  nameLocation: "8812:9:46",
                  nodeType: "VariableDeclaration",
                  scope: 8248,
                  src: "8804:17:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 8118,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "8804:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 8121,
                  mutability: "mutable",
                  name: "_minimumUSDPurchase",
                  nameLocation: "8839:19:46",
                  nodeType: "VariableDeclaration",
                  scope: 8248,
                  src: "8831:27:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 8120,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "8831:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 8123,
                  mutability: "mutable",
                  name: "_maximumPresaleAmount",
                  nameLocation: "8876:21:46",
                  nodeType: "VariableDeclaration",
                  scope: 8248,
                  src: "8868:29:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 8122,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "8868:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "8732:171:46",
            },
            returnParameters: {
              id: 8127,
              nodeType: "ParameterList",
              parameters: [],
              src: "8921:0:46",
            },
            scope: 8249,
            src: "8708:1934:46",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
        ],
        scope: 8250,
        src: "515:10129:46",
        usedErrors: [
          7693, 7695, 7697, 7699, 7701, 7703, 7705, 7707, 7709, 7711,
        ],
      },
    ],
    src: "38:10607:46",
  },
  legacyAST: {
    absolutePath: "project:/contracts/presale/Presale.sol",
    exportedSymbols: {
      AggregatorV3Interface: [45],
      Context: [5297],
      Counters: [5371],
      IERC20: [2884],
      IERC20Custom: [9421],
      Ownable: [532],
      Presale: [8249],
      PriceConverter: [7631],
      ReentrancyGuard: [742],
      SafeMath: [7057],
    },
    id: 8250,
    license: "AGPL-3.0",
    nodeType: "SourceUnit",
    nodes: [
      {
        id: 7633,
        literals: ["solidity", "^", "0.8", ".11"],
        nodeType: "PragmaDirective",
        src: "38:24:46",
      },
      {
        absolutePath: "@openzeppelin/contracts/access/Ownable.sol",
        file: "@openzeppelin/contracts/access/Ownable.sol",
        id: 7634,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8250,
        sourceUnit: 533,
        src: "64:52:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        file: "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        id: 7635,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8250,
        sourceUnit: 2885,
        src: "117:56:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/utils/Counters.sol",
        file: "@openzeppelin/contracts/utils/Counters.sol",
        id: 7636,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8250,
        sourceUnit: 5372,
        src: "174:52:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/utils/math/SafeMath.sol",
        file: "@openzeppelin/contracts/utils/math/SafeMath.sol",
        id: 7637,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8250,
        sourceUnit: 7058,
        src: "227:57:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        file: "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        id: 7638,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8250,
        sourceUnit: 743,
        src: "285:62:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath:
          "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        file: "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        id: 7639,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8250,
        sourceUnit: 46,
        src: "348:76:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "project:/contracts/libraries/PriceConverter.sol",
        file: "../libraries/PriceConverter.sol",
        id: 7640,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8250,
        sourceUnit: 7632,
        src: "425:41:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "project:/contracts/token/interfaces/IERC20Custom.sol",
        file: "../token/interfaces/IERC20Custom.sol",
        id: 7641,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 8250,
        sourceUnit: 9422,
        src: "467:46:46",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 7642,
              name: "Ownable",
              nodeType: "IdentifierPath",
              referencedDeclaration: 532,
              src: "535:7:46",
            },
            id: 7643,
            nodeType: "InheritanceSpecifier",
            src: "535:7:46",
          },
          {
            baseName: {
              id: 7644,
              name: "ReentrancyGuard",
              nodeType: "IdentifierPath",
              referencedDeclaration: 742,
              src: "544:15:46",
            },
            id: 7645,
            nodeType: "InheritanceSpecifier",
            src: "544:15:46",
          },
        ],
        canonicalName: "Presale",
        contractDependencies: [],
        contractKind: "contract",
        fullyImplemented: true,
        id: 8249,
        linearizedBaseContracts: [8249, 742, 532, 5297],
        name: "Presale",
        nameLocation: "524:7:46",
        nodeType: "ContractDefinition",
        nodes: [
          {
            id: 7649,
            libraryName: {
              id: 7646,
              name: "Counters",
              nodeType: "IdentifierPath",
              referencedDeclaration: 5371,
              src: "572:8:46",
            },
            nodeType: "UsingForDirective",
            src: "566:36:46",
            typeName: {
              id: 7648,
              nodeType: "UserDefinedTypeName",
              pathNode: {
                id: 7647,
                name: "Counters.Counter",
                nodeType: "IdentifierPath",
                referencedDeclaration: 5303,
                src: "585:16:46",
              },
              referencedDeclaration: 5303,
              src: "585:16:46",
              typeDescriptions: {
                typeIdentifier: "t_struct$_Counter_$5303_storage_ptr",
                typeString: "struct Counters.Counter",
              },
            },
          },
          {
            id: 7652,
            libraryName: {
              id: 7650,
              name: "SafeMath",
              nodeType: "IdentifierPath",
              referencedDeclaration: 7057,
              src: "613:8:46",
            },
            nodeType: "UsingForDirective",
            src: "607:27:46",
            typeName: {
              id: 7651,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "626:7:46",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
          },
          {
            canonicalName: "Presale.PresaleData",
            id: 7661,
            members: [
              {
                constant: false,
                id: 7654,
                mutability: "mutable",
                name: "startingTime",
                nameLocation: "677:12:46",
                nodeType: "VariableDeclaration",
                scope: 7661,
                src: "669:20:46",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 7653,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "669:7:46",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 7656,
                mutability: "mutable",
                name: "usdPrice",
                nameLocation: "707:8:46",
                nodeType: "VariableDeclaration",
                scope: 7661,
                src: "699:16:46",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 7655,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "699:7:46",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 7658,
                mutability: "mutable",
                name: "minimumUSDPurchase",
                nameLocation: "733:18:46",
                nodeType: "VariableDeclaration",
                scope: 7661,
                src: "725:26:46",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 7657,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "725:7:46",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 7660,
                mutability: "mutable",
                name: "maximumPresaleAmount",
                nameLocation: "769:20:46",
                nodeType: "VariableDeclaration",
                scope: 7661,
                src: "761:28:46",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 7659,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "761:7:46",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
            ],
            name: "PresaleData",
            nameLocation: "647:11:46",
            nodeType: "StructDefinition",
            scope: 8249,
            src: "640:156:46",
            visibility: "public",
          },
          {
            anonymous: false,
            id: 7671,
            name: "TokenPresold",
            nameLocation: "808:12:46",
            nodeType: "EventDefinition",
            parameters: {
              id: 7670,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7663,
                  indexed: true,
                  mutability: "mutable",
                  name: "to",
                  nameLocation: "846:2:46",
                  nodeType: "VariableDeclaration",
                  scope: 7671,
                  src: "830:18:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7662,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "830:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7665,
                  indexed: true,
                  mutability: "mutable",
                  name: "paymentTokenAddress",
                  nameLocation: "874:19:46",
                  nodeType: "VariableDeclaration",
                  scope: 7671,
                  src: "858:35:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7664,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "858:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7667,
                  indexed: false,
                  mutability: "mutable",
                  name: "amount",
                  nameLocation: "911:6:46",
                  nodeType: "VariableDeclaration",
                  scope: 7671,
                  src: "903:14:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7666,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "903:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7669,
                  indexed: false,
                  mutability: "mutable",
                  name: "paymentTokenamount",
                  nameLocation: "935:18:46",
                  nodeType: "VariableDeclaration",
                  scope: 7671,
                  src: "927:26:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7668,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "927:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "820:139:46",
            },
            src: "802:158:46",
          },
          {
            constant: false,
            functionSelector: "962de5c0",
            id: 7674,
            mutability: "mutable",
            name: "totalPresaleRound",
            nameLocation: "990:17:46",
            nodeType: "VariableDeclaration",
            scope: 8249,
            src: "966:41:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_struct$_Counter_$5303_storage",
              typeString: "struct Counters.Counter",
            },
            typeName: {
              id: 7673,
              nodeType: "UserDefinedTypeName",
              pathNode: {
                id: 7672,
                name: "Counters.Counter",
                nodeType: "IdentifierPath",
                referencedDeclaration: 5303,
                src: "966:16:46",
              },
              referencedDeclaration: 5303,
              src: "966:16:46",
              typeDescriptions: {
                typeIdentifier: "t_struct$_Counter_$5303_storage_ptr",
                typeString: "struct Counters.Counter",
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "9d76ea58",
            id: 7676,
            mutability: "mutable",
            name: "tokenAddress",
            nameLocation: "1028:12:46",
            nodeType: "VariableDeclaration",
            scope: 8249,
            src: "1013:27:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_address",
              typeString: "address",
            },
            typeName: {
              id: 7675,
              name: "address",
              nodeType: "ElementaryTypeName",
              src: "1013:7:46",
              stateMutability: "nonpayable",
              typeDescriptions: {
                typeIdentifier: "t_address",
                typeString: "address",
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "c1436415",
            id: 7678,
            mutability: "mutable",
            name: "presaleReceiver",
            nameLocation: "1069:15:46",
            nodeType: "VariableDeclaration",
            scope: 8249,
            src: "1046:38:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_address_payable",
              typeString: "address payable",
            },
            typeName: {
              id: 7677,
              name: "address",
              nodeType: "ElementaryTypeName",
              src: "1046:15:46",
              stateMutability: "payable",
              typeDescriptions: {
                typeIdentifier: "t_address_payable",
                typeString: "address payable",
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "7b4d3585",
            id: 7683,
            mutability: "mutable",
            name: "presaleDetailsMapping",
            nameLocation: "1180:21:46",
            nodeType: "VariableDeclaration",
            scope: 8249,
            src: "1141:60:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier:
                "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
              typeString: "mapping(uint256 => struct Presale.PresaleData)",
            },
            typeName: {
              id: 7682,
              keyType: {
                id: 7679,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "1149:7:46",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "1141:31:46",
              typeDescriptions: {
                typeIdentifier:
                  "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                typeString: "mapping(uint256 => struct Presale.PresaleData)",
              },
              valueType: {
                id: 7681,
                nodeType: "UserDefinedTypeName",
                pathNode: {
                  id: 7680,
                  name: "PresaleData",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 7661,
                  src: "1160:11:46",
                },
                referencedDeclaration: 7661,
                src: "1160:11:46",
                typeDescriptions: {
                  typeIdentifier: "t_struct$_PresaleData_$7661_storage_ptr",
                  typeString: "struct Presale.PresaleData",
                },
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "392f911b",
            id: 7687,
            mutability: "mutable",
            name: "presaleAmountByRoundMapping",
            nameLocation: "1242:27:46",
            nodeType: "VariableDeclaration",
            scope: 8249,
            src: "1207:62:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
              typeString: "mapping(uint256 => uint256)",
            },
            typeName: {
              id: 7686,
              keyType: {
                id: 7684,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "1215:7:46",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "1207:27:46",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                typeString: "mapping(uint256 => uint256)",
              },
              valueType: {
                id: 7685,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "1226:7:46",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "2c49eba8",
            id: 7691,
            mutability: "mutable",
            name: "presaleTokenAvailabilityMapping",
            nameLocation: "1307:31:46",
            nodeType: "VariableDeclaration",
            scope: 8249,
            src: "1275:63:46",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_address_$_t_bool_$",
              typeString: "mapping(address => bool)",
            },
            typeName: {
              id: 7690,
              keyType: {
                id: 7688,
                name: "address",
                nodeType: "ElementaryTypeName",
                src: "1283:7:46",
                typeDescriptions: {
                  typeIdentifier: "t_address",
                  typeString: "address",
                },
              },
              nodeType: "Mapping",
              src: "1275:24:46",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_address_$_t_bool_$",
                typeString: "mapping(address => bool)",
              },
              valueType: {
                id: 7689,
                name: "bool",
                nodeType: "ElementaryTypeName",
                src: "1294:4:46",
                typeDescriptions: {
                  typeIdentifier: "t_bool",
                  typeString: "bool",
                },
              },
            },
            visibility: "public",
          },
          {
            id: 7693,
            name: "presaleRoundClosed",
            nameLocation: "1351:18:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7692,
              nodeType: "ParameterList",
              parameters: [],
              src: "1369:2:46",
            },
            src: "1345:27:46",
          },
          {
            id: 7695,
            name: "presaleTokenNotAvailable",
            nameLocation: "1383:24:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7694,
              nodeType: "ParameterList",
              parameters: [],
              src: "1407:2:46",
            },
            src: "1377:33:46",
          },
          {
            id: 7697,
            name: "presaleNativeTokenPaymentNotSufficient",
            nameLocation: "1421:38:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7696,
              nodeType: "ParameterList",
              parameters: [],
              src: "1459:2:46",
            },
            src: "1415:47:46",
          },
          {
            id: 7699,
            name: "presaleStartingTimeInvalid",
            nameLocation: "1473:26:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7698,
              nodeType: "ParameterList",
              parameters: [],
              src: "1499:2:46",
            },
            src: "1467:35:46",
          },
          {
            id: 7701,
            name: "presaleUSDPriceInvalid",
            nameLocation: "1513:22:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7700,
              nodeType: "ParameterList",
              parameters: [],
              src: "1535:2:46",
            },
            src: "1507:31:46",
          },
          {
            id: 7703,
            name: "presaleMimumumUSDPurchaseInvalid",
            nameLocation: "1549:32:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7702,
              nodeType: "ParameterList",
              parameters: [],
              src: "1581:2:46",
            },
            src: "1543:41:46",
          },
          {
            id: 7705,
            name: "presaleMaximumPresaleAmountInvalid",
            nameLocation: "1595:34:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7704,
              nodeType: "ParameterList",
              parameters: [],
              src: "1629:2:46",
            },
            src: "1589:43:46",
          },
          {
            id: 7707,
            name: "presaleUSDPurchaseNotSufficient",
            nameLocation: "1643:31:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7706,
              nodeType: "ParameterList",
              parameters: [],
              src: "1674:2:46",
            },
            src: "1637:40:46",
          },
          {
            id: 7709,
            name: "presaleAmountOverdemand",
            nameLocation: "1688:23:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7708,
              nodeType: "ParameterList",
              parameters: [],
              src: "1711:2:46",
            },
            src: "1682:32:46",
          },
          {
            id: 7711,
            name: "presaleTokenAddressInvalid",
            nameLocation: "1725:26:46",
            nodeType: "ErrorDefinition",
            parameters: {
              id: 7710,
              nodeType: "ParameterList",
              parameters: [],
              src: "1751:2:46",
            },
            src: "1719:35:46",
          },
          {
            body: {
              id: 7726,
              nodeType: "Block",
              src: "1808:96:46",
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    id: 7720,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 7715,
                      name: "_tokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7713,
                      src: "1822:13:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      arguments: [
                        {
                          hexValue: "30",
                          id: 7718,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "1847:1:46",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                          value: "0",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                        ],
                        id: 7717,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        nodeType: "ElementaryTypeNameExpression",
                        src: "1839:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_type$_t_address_$",
                          typeString: "type(address)",
                        },
                        typeName: {
                          id: 7716,
                          name: "address",
                          nodeType: "ElementaryTypeName",
                          src: "1839:7:46",
                          typeDescriptions: {},
                        },
                      },
                      id: 7719,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "typeConversion",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "1839:10:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "1822:27:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 7724,
                  nodeType: "IfStatement",
                  src: "1818:68:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 7721,
                        name: "presaleTokenAddressInvalid",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7711,
                        src: "1858:26:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 7722,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "1858:28:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 7723,
                    nodeType: "RevertStatement",
                    src: "1851:35:46",
                  },
                },
                {
                  id: 7725,
                  nodeType: "PlaceholderStatement",
                  src: "1896:1:46",
                },
              ],
            },
            id: 7727,
            name: "onlyValidTokens",
            nameLocation: "1769:15:46",
            nodeType: "ModifierDefinition",
            parameters: {
              id: 7714,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7713,
                  mutability: "mutable",
                  name: "_tokenAddress",
                  nameLocation: "1793:13:46",
                  nodeType: "VariableDeclaration",
                  scope: 7727,
                  src: "1785:21:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7712,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1785:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1784:23:46",
            },
            src: "1760:144:46",
            virtual: false,
            visibility: "internal",
          },
          {
            body: {
              id: 7742,
              nodeType: "Block",
              src: "1979:89:46",
              statements: [
                {
                  expression: {
                    id: 7736,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 7734,
                      name: "tokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7676,
                      src: "1989:12:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 7735,
                      name: "_tokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7729,
                      src: "2004:13:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "1989:28:46",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 7737,
                  nodeType: "ExpressionStatement",
                  src: "1989:28:46",
                },
                {
                  expression: {
                    id: 7740,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 7738,
                      name: "presaleReceiver",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7678,
                      src: "2027:15:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 7739,
                      name: "_presaleReceiver",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7731,
                      src: "2045:16:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    src: "2027:34:46",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  id: 7741,
                  nodeType: "ExpressionStatement",
                  src: "2027:34:46",
                },
              ],
            },
            id: 7743,
            implemented: true,
            kind: "constructor",
            modifiers: [],
            name: "",
            nameLocation: "-1:-1:-1",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7732,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7729,
                  mutability: "mutable",
                  name: "_tokenAddress",
                  nameLocation: "1930:13:46",
                  nodeType: "VariableDeclaration",
                  scope: 7743,
                  src: "1922:21:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7728,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1922:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7731,
                  mutability: "mutable",
                  name: "_presaleReceiver",
                  nameLocation: "1961:16:46",
                  nodeType: "VariableDeclaration",
                  scope: 7743,
                  src: "1945:32:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address_payable",
                    typeString: "address payable",
                  },
                  typeName: {
                    id: 7730,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1945:15:46",
                    stateMutability: "payable",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1921:57:46",
            },
            returnParameters: {
              id: 7733,
              nodeType: "ParameterList",
              parameters: [],
              src: "1979:0:46",
            },
            scope: 8249,
            src: "1910:158:46",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 7753,
              nodeType: "Block",
              src: "2193:51:46",
              statements: [
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 7749,
                        name: "totalPresaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7674,
                        src: "2210:17:46",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Counter_$5303_storage",
                          typeString: "struct Counters.Counter storage ref",
                        },
                      },
                      id: 7750,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "current",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 5315,
                      src: "2210:25:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$_t_struct$_Counter_$5303_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5303_storage_ptr_$",
                        typeString:
                          "function (struct Counters.Counter storage pointer) view returns (uint256)",
                      },
                    },
                    id: 7751,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2210:27:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 7748,
                  id: 7752,
                  nodeType: "Return",
                  src: "2203:34:46",
                },
              ],
            },
            documentation: {
              id: 7744,
              nodeType: "StructuredDocumentation",
              src: "2074:52:46",
              text: " Get total amount of presale round",
            },
            functionSelector: "398dcd26",
            id: 7754,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "getTotalPresaleRound",
            nameLocation: "2140:20:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7745,
              nodeType: "ParameterList",
              parameters: [],
              src: "2160:2:46",
            },
            returnParameters: {
              id: 7748,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7747,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7754,
                  src: "2184:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7746,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2184:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2183:9:46",
            },
            scope: 8249,
            src: "2131:113:46",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 7766,
              nodeType: "Block",
              src: "2489:66:46",
              statements: [
                {
                  expression: {
                    baseExpression: {
                      id: 7762,
                      name: "presaleAmountByRoundMapping",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7687,
                      src: "2506:27:46",
                      typeDescriptions: {
                        typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                        typeString: "mapping(uint256 => uint256)",
                      },
                    },
                    id: 7764,
                    indexExpression: {
                      id: 7763,
                      name: "_presaleRound",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7757,
                      src: "2534:13:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "2506:42:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 7761,
                  id: 7765,
                  nodeType: "Return",
                  src: "2499:49:46",
                },
              ],
            },
            documentation: {
              id: 7755,
              nodeType: "StructuredDocumentation",
              src: "2250:120:46",
              text: " Get presale total amount By presale round\n @dev _presaleRound - The presale round chosen",
            },
            functionSelector: "d958e001",
            id: 7767,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "getPresaleAmountByRound",
            nameLocation: "2384:23:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7758,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7757,
                  mutability: "mutable",
                  name: "_presaleRound",
                  nameLocation: "2416:13:46",
                  nodeType: "VariableDeclaration",
                  scope: 7767,
                  src: "2408:21:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7756,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2408:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2407:23:46",
            },
            returnParameters: {
              id: 7761,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7760,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7767,
                  src: "2476:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7759,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2476:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2475:9:46",
            },
            scope: 8249,
            src: "2375:180:46",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 7799,
              nodeType: "Block",
              src: "2691:299:46",
              statements: [
                {
                  assignments: [7774],
                  declarations: [
                    {
                      constant: false,
                      id: 7774,
                      mutability: "mutable",
                      name: "totalPresale",
                      nameLocation: "2709:12:46",
                      nodeType: "VariableDeclaration",
                      scope: 7799,
                      src: "2701:20:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7773,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "2701:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7776,
                  initialValue: {
                    hexValue: "30",
                    id: 7775,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "number",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "2724:1:46",
                    typeDescriptions: {
                      typeIdentifier: "t_rational_0_by_1",
                      typeString: "int_const 0",
                    },
                    value: "0",
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "2701:24:46",
                },
                {
                  body: {
                    id: 7795,
                    nodeType: "Block",
                    src: "2872:82:46",
                    statements: [
                      {
                        expression: {
                          id: 7793,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            id: 7789,
                            name: "totalPresale",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7774,
                            src: "2886:12:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "Assignment",
                          operator: "+=",
                          rightHandSide: {
                            baseExpression: {
                              id: 7790,
                              name: "presaleAmountByRoundMapping",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7687,
                              src: "2902:27:46",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_uint256_$_t_uint256_$",
                                typeString: "mapping(uint256 => uint256)",
                              },
                            },
                            id: 7792,
                            indexExpression: {
                              id: 7791,
                              name: "presaleRound",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7778,
                              src: "2930:12:46",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "2902:41:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "2886:57:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 7794,
                        nodeType: "ExpressionStatement",
                        src: "2886:57:46",
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 7785,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 7781,
                      name: "presaleRound",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7778,
                      src: "2791:12:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        expression: {
                          id: 7782,
                          name: "totalPresaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7674,
                          src: "2806:17:46",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Counter_$5303_storage",
                            typeString: "struct Counters.Counter storage ref",
                          },
                        },
                        id: 7783,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "current",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 5315,
                        src: "2806:25:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_view$_t_struct$_Counter_$5303_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5303_storage_ptr_$",
                          typeString:
                            "function (struct Counters.Counter storage pointer) view returns (uint256)",
                        },
                      },
                      id: 7784,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "2806:27:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "2791:42:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 7796,
                  initializationExpression: {
                    assignments: [7778],
                    declarations: [
                      {
                        constant: false,
                        id: 7778,
                        mutability: "mutable",
                        name: "presaleRound",
                        nameLocation: "2761:12:46",
                        nodeType: "VariableDeclaration",
                        scope: 7796,
                        src: "2753:20:46",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 7777,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "2753:7:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 7780,
                    initialValue: {
                      hexValue: "30",
                      id: 7779,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "2776:1:46",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "2753:24:46",
                  },
                  loopExpression: {
                    expression: {
                      id: 7787,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "++",
                      prefix: false,
                      src: "2847:14:46",
                      subExpression: {
                        id: 7786,
                        name: "presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7778,
                        src: "2847:12:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 7788,
                    nodeType: "ExpressionStatement",
                    src: "2847:14:46",
                  },
                  nodeType: "ForStatement",
                  src: "2735:219:46",
                },
                {
                  expression: {
                    id: 7797,
                    name: "totalPresale",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 7774,
                    src: "2971:12:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 7772,
                  id: 7798,
                  nodeType: "Return",
                  src: "2964:19:46",
                },
              ],
            },
            documentation: {
              id: 7768,
              nodeType: "StructuredDocumentation",
              src: "2561:62:46",
              text: " Get total amount of presale from all rounds",
            },
            functionSelector: "0aca575a",
            id: 7800,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "getTotalPresaleAmount",
            nameLocation: "2637:21:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7769,
              nodeType: "ParameterList",
              parameters: [],
              src: "2658:2:46",
            },
            returnParameters: {
              id: 7772,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7771,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7800,
                  src: "2682:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7770,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2682:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2681:9:46",
            },
            scope: 8249,
            src: "2628:362:46",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 7835,
              nodeType: "Block",
              src: "3109:371:46",
              statements: [
                {
                  body: {
                    id: 7831,
                    nodeType: "Block",
                    src: "3260:195:46",
                    statements: [
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 7826,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              baseExpression: {
                                id: 7820,
                                name: "presaleDetailsMapping",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 7683,
                                src: "3295:21:46",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                                  typeString:
                                    "mapping(uint256 => struct Presale.PresaleData storage ref)",
                                },
                              },
                              id: 7822,
                              indexExpression: {
                                id: 7821,
                                name: "presaleRound",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 7807,
                                src: "3317:12:46",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "3295:35:46",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_PresaleData_$7661_storage",
                                typeString:
                                  "struct Presale.PresaleData storage ref",
                              },
                            },
                            id: 7823,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "startingTime",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 7654,
                            src: "3295:48:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "<=",
                          rightExpression: {
                            expression: {
                              id: 7824,
                              name: "block",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967292,
                              src: "3363:5:46",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_block",
                                typeString: "block",
                              },
                            },
                            id: 7825,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "timestamp",
                            nodeType: "MemberAccess",
                            src: "3363:15:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "3295:83:46",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 7830,
                        nodeType: "IfStatement",
                        src: "3274:171:46",
                        trueBody: {
                          id: 7829,
                          nodeType: "Block",
                          src: "3393:52:46",
                          statements: [
                            {
                              expression: {
                                id: 7827,
                                name: "presaleRound",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 7807,
                                src: "3418:12:46",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              functionReturnParameters: 7805,
                              id: 7828,
                              nodeType: "Return",
                              src: "3411:19:46",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 7816,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 7814,
                      name: "presaleRound",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7807,
                      src: "3205:12:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: ">",
                    rightExpression: {
                      hexValue: "30",
                      id: 7815,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "3220:1:46",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "3205:16:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 7832,
                  initializationExpression: {
                    assignments: [7807],
                    declarations: [
                      {
                        constant: false,
                        id: 7807,
                        mutability: "mutable",
                        name: "presaleRound",
                        nameLocation: "3145:12:46",
                        nodeType: "VariableDeclaration",
                        scope: 7832,
                        src: "3137:20:46",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 7806,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "3137:7:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 7813,
                    initialValue: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 7812,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        arguments: [],
                        expression: {
                          argumentTypes: [],
                          expression: {
                            id: 7808,
                            name: "totalPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7674,
                            src: "3160:17:46",
                            typeDescriptions: {
                              typeIdentifier: "t_struct$_Counter_$5303_storage",
                              typeString: "struct Counters.Counter storage ref",
                            },
                          },
                          id: 7809,
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "current",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 5315,
                          src: "3160:25:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_view$_t_struct$_Counter_$5303_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5303_storage_ptr_$",
                            typeString:
                              "function (struct Counters.Counter storage pointer) view returns (uint256)",
                          },
                        },
                        id: 7810,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "3160:27:46",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "-",
                      rightExpression: {
                        hexValue: "31",
                        id: 7811,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "3190:1:46",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_1_by_1",
                          typeString: "int_const 1",
                        },
                        value: "1",
                      },
                      src: "3160:31:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "3137:54:46",
                  },
                  loopExpression: {
                    expression: {
                      id: 7818,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "--",
                      prefix: false,
                      src: "3235:14:46",
                      subExpression: {
                        id: 7817,
                        name: "presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7807,
                        src: "3235:12:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 7819,
                    nodeType: "ExpressionStatement",
                    src: "3235:14:46",
                  },
                  nodeType: "ForStatement",
                  src: "3119:336:46",
                },
                {
                  expression: {
                    hexValue: "30",
                    id: 7833,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "number",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "3472:1:46",
                    typeDescriptions: {
                      typeIdentifier: "t_rational_0_by_1",
                      typeString: "int_const 0",
                    },
                    value: "0",
                  },
                  functionReturnParameters: 7805,
                  id: 7834,
                  nodeType: "Return",
                  src: "3465:8:46",
                },
              ],
            },
            documentation: {
              id: 7801,
              nodeType: "StructuredDocumentation",
              src: "2996:44:46",
              text: " Get Current Presale Round",
            },
            functionSelector: "1c63f0ed",
            id: 7836,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "getCurrentPresaleRound",
            nameLocation: "3054:22:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7802,
              nodeType: "ParameterList",
              parameters: [],
              src: "3076:2:46",
            },
            returnParameters: {
              id: 7805,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7804,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7836,
                  src: "3100:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7803,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3100:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3099:9:46",
            },
            scope: 8249,
            src: "3045:435:46",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 7871,
              nodeType: "Block",
              src: "3840:384:46",
              statements: [
                {
                  assignments: [7849],
                  declarations: [
                    {
                      constant: false,
                      id: 7849,
                      mutability: "mutable",
                      name: "currentPresaleRound",
                      nameLocation: "3858:19:46",
                      nodeType: "VariableDeclaration",
                      scope: 7871,
                      src: "3850:27:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7848,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "3850:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7852,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 7850,
                      name: "getCurrentPresaleRound",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7836,
                      src: "3880:22:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$__$returns$_t_uint256_$",
                        typeString: "function () view returns (uint256)",
                      },
                    },
                    id: 7851,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3880:24:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "3850:54:46",
                },
                {
                  expression: {
                    components: [
                      {
                        expression: {
                          baseExpression: {
                            id: 7853,
                            name: "presaleDetailsMapping",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7683,
                            src: "3935:21:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                              typeString:
                                "mapping(uint256 => struct Presale.PresaleData storage ref)",
                            },
                          },
                          id: 7855,
                          indexExpression: {
                            id: 7854,
                            name: "currentPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7849,
                            src: "3957:19:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "3935:42:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_PresaleData_$7661_storage",
                            typeString:
                              "struct Presale.PresaleData storage ref",
                          },
                        },
                        id: 7856,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "startingTime",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 7654,
                        src: "3935:55:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          baseExpression: {
                            id: 7857,
                            name: "presaleDetailsMapping",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7683,
                            src: "4004:21:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                              typeString:
                                "mapping(uint256 => struct Presale.PresaleData storage ref)",
                            },
                          },
                          id: 7859,
                          indexExpression: {
                            id: 7858,
                            name: "currentPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7849,
                            src: "4026:19:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "4004:42:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_PresaleData_$7661_storage",
                            typeString:
                              "struct Presale.PresaleData storage ref",
                          },
                        },
                        id: 7860,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "usdPrice",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 7656,
                        src: "4004:51:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          baseExpression: {
                            id: 7861,
                            name: "presaleDetailsMapping",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7683,
                            src: "4069:21:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                              typeString:
                                "mapping(uint256 => struct Presale.PresaleData storage ref)",
                            },
                          },
                          id: 7863,
                          indexExpression: {
                            id: 7862,
                            name: "currentPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7849,
                            src: "4091:19:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "4069:42:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_PresaleData_$7661_storage",
                            typeString:
                              "struct Presale.PresaleData storage ref",
                          },
                        },
                        id: 7864,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "minimumUSDPurchase",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 7658,
                        src: "4069:61:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          baseExpression: {
                            id: 7865,
                            name: "presaleDetailsMapping",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7683,
                            src: "4144:21:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                              typeString:
                                "mapping(uint256 => struct Presale.PresaleData storage ref)",
                            },
                          },
                          id: 7867,
                          indexExpression: {
                            id: 7866,
                            name: "currentPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7849,
                            src: "4166:19:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "4144:42:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_PresaleData_$7661_storage",
                            typeString:
                              "struct Presale.PresaleData storage ref",
                          },
                        },
                        id: 7868,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "maximumPresaleAmount",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 7660,
                        src: "4144:63:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    id: 7869,
                    isConstant: false,
                    isInlineArray: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "TupleExpression",
                    src: "3921:296:46",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      typeString: "tuple(uint256,uint256,uint256,uint256)",
                    },
                  },
                  functionReturnParameters: 7847,
                  id: 7870,
                  nodeType: "Return",
                  src: "3914:303:46",
                },
              ],
            },
            documentation: {
              id: 7837,
              nodeType: "StructuredDocumentation",
              src: "3486:170:46",
              text: " Getting the Current Presale Details, including:\n - Starting Time\n - USD Price\n - Minimum USD Purchase\n - Maximum Presale Amount",
            },
            functionSelector: "ec2b3523",
            id: 7872,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "getCurrentPresaleDetails",
            nameLocation: "3670:24:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7838,
              nodeType: "ParameterList",
              parameters: [],
              src: "3694:2:46",
            },
            returnParameters: {
              id: 7847,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7840,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7872,
                  src: "3755:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7839,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3755:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7842,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7872,
                  src: "3776:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7841,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3776:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7844,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7872,
                  src: "3797:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7843,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3797:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7846,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 7872,
                  src: "3818:7:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7845,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3818:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3741:94:46",
            },
            scope: 8249,
            src: "3661:563:46",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 8066,
              nodeType: "Block",
              src: "4736:2699:46",
              statements: [
                {
                  assignments: [7885, 7887, 7889, 7891],
                  declarations: [
                    {
                      constant: false,
                      id: 7885,
                      mutability: "mutable",
                      name: "currentPresaleStartingTime",
                      nameLocation: "4768:26:46",
                      nodeType: "VariableDeclaration",
                      scope: 8066,
                      src: "4760:34:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7884,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "4760:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                    {
                      constant: false,
                      id: 7887,
                      mutability: "mutable",
                      name: "currentPresalePrice",
                      nameLocation: "4816:19:46",
                      nodeType: "VariableDeclaration",
                      scope: 8066,
                      src: "4808:27:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7886,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "4808:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                    {
                      constant: false,
                      id: 7889,
                      mutability: "mutable",
                      name: "currentPresaleMinimumUSDPurchase",
                      nameLocation: "4857:32:46",
                      nodeType: "VariableDeclaration",
                      scope: 8066,
                      src: "4849:40:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7888,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "4849:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                    {
                      constant: false,
                      id: 7891,
                      mutability: "mutable",
                      name: "currentPresaleMaximumPresaleAmount",
                      nameLocation: "4911:34:46",
                      nodeType: "VariableDeclaration",
                      scope: 8066,
                      src: "4903:42:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7890,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "4903:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7894,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 7892,
                      name: "getCurrentPresaleDetails",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7872,
                      src: "4958:24:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        typeString:
                          "function () view returns (uint256,uint256,uint256,uint256)",
                      },
                    },
                    id: 7893,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4958:26:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier:
                        "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      typeString: "tuple(uint256,uint256,uint256,uint256)",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4746:238:46",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 7898,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 7895,
                        name: "block",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 4294967292,
                        src: "5056:5:46",
                        typeDescriptions: {
                          typeIdentifier: "t_magic_block",
                          typeString: "block",
                        },
                      },
                      id: 7896,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "timestamp",
                      nodeType: "MemberAccess",
                      src: "5056:15:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      id: 7897,
                      name: "currentPresaleStartingTime",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7885,
                      src: "5074:26:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "5056:44:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 7902,
                  nodeType: "IfStatement",
                  src: "5052:89:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 7899,
                        name: "presaleRoundClosed",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7693,
                        src: "5121:18:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 7900,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "5121:20:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 7901,
                    nodeType: "RevertStatement",
                    src: "5114:27:46",
                  },
                },
                {
                  condition: {
                    id: 7906,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "UnaryOperation",
                    operator: "!",
                    prefix: true,
                    src: "5196:54:46",
                    subExpression: {
                      baseExpression: {
                        id: 7903,
                        name: "presaleTokenAvailabilityMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7691,
                        src: "5197:31:46",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_address_$_t_bool_$",
                          typeString: "mapping(address => bool)",
                        },
                      },
                      id: 7905,
                      indexExpression: {
                        id: 7904,
                        name: "_paymentTokenAddress",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7875,
                        src: "5229:20:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "5197:53:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 7910,
                  nodeType: "IfStatement",
                  src: "5192:105:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 7907,
                        name: "presaleTokenNotAvailable",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7695,
                        src: "5271:24:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 7908,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "5271:26:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 7909,
                    nodeType: "RevertStatement",
                    src: "5264:33:46",
                  },
                },
                {
                  assignments: [7913],
                  declarations: [
                    {
                      constant: false,
                      id: 7913,
                      mutability: "mutable",
                      name: "token",
                      nameLocation: "5376:5:46",
                      nodeType: "VariableDeclaration",
                      scope: 8066,
                      src: "5363:18:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_IERC20Custom_$9421",
                        typeString: "contract IERC20Custom",
                      },
                      typeName: {
                        id: 7912,
                        nodeType: "UserDefinedTypeName",
                        pathNode: {
                          id: 7911,
                          name: "IERC20Custom",
                          nodeType: "IdentifierPath",
                          referencedDeclaration: 9421,
                          src: "5363:12:46",
                        },
                        referencedDeclaration: 9421,
                        src: "5363:12:46",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_IERC20Custom_$9421",
                          typeString: "contract IERC20Custom",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7917,
                  initialValue: {
                    arguments: [
                      {
                        id: 7915,
                        name: "tokenAddress",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7676,
                        src: "5397:12:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      id: 7914,
                      name: "IERC20Custom",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 9421,
                      src: "5384:12:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_type$_t_contract$_IERC20Custom_$9421_$",
                        typeString: "type(contract IERC20Custom)",
                      },
                    },
                    id: 7916,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "typeConversion",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5384:26:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_contract$_IERC20Custom_$9421",
                      typeString: "contract IERC20Custom",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "5363:47:46",
                },
                {
                  assignments: [7920],
                  declarations: [
                    {
                      constant: false,
                      id: 7920,
                      mutability: "mutable",
                      name: "priceFeed",
                      nameLocation: "5442:9:46",
                      nodeType: "VariableDeclaration",
                      scope: 8066,
                      src: "5420:31:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_AggregatorV3Interface_$45",
                        typeString: "contract AggregatorV3Interface",
                      },
                      typeName: {
                        id: 7919,
                        nodeType: "UserDefinedTypeName",
                        pathNode: {
                          id: 7918,
                          name: "AggregatorV3Interface",
                          nodeType: "IdentifierPath",
                          referencedDeclaration: 45,
                          src: "5420:21:46",
                        },
                        referencedDeclaration: 45,
                        src: "5420:21:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_contract$_AggregatorV3Interface_$45",
                          typeString: "contract AggregatorV3Interface",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7924,
                  initialValue: {
                    arguments: [
                      {
                        id: 7922,
                        name: "_aggregatorTokenAddress",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7879,
                        src: "5489:23:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      id: 7921,
                      name: "AggregatorV3Interface",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 45,
                      src: "5454:21:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                        typeString: "type(contract AggregatorV3Interface)",
                      },
                    },
                    id: 7923,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "typeConversion",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5454:68:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_contract$_AggregatorV3Interface_$45",
                      typeString: "contract AggregatorV3Interface",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "5420:102:46",
                },
                {
                  assignments: [null, 7926, null, null, null],
                  declarations: [
                    null,
                    {
                      constant: false,
                      id: 7926,
                      mutability: "mutable",
                      name: "price",
                      nameLocation: "5542:5:46",
                      nodeType: "VariableDeclaration",
                      scope: 8066,
                      src: "5535:12:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_int256",
                        typeString: "int256",
                      },
                      typeName: {
                        id: 7925,
                        name: "int256",
                        nodeType: "ElementaryTypeName",
                        src: "5535:6:46",
                        typeDescriptions: {
                          typeIdentifier: "t_int256",
                          typeString: "int256",
                        },
                      },
                      visibility: "internal",
                    },
                    null,
                    null,
                    null,
                  ],
                  id: 7930,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 7927,
                        name: "priceFeed",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7920,
                        src: "5557:9:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_contract$_AggregatorV3Interface_$45",
                          typeString: "contract AggregatorV3Interface",
                        },
                      },
                      id: 7928,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "latestRoundData",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 44,
                      src: "5557:25:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        typeString:
                          "function () view external returns (uint80,int256,uint256,uint256,uint80)",
                      },
                    },
                    id: 7929,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5557:27:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier:
                        "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      typeString: "tuple(uint80,int256,uint256,uint256,uint80)",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "5532:52:46",
                },
                {
                  assignments: [7932],
                  declarations: [
                    {
                      constant: false,
                      id: 7932,
                      mutability: "mutable",
                      name: "presaleUSDAmount",
                      nameLocation: "5602:16:46",
                      nodeType: "VariableDeclaration",
                      scope: 8066,
                      src: "5594:24:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7931,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "5594:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7950,
                  initialValue: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                id: 7939,
                                name: "price",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 7926,
                                src: "5719:5:46",
                                typeDescriptions: {
                                  typeIdentifier: "t_int256",
                                  typeString: "int256",
                                },
                              },
                              {
                                arguments: [],
                                expression: {
                                  argumentTypes: [],
                                  expression: {
                                    id: 7940,
                                    name: "priceFeed",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7920,
                                    src: "5746:9:46",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_contract$_AggregatorV3Interface_$45",
                                      typeString:
                                        "contract AggregatorV3Interface",
                                    },
                                  },
                                  id: 7941,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "decimals",
                                  nodeType: "MemberAccess",
                                  referencedDeclaration: 6,
                                  src: "5746:18:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_external_view$__$returns$_t_uint8_$",
                                    typeString:
                                      "function () view external returns (uint8)",
                                  },
                                },
                                id: 7942,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "5746:20:46",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_uint8",
                                  typeString: "uint8",
                                },
                              },
                              {
                                arguments: [],
                                expression: {
                                  argumentTypes: [],
                                  expression: {
                                    id: 7943,
                                    name: "token",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7913,
                                    src: "5788:5:46",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_contract$_IERC20Custom_$9421",
                                      typeString: "contract IERC20Custom",
                                    },
                                  },
                                  id: 7944,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "decimals",
                                  nodeType: "MemberAccess",
                                  referencedDeclaration: 9375,
                                  src: "5788:14:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_external_view$__$returns$_t_uint8_$",
                                    typeString:
                                      "function () view external returns (uint8)",
                                  },
                                },
                                id: 7945,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "5788:16:46",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_uint8",
                                  typeString: "uint8",
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_int256",
                                  typeString: "int256",
                                },
                                {
                                  typeIdentifier: "t_uint8",
                                  typeString: "uint8",
                                },
                                {
                                  typeIdentifier: "t_uint8",
                                  typeString: "uint8",
                                },
                              ],
                              expression: {
                                id: 7937,
                                name: "PriceConverter",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 7631,
                                src: "5672:14:46",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_type$_t_contract$_PriceConverter_$7631_$",
                                  typeString: "type(library PriceConverter)",
                                },
                              },
                              id: 7938,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "scalePrice",
                              nodeType: "MemberAccess",
                              referencedDeclaration: 7630,
                              src: "5672:25:46",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_function_internal_pure$_t_int256_$_t_uint8_$_t_uint8_$returns$_t_int256_$",
                                typeString:
                                  "function (int256,uint8,uint8) pure returns (int256)",
                              },
                            },
                            id: 7946,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "functionCall",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "5672:150:46",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_int256",
                              typeString: "int256",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_int256",
                              typeString: "int256",
                            },
                          ],
                          id: 7936,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "5647:7:46",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_uint256_$",
                            typeString: "type(uint256)",
                          },
                          typeName: {
                            id: 7935,
                            name: "uint256",
                            nodeType: "ElementaryTypeName",
                            src: "5647:7:46",
                            typeDescriptions: {},
                          },
                        },
                        id: 7947,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "5647:189:46",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        id: 7948,
                        name: "_amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7877,
                        src: "5850:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 7933,
                        name: "SafeMath",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7057,
                        src: "5621:8:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_SafeMath_$7057_$",
                          typeString: "type(library SafeMath)",
                        },
                      },
                      id: 7934,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "mul",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 6951,
                      src: "5621:12:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        typeString:
                          "function (uint256,uint256) pure returns (uint256)",
                      },
                    },
                    id: 7949,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5621:246:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "5594:273:46",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 7953,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 7951,
                      name: "presaleUSDAmount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7932,
                      src: "5882:16:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      id: 7952,
                      name: "currentPresaleMinimumUSDPurchase",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7889,
                      src: "5901:32:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "5882:51:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 7957,
                  nodeType: "IfStatement",
                  src: "5878:109:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 7954,
                        name: "presaleUSDPurchaseNotSufficient",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7707,
                        src: "5954:31:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 7955,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "5954:33:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 7956,
                    nodeType: "RevertStatement",
                    src: "5947:40:46",
                  },
                },
                {
                  assignments: [7959],
                  declarations: [
                    {
                      constant: false,
                      id: 7959,
                      mutability: "mutable",
                      name: "presaleAmount",
                      nameLocation: "6006:13:46",
                      nodeType: "VariableDeclaration",
                      scope: 8066,
                      src: "5998:21:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 7958,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "5998:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 7976,
                  initialValue: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    id: 7968,
                                    name: "presaleUSDAmount",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7932,
                                    src: "6106:16:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  {
                                    id: 7969,
                                    name: "currentPresalePrice",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7887,
                                    src: "6124:19:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                    {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  ],
                                  expression: {
                                    id: 7966,
                                    name: "SafeMath",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7057,
                                    src: "6093:8:46",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_type$_t_contract$_SafeMath_$7057_$",
                                      typeString: "type(library SafeMath)",
                                    },
                                  },
                                  id: 7967,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "div",
                                  nodeType: "MemberAccess",
                                  referencedDeclaration: 6966,
                                  src: "6093:12:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    typeString:
                                      "function (uint256,uint256) pure returns (uint256)",
                                  },
                                },
                                id: 7970,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "6093:51:46",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              ],
                              id: 7965,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "6086:6:46",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_int256_$",
                                typeString: "type(int256)",
                              },
                              typeName: {
                                id: 7964,
                                name: "int256",
                                nodeType: "ElementaryTypeName",
                                src: "6086:6:46",
                                typeDescriptions: {},
                              },
                            },
                            id: 7971,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "6086:59:46",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_int256",
                              typeString: "int256",
                            },
                          },
                          {
                            hexValue: "30",
                            id: 7972,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "6163:1:46",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_0_by_1",
                              typeString: "int_const 0",
                            },
                            value: "0",
                          },
                          {
                            hexValue: "3138",
                            id: 7973,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "6182:2:46",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_18_by_1",
                              typeString: "int_const 18",
                            },
                            value: "18",
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_int256",
                              typeString: "int256",
                            },
                            {
                              typeIdentifier: "t_rational_0_by_1",
                              typeString: "int_const 0",
                            },
                            {
                              typeIdentifier: "t_rational_18_by_1",
                              typeString: "int_const 18",
                            },
                          ],
                          expression: {
                            id: 7962,
                            name: "PriceConverter",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7631,
                            src: "6043:14:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_type$_t_contract$_PriceConverter_$7631_$",
                              typeString: "type(library PriceConverter)",
                            },
                          },
                          id: 7963,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "scalePrice",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 7630,
                          src: "6043:25:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_pure$_t_int256_$_t_uint8_$_t_uint8_$returns$_t_int256_$",
                            typeString:
                              "function (int256,uint8,uint8) pure returns (int256)",
                          },
                        },
                        id: 7974,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "6043:155:46",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_int256",
                          typeString: "int256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_int256",
                          typeString: "int256",
                        },
                      ],
                      id: 7961,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      nodeType: "ElementaryTypeNameExpression",
                      src: "6022:7:46",
                      typeDescriptions: {
                        typeIdentifier: "t_type$_t_uint256_$",
                        typeString: "type(uint256)",
                      },
                      typeName: {
                        id: 7960,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6022:7:46",
                        typeDescriptions: {},
                      },
                    },
                    id: 7975,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "typeConversion",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "6022:186:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "5998:210:46",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 7984,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 7977,
                      name: "presaleAmount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7959,
                      src: "6236:13:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: ">",
                    rightExpression: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 7983,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 7978,
                        name: "currentPresaleMaximumPresaleAmount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7891,
                        src: "6264:34:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "-",
                      rightExpression: {
                        baseExpression: {
                          id: 7979,
                          name: "presaleAmountByRoundMapping",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7687,
                          src: "6317:27:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_uint256_$",
                            typeString: "mapping(uint256 => uint256)",
                          },
                        },
                        id: 7982,
                        indexExpression: {
                          arguments: [],
                          expression: {
                            argumentTypes: [],
                            id: 7980,
                            name: "getCurrentPresaleRound",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7836,
                            src: "6345:22:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_internal_view$__$returns$_t_uint256_$",
                              typeString: "function () view returns (uint256)",
                            },
                          },
                          id: 7981,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "6345:24:46",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "6317:53:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "6264:106:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "6236:134:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 7988,
                  nodeType: "IfStatement",
                  src: "6219:194:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 7985,
                        name: "presaleAmountOverdemand",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7709,
                        src: "6388:23:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 7986,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "6388:25:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 7987,
                    nodeType: "RevertStatement",
                    src: "6381:32:46",
                  },
                },
                {
                  expression: {
                    id: 7994,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 7989,
                        name: "presaleAmountByRoundMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7687,
                        src: "6424:27:46",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                          typeString: "mapping(uint256 => uint256)",
                        },
                      },
                      id: 7992,
                      indexExpression: {
                        arguments: [],
                        expression: {
                          argumentTypes: [],
                          id: 7990,
                          name: "getCurrentPresaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7836,
                          src: "6452:22:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_view$__$returns$_t_uint256_$",
                            typeString: "function () view returns (uint256)",
                          },
                        },
                        id: 7991,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "6452:24:46",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "6424:53:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "+=",
                    rightHandSide: {
                      id: 7993,
                      name: "presaleAmount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7959,
                      src: "6481:13:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "6424:70:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 7995,
                  nodeType: "ExpressionStatement",
                  src: "6424:70:46",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    id: 8001,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 7996,
                      name: "_paymentTokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7875,
                      src: "6581:20:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      arguments: [
                        {
                          hexValue: "30",
                          id: 7999,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "6613:1:46",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                          value: "0",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                        ],
                        id: 7998,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        nodeType: "ElementaryTypeNameExpression",
                        src: "6605:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_type$_t_address_$",
                          typeString: "type(address)",
                        },
                        typeName: {
                          id: 7997,
                          name: "address",
                          nodeType: "ElementaryTypeName",
                          src: "6605:7:46",
                          typeDescriptions: {},
                        },
                      },
                      id: 8000,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "typeConversion",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "6605:10:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "6581:34:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  falseBody: {
                    id: 8048,
                    nodeType: "Block",
                    src: "7043:152:46",
                    statements: [
                      {
                        assignments: [8034],
                        declarations: [
                          {
                            constant: false,
                            id: 8034,
                            mutability: "mutable",
                            name: "paymentToken",
                            nameLocation: "7064:12:46",
                            nodeType: "VariableDeclaration",
                            scope: 8048,
                            src: "7057:19:46",
                            stateVariable: false,
                            storageLocation: "default",
                            typeDescriptions: {
                              typeIdentifier: "t_contract$_IERC20_$2884",
                              typeString: "contract IERC20",
                            },
                            typeName: {
                              id: 8033,
                              nodeType: "UserDefinedTypeName",
                              pathNode: {
                                id: 8032,
                                name: "IERC20",
                                nodeType: "IdentifierPath",
                                referencedDeclaration: 2884,
                                src: "7057:6:46",
                              },
                              referencedDeclaration: 2884,
                              src: "7057:6:46",
                              typeDescriptions: {
                                typeIdentifier: "t_contract$_IERC20_$2884",
                                typeString: "contract IERC20",
                              },
                            },
                            visibility: "internal",
                          },
                        ],
                        id: 8038,
                        initialValue: {
                          arguments: [
                            {
                              id: 8036,
                              name: "_paymentTokenAddress",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7875,
                              src: "7086:20:46",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            ],
                            id: 8035,
                            name: "IERC20",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2884,
                            src: "7079:6:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_type$_t_contract$_IERC20_$2884_$",
                              typeString: "type(contract IERC20)",
                            },
                          },
                          id: 8037,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "7079:28:46",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_contract$_IERC20_$2884",
                            typeString: "contract IERC20",
                          },
                        },
                        nodeType: "VariableDeclarationStatement",
                        src: "7057:50:46",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              expression: {
                                id: 8042,
                                name: "msg",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 4294967281,
                                src: "7147:3:46",
                                typeDescriptions: {
                                  typeIdentifier: "t_magic_message",
                                  typeString: "msg",
                                },
                              },
                              id: 8043,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "sender",
                              nodeType: "MemberAccess",
                              src: "7147:10:46",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            {
                              id: 8044,
                              name: "presaleReceiver",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7678,
                              src: "7159:15:46",
                              typeDescriptions: {
                                typeIdentifier: "t_address_payable",
                                typeString: "address payable",
                              },
                            },
                            {
                              id: 8045,
                              name: "_amount",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 7877,
                              src: "7176:7:46",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                              {
                                typeIdentifier: "t_address_payable",
                                typeString: "address payable",
                              },
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            ],
                            expression: {
                              id: 8039,
                              name: "paymentToken",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 8034,
                              src: "7121:12:46",
                              typeDescriptions: {
                                typeIdentifier: "t_contract$_IERC20_$2884",
                                typeString: "contract IERC20",
                              },
                            },
                            id: 8041,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "transferFrom",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 2865,
                            src: "7121:25:46",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              typeString:
                                "function (address,address,uint256) external returns (bool)",
                            },
                          },
                          id: 8046,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "7121:63:46",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 8047,
                        nodeType: "ExpressionStatement",
                        src: "7121:63:46",
                      },
                    ],
                  },
                  id: 8049,
                  nodeType: "IfStatement",
                  src: "6577:618:46",
                  trueBody: {
                    id: 8031,
                    nodeType: "Block",
                    src: "6617:420:46",
                    statements: [
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 8005,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              id: 8002,
                              name: "msg",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967281,
                              src: "6635:3:46",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_message",
                                typeString: "msg",
                              },
                            },
                            id: 8003,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "value",
                            nodeType: "MemberAccess",
                            src: "6635:9:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "<",
                          rightExpression: {
                            id: 8004,
                            name: "_amount",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 7877,
                            src: "6647:7:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "6635:19:46",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        falseBody: {
                          id: 8029,
                          nodeType: "Block",
                          src: "6742:285:46",
                          statements: [
                            {
                              expression: {
                                arguments: [
                                  {
                                    id: 8013,
                                    name: "_amount",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7877,
                                    src: "6785:7:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  ],
                                  expression: {
                                    id: 8010,
                                    name: "presaleReceiver",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 7678,
                                    src: "6760:15:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_address_payable",
                                      typeString: "address payable",
                                    },
                                  },
                                  id: 8012,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "transfer",
                                  nodeType: "MemberAccess",
                                  src: "6760:24:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    typeString: "function (uint256)",
                                  },
                                },
                                id: 8014,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "6760:33:46",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_tuple$__$",
                                  typeString: "tuple()",
                                },
                              },
                              id: 8015,
                              nodeType: "ExpressionStatement",
                              src: "6760:33:46",
                            },
                            {
                              expression: {
                                arguments: [
                                  {
                                    expression: {
                                      arguments: [
                                        {
                                          id: 8024,
                                          name: "this",
                                          nodeType: "Identifier",
                                          overloadedDeclarations: [],
                                          referencedDeclaration: 4294967268,
                                          src: "6998:4:46",
                                          typeDescriptions: {
                                            typeIdentifier:
                                              "t_contract$_Presale_$8249",
                                            typeString: "contract Presale",
                                          },
                                        },
                                      ],
                                      expression: {
                                        argumentTypes: [
                                          {
                                            typeIdentifier:
                                              "t_contract$_Presale_$8249",
                                            typeString: "contract Presale",
                                          },
                                        ],
                                        id: 8023,
                                        isConstant: false,
                                        isLValue: false,
                                        isPure: true,
                                        lValueRequested: false,
                                        nodeType:
                                          "ElementaryTypeNameExpression",
                                        src: "6990:7:46",
                                        typeDescriptions: {
                                          typeIdentifier: "t_type$_t_address_$",
                                          typeString: "type(address)",
                                        },
                                        typeName: {
                                          id: 8022,
                                          name: "address",
                                          nodeType: "ElementaryTypeName",
                                          src: "6990:7:46",
                                          typeDescriptions: {},
                                        },
                                      },
                                      id: 8025,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: false,
                                      kind: "typeConversion",
                                      lValueRequested: false,
                                      names: [],
                                      nodeType: "FunctionCall",
                                      src: "6990:13:46",
                                      tryCall: false,
                                      typeDescriptions: {
                                        typeIdentifier: "t_address",
                                        typeString: "address",
                                      },
                                    },
                                    id: 8026,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    lValueRequested: false,
                                    memberName: "balance",
                                    nodeType: "MemberAccess",
                                    src: "6990:21:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  ],
                                  expression: {
                                    arguments: [
                                      {
                                        expression: {
                                          id: 8018,
                                          name: "msg",
                                          nodeType: "Identifier",
                                          overloadedDeclarations: [],
                                          referencedDeclaration: 4294967281,
                                          src: "6969:3:46",
                                          typeDescriptions: {
                                            typeIdentifier: "t_magic_message",
                                            typeString: "msg",
                                          },
                                        },
                                        id: 8019,
                                        isConstant: false,
                                        isLValue: false,
                                        isPure: false,
                                        lValueRequested: false,
                                        memberName: "sender",
                                        nodeType: "MemberAccess",
                                        src: "6969:10:46",
                                        typeDescriptions: {
                                          typeIdentifier: "t_address",
                                          typeString: "address",
                                        },
                                      },
                                    ],
                                    expression: {
                                      argumentTypes: [
                                        {
                                          typeIdentifier: "t_address",
                                          typeString: "address",
                                        },
                                      ],
                                      id: 8017,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: true,
                                      lValueRequested: false,
                                      nodeType: "ElementaryTypeNameExpression",
                                      src: "6961:8:46",
                                      typeDescriptions: {
                                        typeIdentifier:
                                          "t_type$_t_address_payable_$",
                                        typeString: "type(address payable)",
                                      },
                                      typeName: {
                                        id: 8016,
                                        name: "address",
                                        nodeType: "ElementaryTypeName",
                                        src: "6961:8:46",
                                        stateMutability: "payable",
                                        typeDescriptions: {},
                                      },
                                    },
                                    id: 8020,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    kind: "typeConversion",
                                    lValueRequested: false,
                                    names: [],
                                    nodeType: "FunctionCall",
                                    src: "6961:19:46",
                                    tryCall: false,
                                    typeDescriptions: {
                                      typeIdentifier: "t_address_payable",
                                      typeString: "address payable",
                                    },
                                  },
                                  id: 8021,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "transfer",
                                  nodeType: "MemberAccess",
                                  src: "6961:28:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    typeString: "function (uint256)",
                                  },
                                },
                                id: 8027,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "6961:51:46",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_tuple$__$",
                                  typeString: "tuple()",
                                },
                              },
                              id: 8028,
                              nodeType: "ExpressionStatement",
                              src: "6961:51:46",
                            },
                          ],
                        },
                        id: 8030,
                        nodeType: "IfStatement",
                        src: "6631:396:46",
                        trueBody: {
                          id: 8009,
                          nodeType: "Block",
                          src: "6656:80:46",
                          statements: [
                            {
                              errorCall: {
                                arguments: [],
                                expression: {
                                  argumentTypes: [],
                                  id: 8006,
                                  name: "presaleNativeTokenPaymentNotSufficient",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 7697,
                                  src: "6681:38:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_error_pure$__$returns$__$",
                                    typeString: "function () pure",
                                  },
                                },
                                id: 8007,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "6681:40:46",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_tuple$__$",
                                  typeString: "tuple()",
                                },
                              },
                              id: 8008,
                              nodeType: "RevertStatement",
                              src: "6674:47:46",
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
                {
                  expression: {
                    arguments: [
                      {
                        expression: {
                          id: 8053,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 4294967281,
                          src: "7259:3:46",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 8054,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        src: "7259:10:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 8055,
                        name: "presaleAmount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7959,
                        src: "7271:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 8050,
                        name: "token",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7913,
                        src: "7248:5:46",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_IERC20Custom_$9421",
                          typeString: "contract IERC20Custom",
                        },
                      },
                      id: 8052,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "mint",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 9408,
                      src: "7248:10:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,uint256) external",
                      },
                    },
                    id: 8056,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "7248:37:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 8057,
                  nodeType: "ExpressionStatement",
                  src: "7248:37:46",
                },
                {
                  eventCall: {
                    arguments: [
                      {
                        expression: {
                          id: 8059,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 4294967281,
                          src: "7326:3:46",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 8060,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        src: "7326:10:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 8061,
                        name: "_paymentTokenAddress",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7875,
                        src: "7350:20:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 8062,
                        name: "presaleAmount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7959,
                        src: "7384:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        id: 8063,
                        name: "_amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7877,
                        src: "7411:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 8058,
                      name: "TokenPresold",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7671,
                      src: "7300:12:46",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        typeString:
                          "function (address,address,uint256,uint256)",
                      },
                    },
                    id: 8064,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "7300:128:46",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 8065,
                  nodeType: "EmitStatement",
                  src: "7295:133:46",
                },
              ],
            },
            documentation: {
              id: 7873,
              nodeType: "StructuredDocumentation",
              src: "4230:340:46",
              text: " Execute the Presale of ALPS Token in exchange of other token\n @dev _paymentTokenAddress - Address of the token use to pay (address 0 is for native token)\n @dev _amount - Amount denominated in the `paymentTokenAddress` being paid\n @dev _aggregatorTokenAddress - Use to convert price with Chainlink",
            },
            functionSelector: "6a107cd8",
            id: 8067,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 7882,
                kind: "modifierInvocation",
                modifierName: {
                  id: 7881,
                  name: "nonReentrant",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 741,
                  src: "4723:12:46",
                },
                nodeType: "ModifierInvocation",
                src: "4723:12:46",
              },
            ],
            name: "presaleTokens",
            nameLocation: "4584:13:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 7880,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 7875,
                  mutability: "mutable",
                  name: "_paymentTokenAddress",
                  nameLocation: "4615:20:46",
                  nodeType: "VariableDeclaration",
                  scope: 8067,
                  src: "4607:28:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7874,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "4607:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7877,
                  mutability: "mutable",
                  name: "_amount",
                  nameLocation: "4653:7:46",
                  nodeType: "VariableDeclaration",
                  scope: 8067,
                  src: "4645:15:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 7876,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "4645:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 7879,
                  mutability: "mutable",
                  name: "_aggregatorTokenAddress",
                  nameLocation: "4678:23:46",
                  nodeType: "VariableDeclaration",
                  scope: 8067,
                  src: "4670:31:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 7878,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "4670:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "4597:110:46",
            },
            returnParameters: {
              id: 7883,
              nodeType: "ParameterList",
              parameters: [],
              src: "4736:0:46",
            },
            scope: 8249,
            src: "4575:2860:46",
            stateMutability: "payable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 8079,
              nodeType: "Block",
              src: "7690:54:46",
              statements: [
                {
                  expression: {
                    id: 8077,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 8075,
                      name: "presaleReceiver",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7678,
                      src: "7700:15:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8076,
                      name: "_newPresaleReceiver",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 8070,
                      src: "7718:19:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    src: "7700:37:46",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  id: 8078,
                  nodeType: "ExpressionStatement",
                  src: "7700:37:46",
                },
              ],
            },
            documentation: {
              id: 8068,
              nodeType: "StructuredDocumentation",
              src: "7441:142:46",
              text: " Set new Presale Receiver Address\n @dev _newPresaleReceiver - Address that'll receive the presale payment token",
            },
            functionSelector: "feda925b",
            id: 8080,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 8073,
                kind: "modifierInvocation",
                modifierName: {
                  id: 8072,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 474,
                  src: "7676:9:46",
                },
                nodeType: "ModifierInvocation",
                src: "7676:9:46",
              },
            ],
            name: "setPresaleReceiver",
            nameLocation: "7597:18:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 8071,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 8070,
                  mutability: "mutable",
                  name: "_newPresaleReceiver",
                  nameLocation: "7632:19:46",
                  nodeType: "VariableDeclaration",
                  scope: 8080,
                  src: "7616:35:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address_payable",
                    typeString: "address payable",
                  },
                  typeName: {
                    id: 8069,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "7616:15:46",
                    stateMutability: "payable",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "7615:37:46",
            },
            returnParameters: {
              id: 8074,
              nodeType: "ParameterList",
              parameters: [],
              src: "7690:0:46",
            },
            scope: 8249,
            src: "7588:156:46",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 8095,
              nodeType: "Block",
              src: "8015:48:46",
              statements: [
                {
                  expression: {
                    id: 8093,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 8091,
                      name: "tokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 7676,
                      src: "8025:12:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8092,
                      name: "_newTokenAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 8083,
                      src: "8040:16:46",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "8025:31:46",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 8094,
                  nodeType: "ExpressionStatement",
                  src: "8025:31:46",
                },
              ],
            },
            documentation: {
              id: 8081,
              nodeType: "StructuredDocumentation",
              src: "7750:123:46",
              text: " Set new Presale Token Address\n @dev _newTokenAddress - Address of token that'll be presaled",
            },
            functionSelector: "3c0c134d",
            id: 8096,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 8086,
                kind: "modifierInvocation",
                modifierName: {
                  id: 8085,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 474,
                  src: "7959:9:46",
                },
                nodeType: "ModifierInvocation",
                src: "7959:9:46",
              },
              {
                arguments: [
                  {
                    id: 8088,
                    name: "_newTokenAddress",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 8083,
                    src: "7993:16:46",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                ],
                id: 8089,
                kind: "modifierInvocation",
                modifierName: {
                  id: 8087,
                  name: "onlyValidTokens",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 7727,
                  src: "7977:15:46",
                },
                nodeType: "ModifierInvocation",
                src: "7977:33:46",
              },
            ],
            name: "setPresaleTokenAddress",
            nameLocation: "7887:22:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 8084,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 8083,
                  mutability: "mutable",
                  name: "_newTokenAddress",
                  nameLocation: "7918:16:46",
                  nodeType: "VariableDeclaration",
                  scope: 8096,
                  src: "7910:24:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 8082,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "7910:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "7909:26:46",
            },
            returnParameters: {
              id: 8090,
              nodeType: "ParameterList",
              parameters: [],
              src: "8015:0:46",
            },
            scope: 8249,
            src: "7878:185:46",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 8111,
              nodeType: "Block",
              src: "8186:84:46",
              statements: [
                {
                  expression: {
                    id: 8109,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 8105,
                        name: "presaleTokenAvailabilityMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7691,
                        src: "8196:31:46",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_address_$_t_bool_$",
                          typeString: "mapping(address => bool)",
                        },
                      },
                      id: 8107,
                      indexExpression: {
                        id: 8106,
                        name: "_tokenAddress",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 8098,
                        src: "8228:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "8196:46:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8108,
                      name: "_tokenAvailability",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 8100,
                      src: "8245:18:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    src: "8196:67:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8110,
                  nodeType: "ExpressionStatement",
                  src: "8196:67:46",
                },
              ],
            },
            functionSelector: "0c115a74",
            id: 8112,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 8103,
                kind: "modifierInvocation",
                modifierName: {
                  id: 8102,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 474,
                  src: "8176:9:46",
                },
                nodeType: "ModifierInvocation",
                src: "8176:9:46",
              },
            ],
            name: "setTokenAvailability",
            nameLocation: "8078:20:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 8101,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 8098,
                  mutability: "mutable",
                  name: "_tokenAddress",
                  nameLocation: "8116:13:46",
                  nodeType: "VariableDeclaration",
                  scope: 8112,
                  src: "8108:21:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 8097,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "8108:7:46",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 8100,
                  mutability: "mutable",
                  name: "_tokenAvailability",
                  nameLocation: "8144:18:46",
                  nodeType: "VariableDeclaration",
                  scope: 8112,
                  src: "8139:23:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_bool",
                    typeString: "bool",
                  },
                  typeName: {
                    id: 8099,
                    name: "bool",
                    nodeType: "ElementaryTypeName",
                    src: "8139:4:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "8098:70:46",
            },
            returnParameters: {
              id: 8104,
              nodeType: "ParameterList",
              parameters: [],
              src: "8186:0:46",
            },
            scope: 8249,
            src: "8069:201:46",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 8247,
              nodeType: "Block",
              src: "8921:1721:46",
              statements: [
                {
                  assignments: [8129],
                  declarations: [
                    {
                      constant: false,
                      id: 8129,
                      mutability: "mutable",
                      name: "presaleStartingTime",
                      nameLocation: "8939:19:46",
                      nodeType: "VariableDeclaration",
                      scope: 8247,
                      src: "8931:27:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 8128,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "8931:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 8134,
                  initialValue: {
                    expression: {
                      baseExpression: {
                        id: 8130,
                        name: "presaleDetailsMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7683,
                        src: "8961:21:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                          typeString:
                            "mapping(uint256 => struct Presale.PresaleData storage ref)",
                        },
                      },
                      id: 8132,
                      indexExpression: {
                        id: 8131,
                        name: "_presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 8115,
                        src: "8983:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "8961:36:46",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                        typeString: "struct Presale.PresaleData storage ref",
                      },
                    },
                    id: 8133,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberName: "startingTime",
                    nodeType: "MemberAccess",
                    referencedDeclaration: 7654,
                    src: "8961:62:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "8931:92:46",
                },
                {
                  assignments: [8136],
                  declarations: [
                    {
                      constant: false,
                      id: 8136,
                      mutability: "mutable",
                      name: "presaleUSDPrice",
                      nameLocation: "9041:15:46",
                      nodeType: "VariableDeclaration",
                      scope: 8247,
                      src: "9033:23:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 8135,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "9033:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 8141,
                  initialValue: {
                    expression: {
                      baseExpression: {
                        id: 8137,
                        name: "presaleDetailsMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7683,
                        src: "9059:21:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                          typeString:
                            "mapping(uint256 => struct Presale.PresaleData storage ref)",
                        },
                      },
                      id: 8139,
                      indexExpression: {
                        id: 8138,
                        name: "_presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 8115,
                        src: "9081:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "9059:36:46",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                        typeString: "struct Presale.PresaleData storage ref",
                      },
                    },
                    id: 8140,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberName: "usdPrice",
                    nodeType: "MemberAccess",
                    referencedDeclaration: 7656,
                    src: "9059:45:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "9033:71:46",
                },
                {
                  assignments: [8143],
                  declarations: [
                    {
                      constant: false,
                      id: 8143,
                      mutability: "mutable",
                      name: "presaleMinimumUSDPurchase",
                      nameLocation: "9122:25:46",
                      nodeType: "VariableDeclaration",
                      scope: 8247,
                      src: "9114:33:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 8142,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "9114:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 8148,
                  initialValue: {
                    expression: {
                      baseExpression: {
                        id: 8144,
                        name: "presaleDetailsMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7683,
                        src: "9150:21:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                          typeString:
                            "mapping(uint256 => struct Presale.PresaleData storage ref)",
                        },
                      },
                      id: 8146,
                      indexExpression: {
                        id: 8145,
                        name: "_presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 8115,
                        src: "9172:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "9150:36:46",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                        typeString: "struct Presale.PresaleData storage ref",
                      },
                    },
                    id: 8147,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberName: "minimumUSDPurchase",
                    nodeType: "MemberAccess",
                    referencedDeclaration: 7658,
                    src: "9150:68:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "9114:104:46",
                },
                {
                  assignments: [8150],
                  declarations: [
                    {
                      constant: false,
                      id: 8150,
                      mutability: "mutable",
                      name: "presaleMaximumPresaleAmount",
                      nameLocation: "9236:27:46",
                      nodeType: "VariableDeclaration",
                      scope: 8247,
                      src: "9228:35:46",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 8149,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "9228:7:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 8155,
                  initialValue: {
                    expression: {
                      baseExpression: {
                        id: 8151,
                        name: "presaleDetailsMapping",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7683,
                        src: "9266:21:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                          typeString:
                            "mapping(uint256 => struct Presale.PresaleData storage ref)",
                        },
                      },
                      id: 8153,
                      indexExpression: {
                        id: 8152,
                        name: "_presaleRound",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 8115,
                        src: "9301:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "9266:58:46",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                        typeString: "struct Presale.PresaleData storage ref",
                      },
                    },
                    id: 8154,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberName: "maximumPresaleAmount",
                    nodeType: "MemberAccess",
                    referencedDeclaration: 7660,
                    src: "9266:79:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "9228:117:46",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    id: 8170,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      id: 8166,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        commonType: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        id: 8162,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 8158,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 8156,
                            name: "presaleStartingTime",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 8129,
                            src: "9446:19:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "==",
                          rightExpression: {
                            hexValue: "30",
                            id: 8157,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "9469:1:46",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_0_by_1",
                              typeString: "int_const 0",
                            },
                            value: "0",
                          },
                          src: "9446:24:46",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "&&",
                        rightExpression: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 8161,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 8159,
                            name: "presaleUSDPrice",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 8136,
                            src: "9486:15:46",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "==",
                          rightExpression: {
                            hexValue: "30",
                            id: 8160,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "9505:1:46",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_0_by_1",
                              typeString: "int_const 0",
                            },
                            value: "0",
                          },
                          src: "9486:20:46",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        src: "9446:60:46",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "&&",
                      rightExpression: {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 8165,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 8163,
                          name: "presaleMinimumUSDPurchase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 8143,
                          src: "9522:25:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "==",
                        rightExpression: {
                          hexValue: "30",
                          id: 8164,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "9551:1:46",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                          value: "0",
                        },
                        src: "9522:30:46",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      src: "9446:106:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "&&",
                    rightExpression: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 8169,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 8167,
                        name: "presaleMaximumPresaleAmount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 8150,
                        src: "9568:27:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "==",
                      rightExpression: {
                        hexValue: "30",
                        id: 8168,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "9599:1:46",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_0_by_1",
                          typeString: "int_const 0",
                        },
                        value: "0",
                      },
                      src: "9568:32:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    src: "9446:154:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8176,
                  nodeType: "IfStatement",
                  src: "9429:211:46",
                  trueBody: {
                    expression: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        expression: {
                          id: 8171,
                          name: "totalPresaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7674,
                          src: "9611:17:46",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Counter_$5303_storage",
                            typeString: "struct Counters.Counter storage ref",
                          },
                        },
                        id: 8173,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "increment",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 5329,
                        src: "9611:27:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_struct$_Counter_$5303_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$5303_storage_ptr_$",
                          typeString:
                            "function (struct Counters.Counter storage pointer)",
                        },
                      },
                      id: 8174,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "9611:29:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 8175,
                    nodeType: "ExpressionStatement",
                    src: "9611:29:46",
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    id: 8193,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 8179,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 8177,
                        name: "_startingTime",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 8117,
                        src: "9788:13:46",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "==",
                      rightExpression: {
                        hexValue: "30",
                        id: 8178,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "9805:1:46",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_0_by_1",
                          typeString: "int_const 0",
                        },
                        value: "0",
                      },
                      src: "9788:18:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "||",
                    rightExpression: {
                      components: [
                        {
                          commonType: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          id: 8191,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            commonType: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            id: 8182,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              id: 8180,
                              name: "_presaleRound",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 8115,
                              src: "9823:13:46",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            nodeType: "BinaryOperation",
                            operator: "!=",
                            rightExpression: {
                              hexValue: "30",
                              id: 8181,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "9840:1:46",
                              typeDescriptions: {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                              value: "0",
                            },
                            src: "9823:18:46",
                            typeDescriptions: {
                              typeIdentifier: "t_bool",
                              typeString: "bool",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "&&",
                          rightExpression: {
                            commonType: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            id: 8190,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              id: 8183,
                              name: "_startingTime",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 8117,
                              src: "9861:13:46",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            nodeType: "BinaryOperation",
                            operator: "<",
                            rightExpression: {
                              expression: {
                                baseExpression: {
                                  id: 8184,
                                  name: "presaleDetailsMapping",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 7683,
                                  src: "9893:21:46",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                                    typeString:
                                      "mapping(uint256 => struct Presale.PresaleData storage ref)",
                                  },
                                },
                                id: 8188,
                                indexExpression: {
                                  commonType: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                  id: 8187,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  leftExpression: {
                                    id: 8185,
                                    name: "_presaleRound",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 8115,
                                    src: "9915:13:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  nodeType: "BinaryOperation",
                                  operator: "-",
                                  rightExpression: {
                                    hexValue: "31",
                                    id: 8186,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: true,
                                    kind: "number",
                                    lValueRequested: false,
                                    nodeType: "Literal",
                                    src: "9931:1:46",
                                    typeDescriptions: {
                                      typeIdentifier: "t_rational_1_by_1",
                                      typeString: "int_const 1",
                                    },
                                    value: "1",
                                  },
                                  src: "9915:17:46",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: "IndexAccess",
                                src: "9893:40:46",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_PresaleData_$7661_storage",
                                  typeString:
                                    "struct Presale.PresaleData storage ref",
                                },
                              },
                              id: 8189,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "startingTime",
                              nodeType: "MemberAccess",
                              referencedDeclaration: 7654,
                              src: "9893:53:46",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            src: "9861:85:46",
                            typeDescriptions: {
                              typeIdentifier: "t_bool",
                              typeString: "bool",
                            },
                          },
                          src: "9823:123:46",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                      ],
                      id: 8192,
                      isConstant: false,
                      isInlineArray: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "TupleExpression",
                      src: "9822:125:46",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    src: "9788:159:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8197,
                  nodeType: "IfStatement",
                  src: "9771:222:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 8194,
                        name: "presaleStartingTimeInvalid",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7699,
                        src: "9965:26:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 8195,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "9965:28:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 8196,
                    nodeType: "RevertStatement",
                    src: "9958:35:46",
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 8200,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 8198,
                      name: "_usdPrice",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 8119,
                      src: "10063:9:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      hexValue: "30",
                      id: 8199,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "10076:1:46",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "10063:14:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8204,
                  nodeType: "IfStatement",
                  src: "10059:51:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 8201,
                        name: "presaleUSDPriceInvalid",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7701,
                        src: "10086:22:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 8202,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "10086:24:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 8203,
                    nodeType: "RevertStatement",
                    src: "10079:31:46",
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 8207,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 8205,
                      name: "_minimumUSDPurchase",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 8121,
                      src: "10124:19:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      hexValue: "30",
                      id: 8206,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "10147:1:46",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "10124:24:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8211,
                  nodeType: "IfStatement",
                  src: "10120:71:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 8208,
                        name: "presaleMimumumUSDPurchaseInvalid",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7703,
                        src: "10157:32:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 8209,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "10157:34:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 8210,
                    nodeType: "RevertStatement",
                    src: "10150:41:46",
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 8214,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 8212,
                      name: "_maximumPresaleAmount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 8123,
                      src: "10205:21:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      hexValue: "30",
                      id: 8213,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "10230:1:46",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "10205:26:46",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 8218,
                  nodeType: "IfStatement",
                  src: "10201:87:46",
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 8215,
                        name: "presaleMaximumPresaleAmountInvalid",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7705,
                        src: "10252:34:46",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_error_pure$__$returns$__$",
                          typeString: "function () pure",
                        },
                      },
                      id: 8216,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "10252:36:46",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 8217,
                    nodeType: "RevertStatement",
                    src: "10245:43:46",
                  },
                },
                {
                  expression: {
                    id: 8224,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 8219,
                          name: "presaleDetailsMapping",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7683,
                          src: "10299:21:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                            typeString:
                              "mapping(uint256 => struct Presale.PresaleData storage ref)",
                          },
                        },
                        id: 8221,
                        indexExpression: {
                          id: 8220,
                          name: "_presaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 8115,
                          src: "10321:13:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "10299:36:46",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                          typeString: "struct Presale.PresaleData storage ref",
                        },
                      },
                      id: 8222,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "startingTime",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 7654,
                      src: "10299:49:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8223,
                      name: "_startingTime",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 8117,
                      src: "10351:13:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "10299:65:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 8225,
                  nodeType: "ExpressionStatement",
                  src: "10299:65:46",
                },
                {
                  expression: {
                    id: 8231,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 8226,
                          name: "presaleDetailsMapping",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7683,
                          src: "10374:21:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                            typeString:
                              "mapping(uint256 => struct Presale.PresaleData storage ref)",
                          },
                        },
                        id: 8228,
                        indexExpression: {
                          id: 8227,
                          name: "_presaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 8115,
                          src: "10396:13:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "10374:36:46",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                          typeString: "struct Presale.PresaleData storage ref",
                        },
                      },
                      id: 8229,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "usdPrice",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 7656,
                      src: "10374:45:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8230,
                      name: "_usdPrice",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 8119,
                      src: "10422:9:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "10374:57:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 8232,
                  nodeType: "ExpressionStatement",
                  src: "10374:57:46",
                },
                {
                  expression: {
                    id: 8238,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 8233,
                          name: "presaleDetailsMapping",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7683,
                          src: "10441:21:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                            typeString:
                              "mapping(uint256 => struct Presale.PresaleData storage ref)",
                          },
                        },
                        id: 8235,
                        indexExpression: {
                          id: 8234,
                          name: "_presaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 8115,
                          src: "10463:13:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "10441:36:46",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                          typeString: "struct Presale.PresaleData storage ref",
                        },
                      },
                      id: 8236,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "minimumUSDPurchase",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 7658,
                      src: "10441:68:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8237,
                      name: "_minimumUSDPurchase",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 8121,
                      src: "10512:19:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "10441:90:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 8239,
                  nodeType: "ExpressionStatement",
                  src: "10441:90:46",
                },
                {
                  expression: {
                    id: 8245,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 8240,
                          name: "presaleDetailsMapping",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7683,
                          src: "10541:21:46",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_PresaleData_$7661_storage_$",
                            typeString:
                              "mapping(uint256 => struct Presale.PresaleData storage ref)",
                          },
                        },
                        id: 8242,
                        indexExpression: {
                          id: 8241,
                          name: "_presaleRound",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 8115,
                          src: "10563:13:46",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "10541:36:46",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_PresaleData_$7661_storage",
                          typeString: "struct Presale.PresaleData storage ref",
                        },
                      },
                      id: 8243,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "maximumPresaleAmount",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 7660,
                      src: "10541:70:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 8244,
                      name: "_maximumPresaleAmount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 8123,
                      src: "10614:21:46",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "10541:94:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 8246,
                  nodeType: "ExpressionStatement",
                  src: "10541:94:46",
                },
              ],
            },
            documentation: {
              id: 8113,
              nodeType: "StructuredDocumentation",
              src: "8276:427:46",
              text: " Creating/Updating a presale round information\n @dev _presaleRound - The presale round chosen\n @dev _startingTime - The starting Presale time\n @dev _usdPrice - The USD Price of the Token in certain Presale Round\n @dev _minimumUSDPurchase - The minimum USD amount to purchase the token\n @dev _maximumPresaleAmount - The maximum amount of token available for a presale round",
            },
            functionSelector: "c829d1db",
            id: 8248,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 8126,
                kind: "modifierInvocation",
                modifierName: {
                  id: 8125,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 474,
                  src: "8911:9:46",
                },
                nodeType: "ModifierInvocation",
                src: "8911:9:46",
              },
            ],
            name: "setPresaleRound",
            nameLocation: "8717:15:46",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 8124,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 8115,
                  mutability: "mutable",
                  name: "_presaleRound",
                  nameLocation: "8750:13:46",
                  nodeType: "VariableDeclaration",
                  scope: 8248,
                  src: "8742:21:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 8114,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "8742:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 8117,
                  mutability: "mutable",
                  name: "_startingTime",
                  nameLocation: "8781:13:46",
                  nodeType: "VariableDeclaration",
                  scope: 8248,
                  src: "8773:21:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 8116,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "8773:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 8119,
                  mutability: "mutable",
                  name: "_usdPrice",
                  nameLocation: "8812:9:46",
                  nodeType: "VariableDeclaration",
                  scope: 8248,
                  src: "8804:17:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 8118,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "8804:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 8121,
                  mutability: "mutable",
                  name: "_minimumUSDPurchase",
                  nameLocation: "8839:19:46",
                  nodeType: "VariableDeclaration",
                  scope: 8248,
                  src: "8831:27:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 8120,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "8831:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 8123,
                  mutability: "mutable",
                  name: "_maximumPresaleAmount",
                  nameLocation: "8876:21:46",
                  nodeType: "VariableDeclaration",
                  scope: 8248,
                  src: "8868:29:46",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 8122,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "8868:7:46",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "8732:171:46",
            },
            returnParameters: {
              id: 8127,
              nodeType: "ParameterList",
              parameters: [],
              src: "8921:0:46",
            },
            scope: 8249,
            src: "8708:1934:46",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
        ],
        scope: 8250,
        src: "515:10129:46",
        usedErrors: [
          7693, 7695, 7697, 7699, 7701, 7703, 7705, 7707, 7709, 7711,
        ],
      },
    ],
    src: "38:10607:46",
  },
  compiler: {
    name: "solc",
    version: "0.8.11+commit.d7f03943.Emscripten.clang",
  },
  networks: {
    "1337": {
      events: {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        "0x69902df1d9bae4b2a08b9e9d689906299b4b15ac10fbbf560d019b5c73fd35d6": {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "paymentTokenAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "paymentTokenamount",
              type: "uint256",
            },
          ],
          name: "TokenPresold",
          type: "event",
        },
      },
      links: {},
      address: "0xC9F297D336293Ff43635c2c69dD78FC4cdb08f5F",
      transactionHash:
        "0x204ff99b9ae146958ad339644f120c451f6e05ba09d3abb9da3db08e15938bdc",
    },
    "80001": {
      events: {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        "0x69902df1d9bae4b2a08b9e9d689906299b4b15ac10fbbf560d019b5c73fd35d6": {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "paymentTokenAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "paymentTokenamount",
              type: "uint256",
            },
          ],
          name: "TokenPresold",
          type: "event",
        },
      },
      links: {},
      address: "0x4E89A6Ead89849b1c3035AdD866337fB5bDC36c7",
      transactionHash:
        "0x8321b9dc21a41b9dc39acf8511110d64368a9b203db8dda5936ff16f08c6b62b",
    },
  },
  schemaVersion: "3.4.4",
  updatedAt: "2022-02-28T08:16:15.668Z",
  networkType: "ethereum",
  devdoc: {
    kind: "dev",
    methods: {
      "getPresaleAmountByRound(uint256)": {
        details: "_presaleRound - The presale round chosen",
      },
      "owner()": {
        details: "Returns the address of the current owner.",
      },
      "presaleTokens(address,uint256,address)": {
        details:
          "_paymentTokenAddress - Address of the token use to pay (address 0 is for native token)_amount - Amount denominated in the `paymentTokenAddress` being paid_aggregatorTokenAddress - Use to convert price with Chainlink",
      },
      "renounceOwnership()": {
        details:
          "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      },
      "setPresaleReceiver(address)": {
        details:
          "_newPresaleReceiver - Address that'll receive the presale payment token",
      },
      "setPresaleRound(uint256,uint256,uint256,uint256,uint256)": {
        details:
          "_presaleRound - The presale round chosen_startingTime - The starting Presale time_usdPrice - The USD Price of the Token in certain Presale Round_minimumUSDPurchase - The minimum USD amount to purchase the token_maximumPresaleAmount - The maximum amount of token available for a presale round",
      },
      "setPresaleTokenAddress(address)": {
        details: "_newTokenAddress - Address of token that'll be presaled",
      },
      "transferOwnership(address)": {
        details:
          "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      },
    },
    version: 1,
  },
  userdoc: {
    kind: "user",
    methods: {
      "getCurrentPresaleDetails()": {
        notice:
          "Getting the Current Presale Details, including: - Starting Time - USD Price - Minimum USD Purchase - Maximum Presale Amount",
      },
      "getCurrentPresaleRound()": {
        notice: "Get Current Presale Round",
      },
      "getPresaleAmountByRound(uint256)": {
        notice: "Get presale total amount By presale round",
      },
      "getTotalPresaleAmount()": {
        notice: "Get total amount of presale from all rounds",
      },
      "getTotalPresaleRound()": {
        notice: "Get total amount of presale round",
      },
      "presaleTokens(address,uint256,address)": {
        notice: "Execute the Presale of ALPS Token in exchange of other token",
      },
      "setPresaleReceiver(address)": {
        notice: "Set new Presale Receiver Address",
      },
      "setPresaleRound(uint256,uint256,uint256,uint256,uint256)": {
        notice: "Creating/Updating a presale round information",
      },
      "setPresaleTokenAddress(address)": {
        notice: "Set new Presale Token Address",
      },
    },
    version: 1,
  },
};
